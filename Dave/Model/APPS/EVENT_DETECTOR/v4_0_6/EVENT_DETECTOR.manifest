package Model.APPS.EVENT_DETECTOR.v4_0_6;

/*
 Copyright (c) 2015, Infineon Technologies AG
 All rights reserved.
											
 Redistribution and use in source and binary forms, with or without modification, are permitted provided that the
 following conditions are met:
																			 
 Redistributions of source code must retain the above copyright notice, this list of conditions and the following
 disclaimer.
  
 Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
 disclaimer in the documentation and/or other materials provided with the distribution.
  
 Neither the name of the copyright holders nor the names of its contributors may be used to endorse or promote
 products derived from this software without specific prior written permission.
																			 
 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
																			 
 To improve the quality of the software, users are encouraged to share modifications, enhancements or bug fixes with
 Infineon Technologies AG: dave@infineon.com. */
/*************** Revision History **********************************************
Version     Date          Description

4.0.0       16-Feb-2015   Initial version for DAVEv4
4.0.2       20-May-2015   1. Coding guidelines update for PR release<br>
                          2. Display name of the signal "trigger" changed to "trigger_in"<br>
4.0.4       08-Oct-2015   1. XMC14, XMC48, XMC47 device support added<br>
                          2. UI control alignment issue in windows classic view is fixed<br>
4.0.6       18-Dec-2015   1. Added support for XMC4300 devices.<br>                                                    
*******************************************************************************/
/* Import statements */
import ifx.davex.app.manifest.*

class  EVENT_DETECTOR extends EVENT_DETECTOR_GUI {

	/**
	 * APP version
	 * Format: a string with three digit separated by a dot.
	 */
	def version            = '4.0.6'
	
	/**
	 * APP categories declaration. 
	 * It is list of strings. Subcategories are separated by slash.
	 * No limits on number of categories and subcategories depth.
	 */
	def categoriesDescription = ["System"] 

	/** 
	 * Minimum DAVE version required for this APP.
	 * 
	 * It is string with three digit separated by a dot.
	 */
	def minDaveVersion           = '4.0.0'
	
	/** 
	 * Keywords used by search feature in APPs selection view
	 * 
	 * It is a list of string.
	 */
	def keywords      = [
		'all',
		'ERU',
		'Trigger',
		'EVENT_DETECTOR',
		'external interrupt',
		'interrupt',
        'Event Request'
		]
	
	/** 
	 * softwareIDs is used to declare which devices are compatible with this APP.
	 * It is a map with key a string containing a pattern that shall match the SW id of
	 * the device and as value the minimal version of the APP.
	 */	
	def softwareIDs       = [
		"XMC4.5.*.*.*":"1.0.0",
		"XMC4.4.*.*.*":"1.0.0",
		"XMC4.3.*.*.*":"1.0.0",
		"XMC4.2.*.*.*":"1.0.0",
		"XMC4.1.*.*.*":"1.0.0",
		"XMC4.7.*.*.*":"1.0.0",
		"XMC4.8.*.*.*":"1.0.0",
		"XMC1.1.*.*.*":"1.0.0",
		"XMC1.2.*.*.*":"1.0.0",
		"XMC1.3.*.*.*":"1.0.0",
		"XMC1.4.*.*.*":"1.0.0"
	]

	/**
	 * Singleton property:
	 * When it is true the APP can be instantiated only once.
	 */
	def singleton     = false
	/**
	 * initProvider property
	 * It shall be true to add a call to <APPName>_Init()
	 */
	def initProvider  = true
	/**
	 * Deprecated APP
	 * Set it to true to indicate that the APP shall be not used for new projects.
	 */
	def deprecated    = false
	/**
	 * Sharable property.
	 * It shall be true to allows multiple APPs to require the same instance of this APP.
	 */
	def sharable      = true

	/**
	 *  APP function description.
	 */ 
	def description = "Provides the configuration for Event Request Source \nand Event Trigger Logic units of ERU"
	
	/* End   : EVENT_DETECTOR property section */
	
	/* Begin : User variable sections */
	MVirtualResourceGroup hwres_eru_ers_etl
	/* Signal declaration */
	MVirtualSignal vs_event_detector_input_A
	MVirtualSignal vs_event_detector_input_B
	MVirtualSignal vs_event_detector_TriggerPulse
	MVirtualSignal vs_event_detector_FlagStatus
	/* End   : User variable section */

	/* EVENT_DETECTOR Constructor */
	public EVENT_DETECTOR(DaveEnv daveEnv) {
		/* ---------------------------------------------------------- */
	    /* ------------ Hardware resource consumption block --------- */
	    /* ---------------------------------------------------------- */
		hwres_eru_ers_etl =  MVirtualResourceGroup("ers_etl", ["peripheral", "eru", "*", "ers_etl","*"], true)
			  
		/* ---------------------------------------------------------- */
		/* -------------- APP IO Signals ---------------------------- */
		/* ---------------------------------------------------------- */
		vs_event_detector_input_A      = MVirtualSignal(hwres_eru_ers_etl,"signal_a","a", true, true)
		vs_event_detector_input_B      = MVirtualSignal(hwres_eru_ers_etl,"signal_b","b", true, true)
		vs_event_detector_TriggerPulse = MVirtualSignal(hwres_eru_ers_etl,"trigger_out","tr", true, true)
		vs_event_detector_FlagStatus   = MVirtualSignal(hwres_eru_ers_etl,"status","fl", true, true)
		
	}
	
	/* File Generation */
	def generateFiles(){
		copy("event_detector.c", "event_detector.c")
		copy("event_detector.h", "event_detector.h")
		generate("event_detector_conf_c.tmpl", "event_detector_conf.c")
		generate("event_detector_extern_h.tmpl", "event_detector_extern.h")
		generate("event_detector_conf_h.tmpl", "event_detector_conf.h")
	}
}
