   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_usic.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_USIC_CH_SetInputTriggerCombinationMode,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_USIC_CH_SetInputTriggerCombinationMode:
  25              	.LFB151:
  26              	 .file 1 "C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2019-07-01
   4:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
   7:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.                        
  11:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *                                             
  12:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * following conditions are met:   
  14:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  15:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer.                        
  17:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  18:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  21:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  24:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  32:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
  35:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  37:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  38:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  39:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  40:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  41:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  42:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  43:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  44:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  45:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *      
  46:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  47:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  49:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  50:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  51:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  52:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  53:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  54:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  55:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  56:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  57:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  58:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  59:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  60:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  62:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  63:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  64:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  65:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  67:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  68:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  69:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  70:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  71:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  72:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  73:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  74:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  75:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  76:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  77:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  78:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  79:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  80:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  81:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  82:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  83:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2018-09-29:
  84:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  85:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  86:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-05-07:
  87:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  88:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  89:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-07-01:
  90:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Changed XMC_USIC_CH_SetBaudrateEx() input parameter types
  91:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  92:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
  93:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  94:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
  95:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
  96:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
  97:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
  98:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
  99:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
 100:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 101:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 102:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
 103:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 104:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 105:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
 106:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 107:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 108:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 109:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 110:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 111:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 112:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 113:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 114:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 115:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 116:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 117:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 118:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 119:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 120:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 121:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 122:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 123:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 124:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 125:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 126:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 127:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 128:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 129:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 130:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 131:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 132:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 133:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 134:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 135:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 136:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 137:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 138:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 139:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 140:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 141:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 142:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 143:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 144:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 145:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 146:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 147:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 148:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 149:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 150:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 151:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 152:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 153:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 154:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 155:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 156:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 157:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 158:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 159:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 160:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 161:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 162:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 163:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 164:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 165:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 166:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc1_usic_map.h"
 167:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 168:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 169:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 170:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc4_usic_map.h"
 171:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 172:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 173:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 174:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 175:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 176:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 177:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 178:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 179:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 180:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 181:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 182:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 183:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 184:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 185:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 186:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 187:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 188:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 189:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** */
 190:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 191:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 192:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 193:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 194:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 195:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 196:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 197:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 198:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 199:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 200:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 201:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 202:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 203:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 204:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 205:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 206:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 207:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 208:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 209:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 210:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 211:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 212:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 213:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 214:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 215:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 216:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 217:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 218:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 219:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 220:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 221:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 222:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 223:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 224:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 225:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 226:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 227:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 228:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 229:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 230:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 231:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 232:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 233:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 234:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 235:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 236:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 237:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 238:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 239:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 240:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 241:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 242:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 243:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 244:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 245:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 246:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 247:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 248:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 249:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 250:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 251:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 252:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 253:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 254:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 255:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 256:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 257:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 258:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 259:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 260:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 261:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 262:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 263:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 264:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 265:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 266:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 267:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 268:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 269:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 270:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 271:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 272:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 273:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 274:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 275:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 276:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 277:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 278:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 279:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 280:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 281:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 282:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 283:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 284:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 285:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** */
 286:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 287:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 288:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 289:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 290:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 291:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 292:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 293:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 294:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 295:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** */
 296:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 297:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 298:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 299:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 300:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 301:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 302:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 303:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 304:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** */
 305:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 306:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 307:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 308:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 309:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 310:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 311:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 312:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 313:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 314:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 315:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** */
 316:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 317:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 318:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 319:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 320:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 321:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 322:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 323:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 324:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** */
 325:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 326:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 327:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 328:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 329:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 330:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 331:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 332:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 333:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** */
 334:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 335:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 336:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 337:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 338:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 339:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 340:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 341:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 342:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** */
 343:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 344:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 345:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 346:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 347:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 348:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 349:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 350:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 351:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 352:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 353:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 354:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 355:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 356:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** */
 357:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 358:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 359:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 360:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 361:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 362:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 363:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 364:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 365:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** */
 366:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 367:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 368:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 369:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 370:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 371:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 372:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 373:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 374:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** */
 375:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 376:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 377:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 378:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 379:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 380:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 381:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 382:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 383:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** */
 384:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 385:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 386:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 387:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 388:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 389:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 390:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 391:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 392:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** */
 393:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 394:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 395:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 396:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 397:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 398:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 399:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 400:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 401:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 402:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** */
 403:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 404:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 405:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 406:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 407:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 408:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 409:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 410:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 411:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 412:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** */
 413:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 414:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 415:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 416:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 417:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 418:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 419:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 420:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 421:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** */
 422:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 423:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 424:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 425:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 426:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 427:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 428:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 429:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 430:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 431:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** */
 432:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 433:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 434:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 435:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 436:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 437:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 438:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 439:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 440:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** */
 441:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 442:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 443:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 444:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 445:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 446:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 447:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 448:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 449:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 450:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 451:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** */
 452:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 453:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 454:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 455:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 456:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 457:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 458:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 459:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 460:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 461:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** */
 462:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 463:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 464:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 465:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 466:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 467:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 468:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 469:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 470:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 471:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 472:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 473:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 474:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 475:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma push
 476:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma anon_unions
 477:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 478:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning 586
 479:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 480:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 481:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 482:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 483:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 484:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 485:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 486:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 487:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file, 
 488:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 489:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 490:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 491:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 492:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 493:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 494:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 495:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 496:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 497:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 498:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 499:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 500:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 501:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 502:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 503:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 504:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 505:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 506:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 507:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 508:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 509:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 510:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 511:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 512:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   };
 513:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 514:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 515:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 516:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 517:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 518:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 519:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 520:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 521:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 522:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   };
 523:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 524:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 525:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 526:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 527:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 528:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 529:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 530:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 531:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 532:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 533:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 534:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 535:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 536:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 537:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 538:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 539:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 540:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 541:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 542:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 543:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 544:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 545:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 546:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 547:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 548:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 549:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma pop
 550:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 551:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning restore
 552:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 553:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 554:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 555:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 556:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 557:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 558:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 559:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 560:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 561:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 562:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 563:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 564:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 565:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 566:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 567:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 568:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 569:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 570:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 571:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 572:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 573:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 574:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 575:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** }
 576:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 577:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 578:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 579:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 580:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 581:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 582:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 583:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 584:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 585:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 586:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 587:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 588:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 589:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 590:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** }
 591:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 592:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 593:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 594:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 595:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 596:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 597:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 598:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 599:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 600:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 601:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 602:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 603:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 604:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 605:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 606:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 607:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 608:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 609:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 610:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 611:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 612:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 613:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 614:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 615:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 616:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 617:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 618:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 619:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 620:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 621:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 622:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 623:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 624:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 625:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 626:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 627:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 628:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 629:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 630:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 631:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 632:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 633:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 634:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 635:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 636:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 637:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 638:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 639:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 640:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 641:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 642:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 643:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 644:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 645:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 646:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 647:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 648:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 649:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 650:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 651:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 652:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 653:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 654:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 655:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 656:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 657:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 658:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 659:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 660:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 661:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 662:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 663:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 664:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 665:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 666:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 667:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 668:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 669:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 670:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 671:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 672:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 673:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 674:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 675:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 676:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. Only integer dividers of peripheral clock are achievable
 677:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 678:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *            This can be related to the number of samples for each logic state of the data signal.
 679:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *            \b Range: 1 to 32. Value should be chosen based on the protocol used.
 680:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 681:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *      \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 682:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *            @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 683:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 684:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 685:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel using the integer divider which restrics the achieva
 686:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 687:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 688:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 689:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 690:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 691:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 692:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 693:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 694:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 695:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 696:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 697:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 698:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 699:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel for .\n
 700:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 701:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 702:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used baudrate (fCTQIN) of a USIC channel. \n\n
 703:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 704:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 705:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 706:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 707:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 708:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 709:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel);
 710:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 711:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 712:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 713:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 714:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 715:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 716:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 717:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used SCLK frequency of a USIC channel. \n\n
 718:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 719:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 720:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 721:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 722:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 723:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 724:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel);
 725:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 726:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 727:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 728:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 729:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 730:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 731:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 732:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used MCLK frequency of a USIC channel. \n\n
 733:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 734:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 735:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 736:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 737:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 738:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 739:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel);
 740:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 741:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 742:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 743:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 744:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 745:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 746:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 747:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 748:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 749:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 750:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 751:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 752:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 753:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 754:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 755:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 756:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 757:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 758:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 759:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 760:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 761:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 		                                         const uint16_t pdiv,
 762:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 												 const uint32_t oversampling,
 763:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 												 const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 764:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 765:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 766:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 767:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 768:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 769:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 770:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 771:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 772:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 773:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 774:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 775:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 776:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 777:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 778:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 779:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc. 
 780:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *  
 781:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 782:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 783:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 784:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 785:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 786:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 787:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 788:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 789:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** }
 790:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 791:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 792:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 793:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 794:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 795:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 796:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 797:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 798:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 799:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 800:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 801:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 802:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 803:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 804:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 805:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 806:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_INSW_Msk;
 807:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** }
 808:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 809:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 810:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 811:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 812:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 813:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 814:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 815:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 816:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 817:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 818:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 819:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 820:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 821:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 822:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 823:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 824:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 825:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 826:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 827:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 828:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 829:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** }
 830:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 831:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 832:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 833:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 834:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 835:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 836:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 837:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 838:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 839:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 840:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 841:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 842:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 843:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 844:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 845:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 846:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 847:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 848:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** }
 849:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 850:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 851:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 852:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 853:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 854:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 855:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 856:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 857:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 858:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 859:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 860:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 861:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 862:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 863:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 864:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 865:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 866:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 867:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** }
 868:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 869:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 870:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 871:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 872:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 873:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 874:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 875:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 876:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 877:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 878:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 879:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 880:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 881:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 882:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 883:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 884:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** }
 885:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 886:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 887:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 888:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 889:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 890:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 891:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 892:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 893:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 894:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 895:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 896:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 897:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 898:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 899:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &=(uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 900:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** }
 901:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 902:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 903:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 904:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 905:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 906:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 907:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 908:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 909:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 910:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 911:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 912:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 913:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 914:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 915:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 916:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 917:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 918:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 919:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** }
 920:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 921:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 922:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 923:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 924:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 925:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 926:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 927:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 928:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 929:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 930:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 931:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 932:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 933:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 934:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 935:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 936:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 937:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** }
 938:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 939:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 940:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 941:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 942:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 943:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 944:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 945:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 946:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
 947:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
 948:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
 949:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 950:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 951:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 952:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 953:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
 954:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 955:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |=(uint32_t)USIC_CH_DXCR_DSEN_Msk;
 956:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** }
 957:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 958:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 959:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 960:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 961:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 962:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 963:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 964:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 965:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
 966:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
 967:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 968:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 969:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
 970:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 971:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
 972:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 973:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DSEN_Msk;
 974:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** }
 975:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 976:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 977:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 978:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 979:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 980:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
 981:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 982:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 983:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 984:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
 985:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 986:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 987:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 988:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 989:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
 990:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_t input,
 991:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_fr
 992:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
 993:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
 994:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
 995:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** }
 996:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
 997:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 998:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 999:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1000:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1001:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1002:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
1003:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1004:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
1005:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1006:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
1007:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
1008:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1009:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1010:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
1011:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
1012:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_t input,
1013:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_COMBINATION_MODE_
1014:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
  27              	 .loc 1 1014 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
  45 000c 1346     	 mov r3,r2
  46 000e BB70     	 strb r3,[r7,#2]
1015:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
  47              	 .loc 1 1015 0
  48 0010 F878     	 ldrb r0,[r7,#3]
  49 0012 FB78     	 ldrb r3,[r7,#3]
  50 0014 7A68     	 ldr r2,[r7,#4]
  51 0016 0633     	 adds r3,r3,#6
  52 0018 9B00     	 lsls r3,r3,#2
  53 001a 1344     	 add r3,r3,r2
  54 001c 5B68     	 ldr r3,[r3,#4]
  55 001e 23F44062 	 bic r2,r3,#3072
1016:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
  56              	 .loc 1 1016 0
  57 0022 BB78     	 ldrb r3,[r7,#2]
  58 0024 9B02     	 lsls r3,r3,#10
1015:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
  59              	 .loc 1 1015 0
  60 0026 1A43     	 orrs r2,r2,r3
  61 0028 7968     	 ldr r1,[r7,#4]
  62 002a 831D     	 adds r3,r0,#6
  63 002c 9B00     	 lsls r3,r3,#2
  64 002e 0B44     	 add r3,r3,r1
  65 0030 5A60     	 str r2,[r3,#4]
1017:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** }
  66              	 .loc 1 1017 0
  67 0032 0C37     	 adds r7,r7,#12
  68              	.LCFI3:
  69              	 .cfi_def_cfa_offset 4
  70 0034 BD46     	 mov sp,r7
  71              	.LCFI4:
  72              	 .cfi_def_cfa_register 13
  73              	 
  74 0036 5DF8047B 	 ldr r7,[sp],#4
  75              	.LCFI5:
  76              	 .cfi_restore 7
  77              	 .cfi_def_cfa_offset 0
  78 003a 7047     	 bx lr
  79              	 .cfi_endproc
  80              	.LFE151:
  82              	 .section .text.XMC_USIC_CH_SetBRGInputClockSource,"ax",%progbits
  83              	 .align 2
  84              	 .thumb
  85              	 .thumb_func
  87              	XMC_USIC_CH_SetBRGInputClockSource:
  88              	.LFB152:
1018:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** 
1019:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** /**
1020:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1021:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1022:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
1023:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1024:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
1025:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1026:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
1027:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  *
1028:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1029:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
1030:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****  */
1031:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
1032:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** {
  89              	 .loc 1 1032 0
  90              	 .cfi_startproc
  91              	 
  92              	 
  93              	 
  94 0000 80B4     	 push {r7}
  95              	.LCFI6:
  96              	 .cfi_def_cfa_offset 4
  97              	 .cfi_offset 7,-4
  98 0002 83B0     	 sub sp,sp,#12
  99              	.LCFI7:
 100              	 .cfi_def_cfa_offset 16
 101 0004 00AF     	 add r7,sp,#0
 102              	.LCFI8:
 103              	 .cfi_def_cfa_register 7
 104 0006 7860     	 str r0,[r7,#4]
 105 0008 0B46     	 mov r3,r1
 106 000a FB70     	 strb r3,[r7,#3]
1033:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
 107              	 .loc 1 1033 0
 108 000c 7B68     	 ldr r3,[r7,#4]
 109 000e 5B69     	 ldr r3,[r3,#20]
 110 0010 23F00302 	 bic r2,r3,#3
 111 0014 FB78     	 ldrb r3,[r7,#3]
 112 0016 1A43     	 orrs r2,r2,r3
 113 0018 7B68     	 ldr r3,[r7,#4]
 114 001a 5A61     	 str r2,[r3,#20]
1034:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_usic.h **** }
 115              	 .loc 1 1034 0
 116 001c 0C37     	 adds r7,r7,#12
 117              	.LCFI9:
 118              	 .cfi_def_cfa_offset 4
 119 001e BD46     	 mov sp,r7
 120              	.LCFI10:
 121              	 .cfi_def_cfa_register 13
 122              	 
 123 0020 5DF8047B 	 ldr r7,[sp],#4
 124              	.LCFI11:
 125              	 .cfi_restore 7
 126              	 .cfi_def_cfa_offset 0
 127 0024 7047     	 bx lr
 128              	 .cfi_endproc
 129              	.LFE152:
 131 0026 00BF     	 .section .text.XMC_USIC_CH_Enable,"ax",%progbits
 132              	 .align 2
 133              	 .global XMC_USIC_CH_Enable
 134              	 .thumb
 135              	 .thumb_func
 137              	XMC_USIC_CH_Enable:
 138              	.LFB238:
 139              	 .file 2 "../Libraries/XMCLib/src/xmc_usic.c"
   1:../Libraries/XMCLib/src/xmc_usic.c **** /**
   2:../Libraries/XMCLib/src/xmc_usic.c ****  * @file xmc_usic.c
   3:../Libraries/XMCLib/src/xmc_usic.c ****  * @date 2019-07-01
   4:../Libraries/XMCLib/src/xmc_usic.c ****  *
   5:../Libraries/XMCLib/src/xmc_usic.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_usic.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_usic.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_usic.c ****  *
   9:../Libraries/XMCLib/src/xmc_usic.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_usic.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_usic.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_usic.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_usic.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  18:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_usic.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  21:../Libraries/XMCLib/src/xmc_usic.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_usic.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_usic.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_usic.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_usic.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_usic.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_usic.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_usic.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_usic.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_usic.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_usic.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_usic.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_usic.c ****  *
  36:../Libraries/XMCLib/src/xmc_usic.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_usic.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_usic.c ****  *
  39:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Initial draft <br>
  41:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Documentation improved <br>
  42:../Libraries/XMCLib/src/xmc_usic.c ****  *
  43:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-05-08:
  44:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Clearing bit fields PDIV, PCTQ, PPPEN in XMC_USIC_CH_SetBaudrate() API <br>
  45:../Libraries/XMCLib/src/xmc_usic.c ****  *      
  46:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-06-20:
  47:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  48:../Libraries/XMCLib/src/xmc_usic.c ****  *
  49:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-08-27:
  50:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  51:../Libraries/XMCLib/src/xmc_usic.c ****  *
  52:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-08-28:
  53:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added asserts to XMC_USIC_CH_ConfigExternalInputSignalToBRG() <br>
  54:../Libraries/XMCLib/src/xmc_usic.c ****  *
  55:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-09-01:
  56:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Fixed warning in the asserts <br>
  57:../Libraries/XMCLib/src/xmc_usic.c ****  *
  58:../Libraries/XMCLib/src/xmc_usic.c ****  * 2018-09-29:
  59:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  60:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  61:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-03-30:
  62:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Changed XMC_USIC_Enable() adding polling to check clock ungate
  63:../Libraries/XMCLib/src/xmc_usic.c ****  *
  64:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-05-07:
  65:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  66:../Libraries/XMCLib/src/xmc_usic.c ****  *
  67:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-07-01:
  68:../Libraries/XMCLib/src/xmc_usic.c ****  *     - XMC_USIC_CH_SetBaudrateEx() change type of input parameters
  69:../Libraries/XMCLib/src/xmc_usic.c ****  *
  70:../Libraries/XMCLib/src/xmc_usic.c ****  * @endcond
  71:../Libraries/XMCLib/src/xmc_usic.c ****  *
  72:../Libraries/XMCLib/src/xmc_usic.c ****  */
  73:../Libraries/XMCLib/src/xmc_usic.c **** 
  74:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  75:../Libraries/XMCLib/src/xmc_usic.c ****  * HEADER FILES
  76:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  77:../Libraries/XMCLib/src/xmc_usic.c **** 
  78:../Libraries/XMCLib/src/xmc_usic.c **** #include "xmc_usic.h"
  79:../Libraries/XMCLib/src/xmc_usic.c **** #include "xmc_scu.h"
  80:../Libraries/XMCLib/src/xmc_usic.c **** 
  81:../Libraries/XMCLib/src/xmc_usic.c **** #include <stdlib.h>     /* abs */
  82:../Libraries/XMCLib/src/xmc_usic.c **** 
  83:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  84:../Libraries/XMCLib/src/xmc_usic.c ****  * MACROS
  85:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  86:../Libraries/XMCLib/src/xmc_usic.c **** 
  87:../Libraries/XMCLib/src/xmc_usic.c **** #define USIC_CH_INPR_Msk       (0x7UL)
  88:../Libraries/XMCLib/src/xmc_usic.c **** 
  89:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  90:../Libraries/XMCLib/src/xmc_usic.c ****  * API IMPLEMENTATION
  91:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  92:../Libraries/XMCLib/src/xmc_usic.c **** 
  93:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel)
  94:../Libraries/XMCLib/src/xmc_usic.c **** {
 140              	 .loc 2 94 0
 141              	 .cfi_startproc
 142              	 
 143              	 
 144 0000 80B5     	 push {r7,lr}
 145              	.LCFI12:
 146              	 .cfi_def_cfa_offset 8
 147              	 .cfi_offset 7,-8
 148              	 .cfi_offset 14,-4
 149 0002 82B0     	 sub sp,sp,#8
 150              	.LCFI13:
 151              	 .cfi_def_cfa_offset 16
 152 0004 00AF     	 add r7,sp,#0
 153              	.LCFI14:
 154              	 .cfi_def_cfa_register 7
 155 0006 7860     	 str r0,[r7,#4]
  95:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_Enable: channel not valid", XMC_USIC_IsChannelValid(channel));
  96:../Libraries/XMCLib/src/xmc_usic.c **** 
  97:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1))
 156              	 .loc 2 97 0
 157 0008 7B68     	 ldr r3,[r7,#4]
 158 000a 144A     	 ldr r2,.L9
 159 000c 9342     	 cmp r3,r2
 160 000e 03D0     	 beq .L4
 161              	 .loc 2 97 0 is_stmt 0 discriminator 1
 162 0010 7B68     	 ldr r3,[r7,#4]
 163 0012 134A     	 ldr r2,.L9+4
 164 0014 9342     	 cmp r3,r2
 165 0016 03D1     	 bne .L5
 166              	.L4:
  98:../Libraries/XMCLib/src/xmc_usic.c ****   {
  99:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC0);
 167              	 .loc 2 99 0 is_stmt 1
 168 0018 1248     	 ldr r0,.L9+8
 169 001a FFF7FEFF 	 bl XMC_USIC_Enable
 170 001e 0AE0     	 b .L6
 171              	.L5:
 100:../Libraries/XMCLib/src/xmc_usic.c ****   }
 101:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)
 102:../Libraries/XMCLib/src/xmc_usic.c ****   else if((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1))
 172              	 .loc 2 102 0
 173 0020 7B68     	 ldr r3,[r7,#4]
 174 0022 114A     	 ldr r2,.L9+12
 175 0024 9342     	 cmp r3,r2
 176 0026 03D0     	 beq .L7
 177              	 .loc 2 102 0 is_stmt 0 discriminator 1
 178 0028 7B68     	 ldr r3,[r7,#4]
 179 002a 104A     	 ldr r2,.L9+16
 180 002c 9342     	 cmp r3,r2
 181 002e 02D1     	 bne .L6
 182              	.L7:
 103:../Libraries/XMCLib/src/xmc_usic.c ****   {
 104:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC1);
 183              	 .loc 2 104 0 is_stmt 1
 184 0030 0F48     	 ldr r0,.L9+20
 185 0032 FFF7FEFF 	 bl XMC_USIC_Enable
 186              	.L6:
 105:../Libraries/XMCLib/src/xmc_usic.c ****   }
 106:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 107:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)
 108:../Libraries/XMCLib/src/xmc_usic.c ****   else if((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1))
 109:../Libraries/XMCLib/src/xmc_usic.c ****   {
 110:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC2);
 111:../Libraries/XMCLib/src/xmc_usic.c ****   }
 112:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 113:../Libraries/XMCLib/src/xmc_usic.c ****   else
 114:../Libraries/XMCLib/src/xmc_usic.c ****   {
 115:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0U/*Always*/);
 116:../Libraries/XMCLib/src/xmc_usic.c ****   }
 117:../Libraries/XMCLib/src/xmc_usic.c **** 
 118:../Libraries/XMCLib/src/xmc_usic.c ****   /* USIC channel switched on*/
 119:../Libraries/XMCLib/src/xmc_usic.c ****   channel->KSCFG = (USIC_CH_KSCFG_MODEN_Msk | USIC_CH_KSCFG_BPMODEN_Msk);
 187              	 .loc 2 119 0
 188 0036 7B68     	 ldr r3,[r7,#4]
 189 0038 0322     	 movs r2,#3
 190 003a DA60     	 str r2,[r3,#12]
 120:../Libraries/XMCLib/src/xmc_usic.c ****   while ((channel->KSCFG & USIC_CH_KSCFG_MODEN_Msk) == 0U)
 191              	 .loc 2 120 0
 192 003c 00BF     	 nop
 193              	.L8:
 194              	 .loc 2 120 0 is_stmt 0 discriminator 1
 195 003e 7B68     	 ldr r3,[r7,#4]
 196 0040 DB68     	 ldr r3,[r3,#12]
 197 0042 03F00103 	 and r3,r3,#1
 198 0046 002B     	 cmp r3,#0
 199 0048 F9D0     	 beq .L8
 121:../Libraries/XMCLib/src/xmc_usic.c ****   {
 122:../Libraries/XMCLib/src/xmc_usic.c ****     /* Wait till the channel is enabled */
 123:../Libraries/XMCLib/src/xmc_usic.c ****   }
 124:../Libraries/XMCLib/src/xmc_usic.c **** 
 125:../Libraries/XMCLib/src/xmc_usic.c ****   /* Set USIC channel in IDLE mode */
 126:../Libraries/XMCLib/src/xmc_usic.c ****   channel->CCR &= (uint32_t)~USIC_CH_CCR_MODE_Msk;
 200              	 .loc 2 126 0 is_stmt 1
 201 004a 7B68     	 ldr r3,[r7,#4]
 202 004c 1B6C     	 ldr r3,[r3,#64]
 203 004e 23F00F02 	 bic r2,r3,#15
 204 0052 7B68     	 ldr r3,[r7,#4]
 205 0054 1A64     	 str r2,[r3,#64]
 127:../Libraries/XMCLib/src/xmc_usic.c **** }
 206              	 .loc 2 127 0
 207 0056 0837     	 adds r7,r7,#8
 208              	.LCFI15:
 209              	 .cfi_def_cfa_offset 8
 210 0058 BD46     	 mov sp,r7
 211              	.LCFI16:
 212              	 .cfi_def_cfa_register 13
 213              	 
 214 005a 80BD     	 pop {r7,pc}
 215              	.L10:
 216              	 .align 2
 217              	.L9:
 218 005c 00000340 	 .word 1073938432
 219 0060 00020340 	 .word 1073938944
 220 0064 08000340 	 .word 1073938440
 221 0068 00000248 	 .word 1208090624
 222 006c 00020248 	 .word 1208091136
 223 0070 08000248 	 .word 1208090632
 224              	 .cfi_endproc
 225              	.LFE238:
 227              	 .section .text.XMC_USIC_CH_Disable,"ax",%progbits
 228              	 .align 2
 229              	 .global XMC_USIC_CH_Disable
 230              	 .thumb
 231              	 .thumb_func
 233              	XMC_USIC_CH_Disable:
 234              	.LFB239:
 128:../Libraries/XMCLib/src/xmc_usic.c **** 
 129:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel)
 130:../Libraries/XMCLib/src/xmc_usic.c **** {
 235              	 .loc 2 130 0
 236              	 .cfi_startproc
 237              	 
 238              	 
 239              	 
 240 0000 80B4     	 push {r7}
 241              	.LCFI17:
 242              	 .cfi_def_cfa_offset 4
 243              	 .cfi_offset 7,-4
 244 0002 83B0     	 sub sp,sp,#12
 245              	.LCFI18:
 246              	 .cfi_def_cfa_offset 16
 247 0004 00AF     	 add r7,sp,#0
 248              	.LCFI19:
 249              	 .cfi_def_cfa_register 7
 250 0006 7860     	 str r0,[r7,#4]
 131:../Libraries/XMCLib/src/xmc_usic.c ****   channel->KSCFG = (uint32_t)((channel->KSCFG & (~USIC_CH_KSCFG_MODEN_Msk)) | USIC_CH_KSCFG_BPMODEN
 251              	 .loc 2 131 0
 252 0008 7B68     	 ldr r3,[r7,#4]
 253 000a DB68     	 ldr r3,[r3,#12]
 254 000c 23F00303 	 bic r3,r3,#3
 255 0010 43F00202 	 orr r2,r3,#2
 256 0014 7B68     	 ldr r3,[r7,#4]
 257 0016 DA60     	 str r2,[r3,#12]
 132:../Libraries/XMCLib/src/xmc_usic.c **** }
 258              	 .loc 2 132 0
 259 0018 0C37     	 adds r7,r7,#12
 260              	.LCFI20:
 261              	 .cfi_def_cfa_offset 4
 262 001a BD46     	 mov sp,r7
 263              	.LCFI21:
 264              	 .cfi_def_cfa_register 13
 265              	 
 266 001c 5DF8047B 	 ldr r7,[sp],#4
 267              	.LCFI22:
 268              	 .cfi_restore 7
 269              	 .cfi_def_cfa_offset 0
 270 0020 7047     	 bx lr
 271              	 .cfi_endproc
 272              	.LFE239:
 274 0022 00BF     	 .section .text.XMC_USIC_CH_SetBaudrate,"ax",%progbits
 275              	 .align 2
 276              	 .global XMC_USIC_CH_SetBaudrate
 277              	 .thumb
 278              	 .thumb_func
 280              	XMC_USIC_CH_SetBaudrate:
 281              	.LFB240:
 133:../Libraries/XMCLib/src/xmc_usic.c **** 
 134:../Libraries/XMCLib/src/xmc_usic.c **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 135:../Libraries/XMCLib/src/xmc_usic.c **** {
 282              	 .loc 2 135 0
 283              	 .cfi_startproc
 284              	 
 285              	 
 286 0000 80B5     	 push {r7,lr}
 287              	.LCFI23:
 288              	 .cfi_def_cfa_offset 8
 289              	 .cfi_offset 7,-8
 290              	 .cfi_offset 14,-4
 291 0002 8EB0     	 sub sp,sp,#56
 292              	.LCFI24:
 293              	 .cfi_def_cfa_offset 64
 294 0004 00AF     	 add r7,sp,#0
 295              	.LCFI25:
 296              	 .cfi_def_cfa_register 7
 297 0006 F860     	 str r0,[r7,#12]
 298 0008 B960     	 str r1,[r7,#8]
 299 000a 7A60     	 str r2,[r7,#4]
 136:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
 137:../Libraries/XMCLib/src/xmc_usic.c ****   
 138:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t peripheral_clock;
 139:../Libraries/XMCLib/src/xmc_usic.c ****   
 140:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t clock_divider;
 141:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t clock_divider_min;
 142:../Libraries/XMCLib/src/xmc_usic.c **** 
 143:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv;
 144:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_int;
 145:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_int_min;
 146:../Libraries/XMCLib/src/xmc_usic.c ****   
 147:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_frac;
 148:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_frac_min;
 149:../Libraries/XMCLib/src/xmc_usic.c **** 
 150:../Libraries/XMCLib/src/xmc_usic.c ****   /* The rate and peripheral clock are divided by 100 to be able to use only 32bit arithmetic */
 151:../Libraries/XMCLib/src/xmc_usic.c ****   if ((rate >= 100U) && (oversampling != 0U))
 300              	 .loc 2 151 0
 301 000c BB68     	 ldr r3,[r7,#8]
 302 000e 632B     	 cmp r3,#99
 303 0010 58D9     	 bls .L13
 304              	 .loc 2 151 0 is_stmt 0 discriminator 1
 305 0012 7B68     	 ldr r3,[r7,#4]
 306 0014 002B     	 cmp r3,#0
 307 0016 55D0     	 beq .L13
 152:../Libraries/XMCLib/src/xmc_usic.c ****   {
 153:../Libraries/XMCLib/src/xmc_usic.c ****     peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency() / 100U;
 308              	 .loc 2 153 0 is_stmt 1
 309 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 310 001c 0246     	 mov r2,r0
 311 001e 2E4B     	 ldr r3,.L19
 312 0020 A3FB0223 	 umull r2,r3,r3,r2
 313 0024 5B09     	 lsrs r3,r3,#5
 314 0026 3B62     	 str r3,[r7,#32]
 154:../Libraries/XMCLib/src/xmc_usic.c ****     rate = rate / 100U;
 315              	 .loc 2 154 0
 316 0028 BB68     	 ldr r3,[r7,#8]
 317 002a 2B4A     	 ldr r2,.L19
 318 002c A2FB0323 	 umull r2,r3,r2,r3
 319 0030 5B09     	 lsrs r3,r3,#5
 320 0032 BB60     	 str r3,[r7,#8]
 155:../Libraries/XMCLib/src/xmc_usic.c **** 
 156:../Libraries/XMCLib/src/xmc_usic.c ****     clock_divider_min = 1U;
 321              	 .loc 2 156 0
 322 0034 0123     	 movs r3,#1
 323 0036 FB62     	 str r3,[r7,#44]
 157:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_int_min = 1U;
 324              	 .loc 2 157 0
 325 0038 0123     	 movs r3,#1
 326 003a BB62     	 str r3,[r7,#40]
 158:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_frac_min = 0x3ffU;
 327              	 .loc 2 158 0
 328 003c 40F2FF33 	 movw r3,#1023
 329 0040 7B62     	 str r3,[r7,#36]
 159:../Libraries/XMCLib/src/xmc_usic.c **** 
 160:../Libraries/XMCLib/src/xmc_usic.c ****     for(clock_divider = 1023U; clock_divider > 0U; --clock_divider)
 330              	 .loc 2 160 0
 331 0042 40F2FF33 	 movw r3,#1023
 332 0046 3B63     	 str r3,[r7,#48]
 333 0048 22E0     	 b .L14
 334              	.L16:
 161:../Libraries/XMCLib/src/xmc_usic.c ****     {
 162:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv = ((peripheral_clock * clock_divider) / (rate * oversampling));
 335              	 .loc 2 162 0
 336 004a 3B6A     	 ldr r3,[r7,#32]
 337 004c 3A6B     	 ldr r2,[r7,#48]
 338 004e 02FB03F2 	 mul r2,r2,r3
 339 0052 BB68     	 ldr r3,[r7,#8]
 340 0054 7968     	 ldr r1,[r7,#4]
 341 0056 01FB03F3 	 mul r3,r1,r3
 342 005a B2FBF3F3 	 udiv r3,r2,r3
 343 005e FB61     	 str r3,[r7,#28]
 163:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_int = pdiv >> 10U;
 344              	 .loc 2 163 0
 345 0060 FB69     	 ldr r3,[r7,#28]
 346 0062 9B0A     	 lsrs r3,r3,#10
 347 0064 BB61     	 str r3,[r7,#24]
 164:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_frac = pdiv & 0x3ffU;
 348              	 .loc 2 164 0
 349 0066 FB69     	 ldr r3,[r7,#28]
 350 0068 C3F30903 	 ubfx r3,r3,#0,#10
 351 006c 7B61     	 str r3,[r7,#20]
 165:../Libraries/XMCLib/src/xmc_usic.c **** 
 166:../Libraries/XMCLib/src/xmc_usic.c ****       if ((pdiv_int < 1024U) && (pdiv_frac < pdiv_frac_min))
 352              	 .loc 2 166 0
 353 006e BB69     	 ldr r3,[r7,#24]
 354 0070 B3F5806F 	 cmp r3,#1024
 355 0074 09D2     	 bcs .L15
 356              	 .loc 2 166 0 is_stmt 0 discriminator 1
 357 0076 7A69     	 ldr r2,[r7,#20]
 358 0078 7B6A     	 ldr r3,[r7,#36]
 359 007a 9A42     	 cmp r2,r3
 360 007c 05D2     	 bcs .L15
 167:../Libraries/XMCLib/src/xmc_usic.c ****       {
 168:../Libraries/XMCLib/src/xmc_usic.c ****         pdiv_frac_min = pdiv_frac;
 361              	 .loc 2 168 0 is_stmt 1
 362 007e 7B69     	 ldr r3,[r7,#20]
 363 0080 7B62     	 str r3,[r7,#36]
 169:../Libraries/XMCLib/src/xmc_usic.c ****         pdiv_int_min = pdiv_int;
 364              	 .loc 2 169 0
 365 0082 BB69     	 ldr r3,[r7,#24]
 366 0084 BB62     	 str r3,[r7,#40]
 170:../Libraries/XMCLib/src/xmc_usic.c ****         clock_divider_min = clock_divider;
 367              	 .loc 2 170 0
 368 0086 3B6B     	 ldr r3,[r7,#48]
 369 0088 FB62     	 str r3,[r7,#44]
 370              	.L15:
 160:../Libraries/XMCLib/src/xmc_usic.c ****     {
 371              	 .loc 2 160 0 discriminator 2
 372 008a 3B6B     	 ldr r3,[r7,#48]
 373 008c 013B     	 subs r3,r3,#1
 374 008e 3B63     	 str r3,[r7,#48]
 375              	.L14:
 160:../Libraries/XMCLib/src/xmc_usic.c ****     {
 376              	 .loc 2 160 0 is_stmt 0 discriminator 1
 377 0090 3B6B     	 ldr r3,[r7,#48]
 378 0092 002B     	 cmp r3,#0
 379 0094 D9D1     	 bne .L16
 171:../Libraries/XMCLib/src/xmc_usic.c ****       }
 172:../Libraries/XMCLib/src/xmc_usic.c ****     }
 173:../Libraries/XMCLib/src/xmc_usic.c **** 
 174:../Libraries/XMCLib/src/xmc_usic.c ****     channel->FDR = XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL |
 380              	 .loc 2 174 0 is_stmt 1
 381 0096 FB6A     	 ldr r3,[r7,#44]
 382 0098 43F40042 	 orr r2,r3,#32768
 383 009c FB68     	 ldr r3,[r7,#12]
 384 009e 1A61     	 str r2,[r3,#16]
 175:../Libraries/XMCLib/src/xmc_usic.c ****                    (clock_divider_min << USIC_CH_FDR_STEP_Pos);
 176:../Libraries/XMCLib/src/xmc_usic.c **** 
 177:../Libraries/XMCLib/src/xmc_usic.c ****     channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 385              	 .loc 2 177 0
 386 00a0 FB68     	 ldr r3,[r7,#12]
 387 00a2 5A69     	 ldr r2,[r3,#20]
 388 00a4 0D4B     	 ldr r3,.L19+4
 389 00a6 1340     	 ands r3,r3,r2
 178:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 179:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PCTQ_Msk |
 180:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PPPEN_Msk)) |
 181:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 390              	 .loc 2 181 0
 391 00a8 7A68     	 ldr r2,[r7,#4]
 392 00aa 013A     	 subs r2,r2,#1
 393 00ac 9202     	 lsls r2,r2,#10
 180:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 394              	 .loc 2 180 0
 395 00ae 1A43     	 orrs r2,r2,r3
 182:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 396              	 .loc 2 182 0
 397 00b0 BB6A     	 ldr r3,[r7,#40]
 398 00b2 013B     	 subs r3,r3,#1
 399 00b4 1B04     	 lsls r3,r3,#16
 181:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 400              	 .loc 2 181 0
 401 00b6 1A43     	 orrs r2,r2,r3
 177:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 402              	 .loc 2 177 0
 403 00b8 FB68     	 ldr r3,[r7,#12]
 404 00ba 5A61     	 str r2,[r3,#20]
 183:../Libraries/XMCLib/src/xmc_usic.c ****                     
 184:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_OK;
 405              	 .loc 2 184 0
 406 00bc 0023     	 movs r3,#0
 407 00be 87F83730 	 strb r3,[r7,#55]
 408 00c2 02E0     	 b .L17
 409              	.L13:
 185:../Libraries/XMCLib/src/xmc_usic.c ****   }
 186:../Libraries/XMCLib/src/xmc_usic.c ****   else 
 187:../Libraries/XMCLib/src/xmc_usic.c ****   {
 188:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 410              	 .loc 2 188 0
 411 00c4 0123     	 movs r3,#1
 412 00c6 87F83730 	 strb r3,[r7,#55]
 413              	.L17:
 189:../Libraries/XMCLib/src/xmc_usic.c ****   }
 190:../Libraries/XMCLib/src/xmc_usic.c ****   
 191:../Libraries/XMCLib/src/xmc_usic.c ****   return status;
 414              	 .loc 2 191 0
 415 00ca 97F83730 	 ldrb r3,[r7,#55]
 192:../Libraries/XMCLib/src/xmc_usic.c **** }
 416              	 .loc 2 192 0
 417 00ce 1846     	 mov r0,r3
 418 00d0 3837     	 adds r7,r7,#56
 419              	.LCFI26:
 420              	 .cfi_def_cfa_offset 8
 421 00d2 BD46     	 mov sp,r7
 422              	.LCFI27:
 423              	 .cfi_def_cfa_register 13
 424              	 
 425 00d4 80BD     	 pop {r7,pc}
 426              	.L20:
 427 00d6 00BF     	 .align 2
 428              	.L19:
 429 00d8 1F85EB51 	 .word 1374389535
 430 00dc EF8000FC 	 .word -67075857
 431              	 .cfi_endproc
 432              	.LFE240:
 434              	 .section .text.XMC_USIC_CH_SetBaudrateEx,"ax",%progbits
 435              	 .align 2
 436              	 .global XMC_USIC_CH_SetBaudrateEx
 437              	 .thumb
 438              	 .thumb_func
 440              	XMC_USIC_CH_SetBaudrateEx:
 441              	.LFB241:
 193:../Libraries/XMCLib/src/xmc_usic.c **** 
 194:../Libraries/XMCLib/src/xmc_usic.c **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 195:../Libraries/XMCLib/src/xmc_usic.c **** {
 442              	 .loc 2 195 0
 443              	 .cfi_startproc
 444              	 
 445              	 
 446 0000 80B5     	 push {r7,lr}
 447              	.LCFI28:
 448              	 .cfi_def_cfa_offset 8
 449              	 .cfi_offset 7,-8
 450              	 .cfi_offset 14,-4
 451 0002 8CB0     	 sub sp,sp,#48
 452              	.LCFI29:
 453              	 .cfi_def_cfa_offset 56
 454 0004 00AF     	 add r7,sp,#0
 455              	.LCFI30:
 456              	 .cfi_def_cfa_register 7
 457 0006 F860     	 str r0,[r7,#12]
 458 0008 B960     	 str r1,[r7,#8]
 459 000a 7A60     	 str r2,[r7,#4]
 196:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 460              	 .loc 2 196 0
 461 000c FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 462 0010 0346     	 mov r3,r0
 463 0012 3B62     	 str r3,[r7,#32]
 197:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t brg_clock = rate * oversampling;
 464              	 .loc 2 197 0
 465 0014 BB68     	 ldr r3,[r7,#8]
 466 0016 7A68     	 ldr r2,[r7,#4]
 467 0018 02FB03F3 	 mul r3,r2,r3
 468 001c FB61     	 str r3,[r7,#28]
 198:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t actual_rate_upper;
 199:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t actual_rate_lower;
 200:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv = 1;
 469              	 .loc 2 200 0
 470 001e 0123     	 movs r3,#1
 471 0020 FB62     	 str r3,[r7,#44]
 201:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider_step;
 202:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
 203:../Libraries/XMCLib/src/xmc_usic.c **** 
 204:../Libraries/XMCLib/src/xmc_usic.c ****   if (peripheral_clock > brg_clock)
 472              	 .loc 2 204 0
 473 0022 3A6A     	 ldr r2,[r7,#32]
 474 0024 FB69     	 ldr r3,[r7,#28]
 475 0026 9A42     	 cmp r2,r3
 476 0028 5FDD     	 ble .L22
 205:../Libraries/XMCLib/src/xmc_usic.c ****   {
 206:../Libraries/XMCLib/src/xmc_usic.c ****     divider_step = peripheral_clock / brg_clock; // integer division gets truncated
 477              	 .loc 2 206 0
 478 002a 3A6A     	 ldr r2,[r7,#32]
 479 002c FB69     	 ldr r3,[r7,#28]
 480 002e 92FBF3F3 	 sdiv r3,r2,r3
 481 0032 BB62     	 str r3,[r7,#40]
 207:../Libraries/XMCLib/src/xmc_usic.c ****     while (divider_step >= 1023)
 482              	 .loc 2 207 0
 483 0034 10E0     	 b .L23
 484              	.L24:
 208:../Libraries/XMCLib/src/xmc_usic.c ****     {
 209:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv++;
 485              	 .loc 2 209 0
 486 0036 FB6A     	 ldr r3,[r7,#44]
 487 0038 0133     	 adds r3,r3,#1
 488 003a FB62     	 str r3,[r7,#44]
 210:../Libraries/XMCLib/src/xmc_usic.c ****       brg_clock = rate * oversampling * pdiv;
 489              	 .loc 2 210 0
 490 003c BB68     	 ldr r3,[r7,#8]
 491 003e 7A68     	 ldr r2,[r7,#4]
 492 0040 02FB03F3 	 mul r3,r2,r3
 493 0044 1A46     	 mov r2,r3
 494 0046 FB6A     	 ldr r3,[r7,#44]
 495 0048 03FB02F3 	 mul r3,r3,r2
 496 004c FB61     	 str r3,[r7,#28]
 211:../Libraries/XMCLib/src/xmc_usic.c ****       divider_step = peripheral_clock / brg_clock; // integer division gets truncated
 497              	 .loc 2 211 0
 498 004e 3A6A     	 ldr r2,[r7,#32]
 499 0050 FB69     	 ldr r3,[r7,#28]
 500 0052 92FBF3F3 	 sdiv r3,r2,r3
 501 0056 BB62     	 str r3,[r7,#40]
 502              	.L23:
 207:../Libraries/XMCLib/src/xmc_usic.c ****     {
 503              	 .loc 2 207 0
 504 0058 BB6A     	 ldr r3,[r7,#40]
 505 005a 40F2FE32 	 movw r2,#1022
 506 005e 9342     	 cmp r3,r2
 507 0060 E9D8     	 bhi .L24
 212:../Libraries/XMCLib/src/xmc_usic.c ****     }
 213:../Libraries/XMCLib/src/xmc_usic.c ****     actual_rate_upper = peripheral_clock / (divider_step * oversampling * pdiv);
 508              	 .loc 2 213 0
 509 0062 3A6A     	 ldr r2,[r7,#32]
 510 0064 7B68     	 ldr r3,[r7,#4]
 511 0066 B96A     	 ldr r1,[r7,#40]
 512 0068 01FB03F3 	 mul r3,r1,r3
 513 006c F96A     	 ldr r1,[r7,#44]
 514 006e 01FB03F3 	 mul r3,r1,r3
 515 0072 B2FBF3F3 	 udiv r3,r2,r3
 516 0076 BB61     	 str r3,[r7,#24]
 214:../Libraries/XMCLib/src/xmc_usic.c ****     actual_rate_lower = peripheral_clock / ((divider_step + 1) * oversampling * pdiv);
 517              	 .loc 2 214 0
 518 0078 3A6A     	 ldr r2,[r7,#32]
 519 007a BB6A     	 ldr r3,[r7,#40]
 520 007c 0133     	 adds r3,r3,#1
 521 007e 7968     	 ldr r1,[r7,#4]
 522 0080 01FB03F3 	 mul r3,r1,r3
 523 0084 F96A     	 ldr r1,[r7,#44]
 524 0086 01FB03F3 	 mul r3,r1,r3
 525 008a B2FBF3F3 	 udiv r3,r2,r3
 526 008e 7B61     	 str r3,[r7,#20]
 215:../Libraries/XMCLib/src/xmc_usic.c **** 
 216:../Libraries/XMCLib/src/xmc_usic.c ****     // choose better approximation if the peripheral frequency is not a multiple of the baudrate
 217:../Libraries/XMCLib/src/xmc_usic.c ****     if (abs(rate - actual_rate_lower) < abs(rate - actual_rate_upper))
 527              	 .loc 2 217 0
 528 0090 BA68     	 ldr r2,[r7,#8]
 529 0092 7B69     	 ldr r3,[r7,#20]
 530 0094 D31A     	 subs r3,r2,r3
 531 0096 83EAE372 	 eor r2,r3,r3,asr#31
 532 009a A2EBE372 	 sub r2,r2,r3,asr#31
 533 009e B968     	 ldr r1,[r7,#8]
 534 00a0 BB69     	 ldr r3,[r7,#24]
 535 00a2 CB1A     	 subs r3,r1,r3
 536 00a4 002B     	 cmp r3,#0
 537 00a6 B8BF     	 it lt
 538 00a8 5B42     	 rsblt r3,r3,#0
 539 00aa 9A42     	 cmp r2,r3
 540 00ac 02DA     	 bge .L25
 218:../Libraries/XMCLib/src/xmc_usic.c ****     {
 219:../Libraries/XMCLib/src/xmc_usic.c ****       divider_step += 1;
 541              	 .loc 2 219 0
 542 00ae BB6A     	 ldr r3,[r7,#40]
 543 00b0 0133     	 adds r3,r3,#1
 544 00b2 BB62     	 str r3,[r7,#40]
 545              	.L25:
 220:../Libraries/XMCLib/src/xmc_usic.c ****     }
 221:../Libraries/XMCLib/src/xmc_usic.c **** 
 222:../Libraries/XMCLib/src/xmc_usic.c ****     divider_step = 1024 - divider_step;
 546              	 .loc 2 222 0
 547 00b4 BB6A     	 ldr r3,[r7,#40]
 548 00b6 C3F58063 	 rsb r3,r3,#1024
 549 00ba BB62     	 str r3,[r7,#40]
 223:../Libraries/XMCLib/src/xmc_usic.c **** 
 224:../Libraries/XMCLib/src/xmc_usic.c **** 
 225:../Libraries/XMCLib/src/xmc_usic.c ****     channel->FDR = XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL |
 550              	 .loc 2 225 0
 551 00bc BB6A     	 ldr r3,[r7,#40]
 552 00be 43F48042 	 orr r2,r3,#16384
 553 00c2 FB68     	 ldr r3,[r7,#12]
 554 00c4 1A61     	 str r2,[r3,#16]
 226:../Libraries/XMCLib/src/xmc_usic.c ****                    (divider_step << USIC_CH_FDR_STEP_Pos);
 227:../Libraries/XMCLib/src/xmc_usic.c **** 
 228:../Libraries/XMCLib/src/xmc_usic.c ****     channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 555              	 .loc 2 228 0
 556 00c6 FB68     	 ldr r3,[r7,#12]
 557 00c8 5A69     	 ldr r2,[r3,#20]
 558 00ca 0C4B     	 ldr r3,.L28
 559 00cc 1340     	 ands r3,r3,r2
 229:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 230:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PCTQ_Msk |
 231:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PPPEN_Msk)) |
 232:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 560              	 .loc 2 232 0
 561 00ce 7A68     	 ldr r2,[r7,#4]
 562 00d0 013A     	 subs r2,r2,#1
 563 00d2 9202     	 lsls r2,r2,#10
 231:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 564              	 .loc 2 231 0
 565 00d4 1A43     	 orrs r2,r2,r3
 233:../Libraries/XMCLib/src/xmc_usic.c **** 				   ((pdiv -1) << USIC_CH_BRG_PDIV_Pos);
 566              	 .loc 2 233 0
 567 00d6 FB6A     	 ldr r3,[r7,#44]
 568 00d8 013B     	 subs r3,r3,#1
 569 00da 1B04     	 lsls r3,r3,#16
 232:../Libraries/XMCLib/src/xmc_usic.c **** 				   ((pdiv -1) << USIC_CH_BRG_PDIV_Pos);
 570              	 .loc 2 232 0
 571 00dc 1A43     	 orrs r2,r2,r3
 228:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 572              	 .loc 2 228 0
 573 00de FB68     	 ldr r3,[r7,#12]
 574 00e0 5A61     	 str r2,[r3,#20]
 234:../Libraries/XMCLib/src/xmc_usic.c **** 
 235:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_OK;
 575              	 .loc 2 235 0
 576 00e2 0023     	 movs r3,#0
 577 00e4 87F82730 	 strb r3,[r7,#39]
 578 00e8 02E0     	 b .L26
 579              	.L22:
 236:../Libraries/XMCLib/src/xmc_usic.c ****   }
 237:../Libraries/XMCLib/src/xmc_usic.c ****   else
 238:../Libraries/XMCLib/src/xmc_usic.c ****   {
 239:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 580              	 .loc 2 239 0
 581 00ea 0123     	 movs r3,#1
 582 00ec 87F82730 	 strb r3,[r7,#39]
 583              	.L26:
 240:../Libraries/XMCLib/src/xmc_usic.c ****   }
 241:../Libraries/XMCLib/src/xmc_usic.c **** 
 242:../Libraries/XMCLib/src/xmc_usic.c ****   return status;
 584              	 .loc 2 242 0
 585 00f0 97F82730 	 ldrb r3,[r7,#39]
 243:../Libraries/XMCLib/src/xmc_usic.c **** }
 586              	 .loc 2 243 0
 587 00f4 1846     	 mov r0,r3
 588 00f6 3037     	 adds r7,r7,#48
 589              	.LCFI31:
 590              	 .cfi_def_cfa_offset 8
 591 00f8 BD46     	 mov sp,r7
 592              	.LCFI32:
 593              	 .cfi_def_cfa_register 13
 594              	 
 595 00fa 80BD     	 pop {r7,pc}
 596              	.L29:
 597              	 .align 2
 598              	.L28:
 599 00fc EF8000FC 	 .word -67075857
 600              	 .cfi_endproc
 601              	.LFE241:
 603              	 .section .text.XMC_USIC_CH_GetBaudrate,"ax",%progbits
 604              	 .align 2
 605              	 .global XMC_USIC_CH_GetBaudrate
 606              	 .thumb
 607              	 .thumb_func
 609              	XMC_USIC_CH_GetBaudrate:
 610              	.LFB242:
 244:../Libraries/XMCLib/src/xmc_usic.c **** 
 245:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel)
 246:../Libraries/XMCLib/src/xmc_usic.c **** {
 611              	 .loc 2 246 0
 612              	 .cfi_startproc
 613              	 
 614              	 
 615 0000 80B5     	 push {r7,lr}
 616              	.LCFI33:
 617              	 .cfi_def_cfa_offset 8
 618              	 .cfi_offset 7,-8
 619              	 .cfi_offset 14,-4
 620 0002 86B0     	 sub sp,sp,#24
 621              	.LCFI34:
 622              	 .cfi_def_cfa_offset 32
 623 0004 00AF     	 add r7,sp,#0
 624              	.LCFI35:
 625              	 .cfi_def_cfa_register 7
 626 0006 7860     	 str r0,[r7,#4]
 247:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider;
 248:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) == USIC_CH_BRG_CTQSEL_Msk)
 627              	 .loc 2 248 0
 628 0008 7B68     	 ldr r3,[r7,#4]
 629 000a 5B69     	 ldr r3,[r3,#20]
 630 000c 03F0C003 	 and r3,r3,#192
 631 0010 C02B     	 cmp r3,#192
 632 0012 02D1     	 bne .L31
 249:../Libraries/XMCLib/src/xmc_usic.c ****   {
 250:../Libraries/XMCLib/src/xmc_usic.c **** 	// CTQSEL = 3
 251:../Libraries/XMCLib/src/xmc_usic.c ****     divider = 2;
 633              	 .loc 2 251 0
 634 0014 0223     	 movs r3,#2
 635 0016 7B61     	 str r3,[r7,#20]
 636 0018 22E0     	 b .L32
 637              	.L31:
 252:../Libraries/XMCLib/src/xmc_usic.c ****   }
 253:../Libraries/XMCLib/src/xmc_usic.c ****   else
 254:../Libraries/XMCLib/src/xmc_usic.c ****   {
 255:../Libraries/XMCLib/src/xmc_usic.c **** 	// CTQSEL = 0, 1, or 2
 256:../Libraries/XMCLib/src/xmc_usic.c ****     divider = (channel->BRG & USIC_CH_BRG_PPPEN_Msk) ? 2 : 1;
 638              	 .loc 2 256 0
 639 001a 7B68     	 ldr r3,[r7,#4]
 640 001c 5B69     	 ldr r3,[r3,#20]
 641 001e 03F01003 	 and r3,r3,#16
 642 0022 002B     	 cmp r3,#0
 643 0024 01D0     	 beq .L33
 644              	 .loc 2 256 0 is_stmt 0 discriminator 1
 645 0026 0223     	 movs r3,#2
 646 0028 00E0     	 b .L34
 647              	.L33:
 648              	 .loc 2 256 0 discriminator 2
 649 002a 0123     	 movs r3,#1
 650              	.L34:
 651              	 .loc 2 256 0 discriminator 4
 652 002c 7B61     	 str r3,[r7,#20]
 257:../Libraries/XMCLib/src/xmc_usic.c ****   
 258:../Libraries/XMCLib/src/xmc_usic.c ****     if ((((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) >> USIC_CH_BRG_CTQSEL_Pos) & 0x1) == 0)
 653              	 .loc 2 258 0 is_stmt 1 discriminator 4
 654 002e 7B68     	 ldr r3,[r7,#4]
 655 0030 5B69     	 ldr r3,[r3,#20]
 656 0032 03F04003 	 and r3,r3,#64
 657 0036 002B     	 cmp r3,#0
 658 0038 12D1     	 bne .L32
 259:../Libraries/XMCLib/src/xmc_usic.c ****     {
 260:../Libraries/XMCLib/src/xmc_usic.c **** 	  // CTQSEL = 0 or 2
 261:../Libraries/XMCLib/src/xmc_usic.c ****       divider *= ((channel->BRG & USIC_CH_BRG_PDIV_Msk) >> USIC_CH_BRG_PDIV_Pos) + 1;
 659              	 .loc 2 261 0
 660 003a 7B68     	 ldr r3,[r7,#4]
 661 003c 5A69     	 ldr r2,[r3,#20]
 662 003e 384B     	 ldr r3,.L38
 663 0040 1340     	 ands r3,r3,r2
 664 0042 1B0C     	 lsrs r3,r3,#16
 665 0044 5A1C     	 adds r2,r3,#1
 666 0046 7B69     	 ldr r3,[r7,#20]
 667 0048 02FB03F3 	 mul r3,r2,r3
 668 004c 7B61     	 str r3,[r7,#20]
 262:../Libraries/XMCLib/src/xmc_usic.c ****       if ((((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) >> USIC_CH_BRG_CTQSEL_Pos) & 0x2) != 0)
 669              	 .loc 2 262 0
 670 004e 7B68     	 ldr r3,[r7,#4]
 671 0050 5B69     	 ldr r3,[r3,#20]
 672 0052 03F08003 	 and r3,r3,#128
 673 0056 002B     	 cmp r3,#0
 674 0058 02D0     	 beq .L32
 263:../Libraries/XMCLib/src/xmc_usic.c ****       {
 264:../Libraries/XMCLib/src/xmc_usic.c ****         // CTQSEL = 2
 265:../Libraries/XMCLib/src/xmc_usic.c ****         divider *= 2;
 675              	 .loc 2 265 0
 676 005a 7B69     	 ldr r3,[r7,#20]
 677 005c 5B00     	 lsls r3,r3,#1
 678 005e 7B61     	 str r3,[r7,#20]
 679              	.L32:
 266:../Libraries/XMCLib/src/xmc_usic.c ****       }
 267:../Libraries/XMCLib/src/xmc_usic.c ****     }
 268:../Libraries/XMCLib/src/xmc_usic.c ****   }
 269:../Libraries/XMCLib/src/xmc_usic.c **** 
 270:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_PCTQ_Msk) >> USIC_CH_BRG_PCTQ_Pos) + 1;
 680              	 .loc 2 270 0
 681 0060 7B68     	 ldr r3,[r7,#4]
 682 0062 5B69     	 ldr r3,[r3,#20]
 683 0064 03F44073 	 and r3,r3,#768
 684 0068 1B0A     	 lsrs r3,r3,#8
 685 006a 5A1C     	 adds r2,r3,#1
 686 006c 7B69     	 ldr r3,[r7,#20]
 687 006e 02FB03F3 	 mul r3,r2,r3
 688 0072 7B61     	 str r3,[r7,#20]
 271:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_DCTQ_Msk) >> USIC_CH_BRG_DCTQ_Pos) + 1;
 689              	 .loc 2 271 0
 690 0074 7B68     	 ldr r3,[r7,#4]
 691 0076 5B69     	 ldr r3,[r3,#20]
 692 0078 03F4F843 	 and r3,r3,#31744
 693 007c 9B0A     	 lsrs r3,r3,#10
 694 007e 5A1C     	 adds r2,r3,#1
 695 0080 7B69     	 ldr r3,[r7,#20]
 696 0082 02FB03F3 	 mul r3,r2,r3
 697 0086 7B61     	 str r3,[r7,#20]
 272:../Libraries/XMCLib/src/xmc_usic.c **** 
 273:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 698              	 .loc 2 273 0
 699 0088 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 700 008c F860     	 str r0,[r7,#12]
 274:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 275:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 701              	 .loc 2 275 0
 702 008e 7B68     	 ldr r3,[r7,#4]
 703 0090 1B69     	 ldr r3,[r3,#16]
 704 0092 03F44043 	 and r3,r3,#49152
 705 0096 B3F5004F 	 cmp r3,#32768
 706 009a 15D1     	 bne .L35
 276:../Libraries/XMCLib/src/xmc_usic.c ****   {
 277:../Libraries/XMCLib/src/xmc_usic.c **** 	baudrate = fperi * (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 707              	 .loc 2 277 0
 708 009c FB68     	 ldr r3,[r7,#12]
 709 009e 07EE903A 	 fmsr s15,r3
 710 00a2 B8EE677A 	 fuitos s14,s15
 711 00a6 7B68     	 ldr r3,[r7,#4]
 712 00a8 1B69     	 ldr r3,[r3,#16]
 713 00aa C3F30903 	 ubfx r3,r3,#0,#10
 714 00ae 07EE903A 	 fmsr s15,r3
 715 00b2 F8EE677A 	 fuitos s15,s15
 716 00b6 DFED1B6A 	 flds s13,.L38+4
 717 00ba C7EEA67A 	 fdivs s15,s15,s13
 718 00be 67EE277A 	 fmuls s15,s14,s15
 719 00c2 C7ED047A 	 fsts s15,[r7,#16]
 720 00c6 16E0     	 b .L36
 721              	.L35:
 278:../Libraries/XMCLib/src/xmc_usic.c ****   }
 279:../Libraries/XMCLib/src/xmc_usic.c ****   else
 280:../Libraries/XMCLib/src/xmc_usic.c ****   {
 281:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 282:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 722              	 .loc 2 282 0
 723 00c8 FB68     	 ldr r3,[r7,#12]
 724 00ca 07EE903A 	 fmsr s15,r3
 725 00ce B8EE677A 	 fuitos s14,s15
 726 00d2 7B68     	 ldr r3,[r7,#4]
 727 00d4 1B69     	 ldr r3,[r3,#16]
 728 00d6 C3F30903 	 ubfx r3,r3,#0,#10
 729 00da C3F58063 	 rsb r3,r3,#1024
 730 00de 07EE903A 	 fmsr s15,r3
 731 00e2 F8EE677A 	 fuitos s15,s15
 732 00e6 F7EE006A 	 fconsts s13,#112
 733 00ea C6EEA77A 	 fdivs s15,s13,s15
 734 00ee 67EE277A 	 fmuls s15,s14,s15
 735 00f2 C7ED047A 	 fsts s15,[r7,#16]
 736              	.L36:
 283:../Libraries/XMCLib/src/xmc_usic.c ****   }
 284:../Libraries/XMCLib/src/xmc_usic.c **** 
 285:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= divider;
 737              	 .loc 2 285 0
 738 00f6 7B69     	 ldr r3,[r7,#20]
 739 00f8 07EE903A 	 fmsr s15,r3
 740 00fc F8EE677A 	 fuitos s15,s15
 741 0100 97ED047A 	 flds s14,[r7,#16]
 742 0104 C7EE277A 	 fdivs s15,s14,s15
 743 0108 C7ED047A 	 fsts s15,[r7,#16]
 286:../Libraries/XMCLib/src/xmc_usic.c **** 
 287:../Libraries/XMCLib/src/xmc_usic.c ****   return baudrate;
 744              	 .loc 2 287 0
 745 010c D7ED047A 	 flds s15,[r7,#16]
 746 0110 FCEEE77A 	 ftouizs s15,s15
 747 0114 17EE903A 	 fmrs r3,s15
 288:../Libraries/XMCLib/src/xmc_usic.c **** }
 748              	 .loc 2 288 0
 749 0118 1846     	 mov r0,r3
 750 011a 1837     	 adds r7,r7,#24
 751              	.LCFI36:
 752              	 .cfi_def_cfa_offset 8
 753 011c BD46     	 mov sp,r7
 754              	.LCFI37:
 755              	 .cfi_def_cfa_register 13
 756              	 
 757 011e 80BD     	 pop {r7,pc}
 758              	.L39:
 759              	 .align 2
 760              	.L38:
 761 0120 0000FF03 	 .word 67043328
 762 0124 00008044 	 .word 1149239296
 763              	 .cfi_endproc
 764              	.LFE242:
 766              	 .section .text.XMC_USIC_CH_GetSCLKFrequency,"ax",%progbits
 767              	 .align 2
 768              	 .global XMC_USIC_CH_GetSCLKFrequency
 769              	 .thumb
 770              	 .thumb_func
 772              	XMC_USIC_CH_GetSCLKFrequency:
 773              	.LFB243:
 289:../Libraries/XMCLib/src/xmc_usic.c **** 
 290:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel)
 291:../Libraries/XMCLib/src/xmc_usic.c **** {
 774              	 .loc 2 291 0
 775              	 .cfi_startproc
 776              	 
 777              	 
 778 0000 80B5     	 push {r7,lr}
 779              	.LCFI38:
 780              	 .cfi_def_cfa_offset 8
 781              	 .cfi_offset 7,-8
 782              	 .cfi_offset 14,-4
 783 0002 86B0     	 sub sp,sp,#24
 784              	.LCFI39:
 785              	 .cfi_def_cfa_offset 32
 786 0004 00AF     	 add r7,sp,#0
 787              	.LCFI40:
 788              	 .cfi_def_cfa_register 7
 789 0006 7860     	 str r0,[r7,#4]
 292:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider;
 293:../Libraries/XMCLib/src/xmc_usic.c ****   divider = (channel->BRG & USIC_CH_BRG_PPPEN_Msk) ? 2 : 1;
 790              	 .loc 2 293 0
 791 0008 7B68     	 ldr r3,[r7,#4]
 792 000a 5B69     	 ldr r3,[r3,#20]
 793 000c 03F01003 	 and r3,r3,#16
 794 0010 002B     	 cmp r3,#0
 795 0012 01D0     	 beq .L41
 796              	 .loc 2 293 0 is_stmt 0 discriminator 1
 797 0014 0223     	 movs r3,#2
 798 0016 00E0     	 b .L42
 799              	.L41:
 800              	 .loc 2 293 0 discriminator 2
 801 0018 0123     	 movs r3,#1
 802              	.L42:
 803              	 .loc 2 293 0 discriminator 4
 804 001a 3B61     	 str r3,[r7,#16]
 294:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_PDIV_Msk) >> USIC_CH_BRG_PDIV_Pos) + 1;
 805              	 .loc 2 294 0 is_stmt 1 discriminator 4
 806 001c 7B68     	 ldr r3,[r7,#4]
 807 001e 5A69     	 ldr r2,[r3,#20]
 808 0020 2B4B     	 ldr r3,.L46
 809 0022 1340     	 ands r3,r3,r2
 810 0024 1B0C     	 lsrs r3,r3,#16
 811 0026 5A1C     	 adds r2,r3,#1
 812 0028 3B69     	 ldr r3,[r7,#16]
 813 002a 02FB03F3 	 mul r3,r2,r3
 814 002e 3B61     	 str r3,[r7,#16]
 295:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= 2;
 815              	 .loc 2 295 0 discriminator 4
 816 0030 3B69     	 ldr r3,[r7,#16]
 817 0032 5B00     	 lsls r3,r3,#1
 818 0034 3B61     	 str r3,[r7,#16]
 296:../Libraries/XMCLib/src/xmc_usic.c **** 
 297:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 819              	 .loc 2 297 0 discriminator 4
 820 0036 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 821 003a F860     	 str r0,[r7,#12]
 298:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 299:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 822              	 .loc 2 299 0 discriminator 4
 823 003c 7B68     	 ldr r3,[r7,#4]
 824 003e 1B69     	 ldr r3,[r3,#16]
 825 0040 03F44043 	 and r3,r3,#49152
 826 0044 B3F5004F 	 cmp r3,#32768
 827 0048 15D1     	 bne .L43
 300:../Libraries/XMCLib/src/xmc_usic.c ****   {
 301:../Libraries/XMCLib/src/xmc_usic.c ****     /* Fractional divider mode */
 302:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 828              	 .loc 2 302 0
 829 004a FB68     	 ldr r3,[r7,#12]
 830 004c 07EE903A 	 fmsr s15,r3
 831 0050 B8EE677A 	 fuitos s14,s15
 832 0054 7B68     	 ldr r3,[r7,#4]
 833 0056 1B69     	 ldr r3,[r3,#16]
 834 0058 C3F30903 	 ubfx r3,r3,#0,#10
 835 005c 07EE903A 	 fmsr s15,r3
 836 0060 F8EE677A 	 fuitos s15,s15
 837 0064 DFED1B6A 	 flds s13,.L46+4
 838 0068 C7EEA67A 	 fdivs s15,s15,s13
 839 006c 67EE277A 	 fmuls s15,s14,s15
 840 0070 C7ED057A 	 fsts s15,[r7,#20]
 841 0074 16E0     	 b .L44
 842              	.L43:
 303:../Libraries/XMCLib/src/xmc_usic.c ****   }
 304:../Libraries/XMCLib/src/xmc_usic.c ****   else
 305:../Libraries/XMCLib/src/xmc_usic.c ****   {
 306:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 307:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 843              	 .loc 2 307 0
 844 0076 FB68     	 ldr r3,[r7,#12]
 845 0078 07EE903A 	 fmsr s15,r3
 846 007c B8EE677A 	 fuitos s14,s15
 847 0080 7B68     	 ldr r3,[r7,#4]
 848 0082 1B69     	 ldr r3,[r3,#16]
 849 0084 C3F30903 	 ubfx r3,r3,#0,#10
 850 0088 C3F58063 	 rsb r3,r3,#1024
 851 008c 07EE903A 	 fmsr s15,r3
 852 0090 F8EE677A 	 fuitos s15,s15
 853 0094 F7EE006A 	 fconsts s13,#112
 854 0098 C6EEA77A 	 fdivs s15,s13,s15
 855 009c 67EE277A 	 fmuls s15,s14,s15
 856 00a0 C7ED057A 	 fsts s15,[r7,#20]
 857              	.L44:
 308:../Libraries/XMCLib/src/xmc_usic.c ****   }
 309:../Libraries/XMCLib/src/xmc_usic.c **** 
 310:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= divider;
 858              	 .loc 2 310 0
 859 00a4 3B69     	 ldr r3,[r7,#16]
 860 00a6 07EE903A 	 fmsr s15,r3
 861 00aa F8EE677A 	 fuitos s15,s15
 862 00ae 97ED057A 	 flds s14,[r7,#20]
 863 00b2 C7EE277A 	 fdivs s15,s14,s15
 864 00b6 C7ED057A 	 fsts s15,[r7,#20]
 311:../Libraries/XMCLib/src/xmc_usic.c **** 
 312:../Libraries/XMCLib/src/xmc_usic.c ****   return baudrate;
 865              	 .loc 2 312 0
 866 00ba D7ED057A 	 flds s15,[r7,#20]
 867 00be FCEEE77A 	 ftouizs s15,s15
 868 00c2 17EE903A 	 fmrs r3,s15
 313:../Libraries/XMCLib/src/xmc_usic.c **** }
 869              	 .loc 2 313 0
 870 00c6 1846     	 mov r0,r3
 871 00c8 1837     	 adds r7,r7,#24
 872              	.LCFI41:
 873              	 .cfi_def_cfa_offset 8
 874 00ca BD46     	 mov sp,r7
 875              	.LCFI42:
 876              	 .cfi_def_cfa_register 13
 877              	 
 878 00cc 80BD     	 pop {r7,pc}
 879              	.L47:
 880 00ce 00BF     	 .align 2
 881              	.L46:
 882 00d0 0000FF03 	 .word 67043328
 883 00d4 00008044 	 .word 1149239296
 884              	 .cfi_endproc
 885              	.LFE243:
 887              	 .section .text.XMC_USIC_CH_GetMCLKFrequency,"ax",%progbits
 888              	 .align 2
 889              	 .global XMC_USIC_CH_GetMCLKFrequency
 890              	 .thumb
 891              	 .thumb_func
 893              	XMC_USIC_CH_GetMCLKFrequency:
 894              	.LFB244:
 314:../Libraries/XMCLib/src/xmc_usic.c **** 
 315:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel)
 316:../Libraries/XMCLib/src/xmc_usic.c **** {
 895              	 .loc 2 316 0
 896              	 .cfi_startproc
 897              	 
 898              	 
 899 0000 80B5     	 push {r7,lr}
 900              	.LCFI43:
 901              	 .cfi_def_cfa_offset 8
 902              	 .cfi_offset 7,-8
 903              	 .cfi_offset 14,-4
 904 0002 84B0     	 sub sp,sp,#16
 905              	.LCFI44:
 906              	 .cfi_def_cfa_offset 24
 907 0004 00AF     	 add r7,sp,#0
 908              	.LCFI45:
 909              	 .cfi_def_cfa_register 7
 910 0006 7860     	 str r0,[r7,#4]
 317:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 911              	 .loc 2 317 0
 912 0008 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 913 000c B860     	 str r0,[r7,#8]
 318:../Libraries/XMCLib/src/xmc_usic.c **** 
 319:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 320:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 914              	 .loc 2 320 0
 915 000e 7B68     	 ldr r3,[r7,#4]
 916 0010 1B69     	 ldr r3,[r3,#16]
 917 0012 03F44043 	 and r3,r3,#49152
 918 0016 B3F5004F 	 cmp r3,#32768
 919 001a 17D1     	 bne .L49
 321:../Libraries/XMCLib/src/xmc_usic.c ****   {
 322:../Libraries/XMCLib/src/xmc_usic.c ****     /* Fractional divider mode */
 323:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 920              	 .loc 2 323 0
 921 001c BB68     	 ldr r3,[r7,#8]
 922 001e 07EE903A 	 fmsr s15,r3
 923 0022 B8EE677A 	 fuitos s14,s15
 924 0026 7B68     	 ldr r3,[r7,#4]
 925 0028 1B69     	 ldr r3,[r3,#16]
 926 002a C3F30903 	 ubfx r3,r3,#0,#10
 927 002e C3F58063 	 rsb r3,r3,#1024
 928 0032 07EE903A 	 fmsr s15,r3
 929 0036 F8EE677A 	 fuitos s15,s15
 930 003a F7EE006A 	 fconsts s13,#112
 931 003e C6EEA77A 	 fdivs s15,s13,s15
 932 0042 67EE277A 	 fmuls s15,s14,s15
 933 0046 C7ED037A 	 fsts s15,[r7,#12]
 934 004a 14E0     	 b .L50
 935              	.L49:
 324:../Libraries/XMCLib/src/xmc_usic.c ****   }
 325:../Libraries/XMCLib/src/xmc_usic.c ****   else
 326:../Libraries/XMCLib/src/xmc_usic.c ****   {
 327:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 328:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi / (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 936              	 .loc 2 328 0
 937 004c BB68     	 ldr r3,[r7,#8]
 938 004e 07EE903A 	 fmsr s15,r3
 939 0052 B8EE677A 	 fuitos s14,s15
 940 0056 7B68     	 ldr r3,[r7,#4]
 941 0058 1B69     	 ldr r3,[r3,#16]
 942 005a C3F30903 	 ubfx r3,r3,#0,#10
 943 005e 07EE903A 	 fmsr s15,r3
 944 0062 F8EE677A 	 fuitos s15,s15
 945 0066 DFED0D6A 	 flds s13,.L52
 946 006a C7EEA67A 	 fdivs s15,s15,s13
 947 006e C7EE277A 	 fdivs s15,s14,s15
 948 0072 C7ED037A 	 fsts s15,[r7,#12]
 949              	.L50:
 329:../Libraries/XMCLib/src/xmc_usic.c ****   }
 330:../Libraries/XMCLib/src/xmc_usic.c **** 
 331:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= 2;
 950              	 .loc 2 331 0
 951 0076 D7ED037A 	 flds s15,[r7,#12]
 952 007a B0EE007A 	 fconsts s14,#0
 953 007e C7EE877A 	 fdivs s15,s15,s14
 954 0082 C7ED037A 	 fsts s15,[r7,#12]
 332:../Libraries/XMCLib/src/xmc_usic.c **** 
 333:../Libraries/XMCLib/src/xmc_usic.c ****   return baudrate;
 955              	 .loc 2 333 0
 956 0086 D7ED037A 	 flds s15,[r7,#12]
 957 008a FCEEE77A 	 ftouizs s15,s15
 958 008e 17EE903A 	 fmrs r3,s15
 334:../Libraries/XMCLib/src/xmc_usic.c **** }
 959              	 .loc 2 334 0
 960 0092 1846     	 mov r0,r3
 961 0094 1037     	 adds r7,r7,#16
 962              	.LCFI46:
 963              	 .cfi_def_cfa_offset 8
 964 0096 BD46     	 mov sp,r7
 965              	.LCFI47:
 966              	 .cfi_def_cfa_register 13
 967              	 
 968 0098 80BD     	 pop {r7,pc}
 969              	.L53:
 970 009a 00BF     	 .align 2
 971              	.L52:
 972 009c 00008044 	 .word 1149239296
 973              	 .cfi_endproc
 974              	.LFE244:
 976              	 .section .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG,"ax",%progbits
 977              	 .align 2
 978              	 .global XMC_USIC_CH_ConfigExternalInputSignalToBRG
 979              	 .thumb
 980              	 .thumb_func
 982              	XMC_USIC_CH_ConfigExternalInputSignalToBRG:
 983              	.LFB245:
 335:../Libraries/XMCLib/src/xmc_usic.c **** 
 336:../Libraries/XMCLib/src/xmc_usic.c **** 
 337:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 338:../Libraries/XMCLib/src/xmc_usic.c **** 		                                        const uint16_t pdiv,
 339:../Libraries/XMCLib/src/xmc_usic.c **** 												const uint32_t oversampling,
 340:../Libraries/XMCLib/src/xmc_usic.c **** 												const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode)
 341:../Libraries/XMCLib/src/xmc_usic.c **** {
 984              	 .loc 2 341 0
 985              	 .cfi_startproc
 986              	 
 987              	 
 988 0000 80B5     	 push {r7,lr}
 989              	.LCFI48:
 990              	 .cfi_def_cfa_offset 8
 991              	 .cfi_offset 7,-8
 992              	 .cfi_offset 14,-4
 993 0002 84B0     	 sub sp,sp,#16
 994              	.LCFI49:
 995              	 .cfi_def_cfa_offset 24
 996 0004 00AF     	 add r7,sp,#0
 997              	.LCFI50:
 998              	 .cfi_def_cfa_register 7
 999 0006 F860     	 str r0,[r7,#12]
 1000 0008 7A60     	 str r2,[r7,#4]
 1001 000a 1A46     	 mov r2,r3
 1002 000c 0B46     	 mov r3,r1
 1003 000e 7B81     	 strh r3,[r7,#10]
 1004 0010 1346     	 mov r3,r2
 1005 0012 7B72     	 strb r3,[r7,#9]
 342:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_ConfigExternalInputSignalToBRG: Divider out of range", ((1U < pdiv) || (p
 343:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_ConfigExternalInputSignalToBRG: Oversampling out of range", ((1U < oversa
 344:../Libraries/XMCLib/src/xmc_usic.c **** 
 345:../Libraries/XMCLib/src/xmc_usic.c ****   /* Setting the external input frequency source through DX1 */
 346:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_SetBRGInputClockSource(channel, XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T);
 1006              	 .loc 2 346 0
 1007 0014 F868     	 ldr r0,[r7,#12]
 1008 0016 0221     	 movs r1,#2
 1009 0018 FFF7FEFF 	 bl XMC_USIC_CH_SetBRGInputClockSource
 347:../Libraries/XMCLib/src/xmc_usic.c **** 
 348:../Libraries/XMCLib/src/xmc_usic.c ****   /* Setting the trigger combination mode */
 349:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_SetInputTriggerCombinationMode(channel,XMC_USIC_CH_INPUT_DX1,combination_mode);
 1010              	 .loc 2 349 0
 1011 001c 7B7A     	 ldrb r3,[r7,#9]
 1012 001e F868     	 ldr r0,[r7,#12]
 1013 0020 0121     	 movs r1,#1
 1014 0022 1A46     	 mov r2,r3
 1015 0024 FFF7FEFF 	 bl XMC_USIC_CH_SetInputTriggerCombinationMode
 350:../Libraries/XMCLib/src/xmc_usic.c **** 
 351:../Libraries/XMCLib/src/xmc_usic.c ****   /* Configuring the dividers and oversampling */
 352:../Libraries/XMCLib/src/xmc_usic.c ****   channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 1016              	 .loc 2 352 0
 1017 0028 FB68     	 ldr r3,[r7,#12]
 1018 002a 5A69     	 ldr r2,[r3,#20]
 1019 002c 074B     	 ldr r3,.L55
 1020 002e 1340     	 ands r3,r3,r2
 353:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 354:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PCTQ_Msk |
 355:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PPPEN_Msk)) |
 356:../Libraries/XMCLib/src/xmc_usic.c ****                   (((oversampling) - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 1021              	 .loc 2 356 0
 1022 0030 7A68     	 ldr r2,[r7,#4]
 1023 0032 013A     	 subs r2,r2,#1
 1024 0034 9202     	 lsls r2,r2,#10
 355:../Libraries/XMCLib/src/xmc_usic.c ****                   (((oversampling) - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 1025              	 .loc 2 355 0
 1026 0036 1A43     	 orrs r2,r2,r3
 357:../Libraries/XMCLib/src/xmc_usic.c ****                   (((pdiv) - 1U) << USIC_CH_BRG_PDIV_Pos);
 1027              	 .loc 2 357 0
 1028 0038 7B89     	 ldrh r3,[r7,#10]
 1029 003a 013B     	 subs r3,r3,#1
 1030 003c 1B04     	 lsls r3,r3,#16
 356:../Libraries/XMCLib/src/xmc_usic.c ****                   (((pdiv) - 1U) << USIC_CH_BRG_PDIV_Pos);
 1031              	 .loc 2 356 0
 1032 003e 1A43     	 orrs r2,r2,r3
 352:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 1033              	 .loc 2 352 0
 1034 0040 FB68     	 ldr r3,[r7,#12]
 1035 0042 5A61     	 str r2,[r3,#20]
 358:../Libraries/XMCLib/src/xmc_usic.c **** }
 1036              	 .loc 2 358 0
 1037 0044 1037     	 adds r7,r7,#16
 1038              	.LCFI51:
 1039              	 .cfi_def_cfa_offset 8
 1040 0046 BD46     	 mov sp,r7
 1041              	.LCFI52:
 1042              	 .cfi_def_cfa_register 13
 1043              	 
 1044 0048 80BD     	 pop {r7,pc}
 1045              	.L56:
 1046 004a 00BF     	 .align 2
 1047              	.L55:
 1048 004c EF8000FC 	 .word -67075857
 1049              	 .cfi_endproc
 1050              	.LFE245:
 1052              	 .section .text.XMC_USIC_CH_TXFIFO_Configure,"ax",%progbits
 1053              	 .align 2
 1054              	 .global XMC_USIC_CH_TXFIFO_Configure
 1055              	 .thumb
 1056              	 .thumb_func
 1058              	XMC_USIC_CH_TXFIFO_Configure:
 1059              	.LFB246:
 359:../Libraries/XMCLib/src/xmc_usic.c **** 
 360:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
 361:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t data_pointer,
 362:../Libraries/XMCLib/src/xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 363:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t limit)
 364:../Libraries/XMCLib/src/xmc_usic.c **** {
 1060              	 .loc 2 364 0
 1061              	 .cfi_startproc
 1062              	 
 1063              	 
 1064              	 
 1065 0000 80B4     	 push {r7}
 1066              	.LCFI53:
 1067              	 .cfi_def_cfa_offset 4
 1068              	 .cfi_offset 7,-4
 1069 0002 85B0     	 sub sp,sp,#20
 1070              	.LCFI54:
 1071              	 .cfi_def_cfa_offset 24
 1072 0004 00AF     	 add r7,sp,#0
 1073              	.LCFI55:
 1074              	 .cfi_def_cfa_register 7
 1075 0006 F860     	 str r0,[r7,#12]
 1076 0008 B960     	 str r1,[r7,#8]
 1077 000a 3B60     	 str r3,[r7]
 1078 000c 1346     	 mov r3,r2
 1079 000e FB71     	 strb r3,[r7,#7]
 365:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 366:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR &= (uint32_t)~USIC_CH_TBCTR_SIZE_Msk;
 1080              	 .loc 2 366 0
 1081 0010 FB68     	 ldr r3,[r7,#12]
 1082 0012 D3F80831 	 ldr r3,[r3,#264]
 1083 0016 23F0E062 	 bic r2,r3,#117440512
 1084 001a FB68     	 ldr r3,[r7,#12]
 1085 001c C3F80821 	 str r2,[r3,#264]
 367:../Libraries/XMCLib/src/xmc_usic.c **** 
 368:../Libraries/XMCLib/src/xmc_usic.c ****   /* LOF = 0, A standard transmit buffer event occurs when the filling level equals the limit value
 369:../Libraries/XMCLib/src/xmc_usic.c ****    * lower due to transmission of a data word
 370:../Libraries/XMCLib/src/xmc_usic.c ****    * STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 371:../Libraries/XMCLib/src/xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 372:../Libraries/XMCLib/src/xmc_usic.c ****    */
 373:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)(channel->TBCTR & (uint32_t)~(USIC_CH_TBCTR_LIMIT_Msk |
 1086              	 .loc 2 373 0
 1087 0020 FB68     	 ldr r3,[r7,#12]
 1088 0022 D3F80821 	 ldr r2,[r3,#264]
 1089 0026 094B     	 ldr r3,.L58
 1090 0028 1340     	 ands r3,r3,r2
 374:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_DPTR_Msk |
 375:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_SIZE_Msk)) |
 376:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)((limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1091              	 .loc 2 376 0
 1092 002a 3A68     	 ldr r2,[r7]
 1093 002c 1102     	 lsls r1,r2,#8
 1094 002e BA68     	 ldr r2,[r7,#8]
 1095 0030 1143     	 orrs r1,r1,r2
 377:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_TBCTR_DPTR_Pos) |
 378:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_TBCTR_SIZE_Pos));
 1096              	 .loc 2 378 0
 1097 0032 FA79     	 ldrb r2,[r7,#7]
 1098 0034 1206     	 lsls r2,r2,#24
 376:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_TBCTR_DPTR_Pos) |
 1099              	 .loc 2 376 0
 1100 0036 0A43     	 orrs r2,r2,r1
 375:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)((limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1101              	 .loc 2 375 0
 1102 0038 1A43     	 orrs r2,r2,r3
 373:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_DPTR_Msk |
 1103              	 .loc 2 373 0
 1104 003a FB68     	 ldr r3,[r7,#12]
 1105 003c C3F80821 	 str r2,[r3,#264]
 379:../Libraries/XMCLib/src/xmc_usic.c **** }
 1106              	 .loc 2 379 0
 1107 0040 1437     	 adds r7,r7,#20
 1108              	.LCFI56:
 1109              	 .cfi_def_cfa_offset 4
 1110 0042 BD46     	 mov sp,r7
 1111              	.LCFI57:
 1112              	 .cfi_def_cfa_register 13
 1113              	 
 1114 0044 5DF8047B 	 ldr r7,[sp],#4
 1115              	.LCFI58:
 1116              	 .cfi_restore 7
 1117              	 .cfi_def_cfa_offset 0
 1118 0048 7047     	 bx lr
 1119              	.L59:
 1120 004a 00BF     	 .align 2
 1121              	.L58:
 1122 004c C0C0FFF8 	 .word -117456704
 1123              	 .cfi_endproc
 1124              	.LFE246:
 1126              	 .section .text.XMC_USIC_CH_RXFIFO_Configure,"ax",%progbits
 1127              	 .align 2
 1128              	 .global XMC_USIC_CH_RXFIFO_Configure
 1129              	 .thumb
 1130              	 .thumb_func
 1132              	XMC_USIC_CH_RXFIFO_Configure:
 1133              	.LFB247:
 380:../Libraries/XMCLib/src/xmc_usic.c **** 
 381:../Libraries/XMCLib/src/xmc_usic.c **** 
 382:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
 383:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t data_pointer,
 384:../Libraries/XMCLib/src/xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 385:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t limit)
 386:../Libraries/XMCLib/src/xmc_usic.c **** {
 1134              	 .loc 2 386 0
 1135              	 .cfi_startproc
 1136              	 
 1137              	 
 1138              	 
 1139 0000 80B4     	 push {r7}
 1140              	.LCFI59:
 1141              	 .cfi_def_cfa_offset 4
 1142              	 .cfi_offset 7,-4
 1143 0002 85B0     	 sub sp,sp,#20
 1144              	.LCFI60:
 1145              	 .cfi_def_cfa_offset 24
 1146 0004 00AF     	 add r7,sp,#0
 1147              	.LCFI61:
 1148              	 .cfi_def_cfa_register 7
 1149 0006 F860     	 str r0,[r7,#12]
 1150 0008 B960     	 str r1,[r7,#8]
 1151 000a 3B60     	 str r3,[r7]
 1152 000c 1346     	 mov r3,r2
 1153 000e FB71     	 strb r3,[r7,#7]
 387:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 388:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR &= (uint32_t)~USIC_CH_RBCTR_SIZE_Msk;
 1154              	 .loc 2 388 0
 1155 0010 FB68     	 ldr r3,[r7,#12]
 1156 0012 D3F80C31 	 ldr r3,[r3,#268]
 1157 0016 23F0E062 	 bic r2,r3,#117440512
 1158 001a FB68     	 ldr r3,[r7,#12]
 1159 001c C3F80C21 	 str r2,[r3,#268]
 389:../Libraries/XMCLib/src/xmc_usic.c **** 
 390:../Libraries/XMCLib/src/xmc_usic.c ****   /* LOF = 1, A standard receive buffer event occurs when the filling level equals the limit value 
 391:../Libraries/XMCLib/src/xmc_usic.c ****    *  due to the reception of a new data word
 392:../Libraries/XMCLib/src/xmc_usic.c ****    */
 393:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (uint32_t)~(USIC_CH_RBCTR_LIMIT_Msk |
 1160              	 .loc 2 393 0
 1161 0020 FB68     	 ldr r3,[r7,#12]
 1162 0022 D3F80C21 	 ldr r2,[r3,#268]
 1163 0026 0A4B     	 ldr r3,.L61
 1164 0028 1340     	 ands r3,r3,r2
 394:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_DPTR_Msk |
 395:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_LOF_Msk)) |
 396:../Libraries/XMCLib/src/xmc_usic.c ****                    ((limit << USIC_CH_RBCTR_LIMIT_Pos) |
 1165              	 .loc 2 396 0
 1166 002a 3A68     	 ldr r2,[r7]
 1167 002c 1102     	 lsls r1,r2,#8
 1168 002e BA68     	 ldr r2,[r7,#8]
 1169 0030 1143     	 orrs r1,r1,r2
 397:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_RBCTR_DPTR_Pos) |
 398:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_RBCTR_SIZE_Pos) |
 1170              	 .loc 2 398 0
 1171 0032 FA79     	 ldrb r2,[r7,#7]
 1172 0034 1206     	 lsls r2,r2,#24
 397:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_RBCTR_DPTR_Pos) |
 1173              	 .loc 2 397 0
 1174 0036 0A43     	 orrs r2,r2,r1
 393:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_DPTR_Msk |
 1175              	 .loc 2 393 0
 1176 0038 1343     	 orrs r3,r3,r2
 1177 003a 43F08052 	 orr r2,r3,#268435456
 1178 003e FB68     	 ldr r3,[r7,#12]
 1179 0040 C3F80C21 	 str r2,[r3,#268]
 399:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)USIC_CH_RBCTR_LOF_Msk));
 400:../Libraries/XMCLib/src/xmc_usic.c **** }
 1180              	 .loc 2 400 0
 1181 0044 1437     	 adds r7,r7,#20
 1182              	.LCFI62:
 1183              	 .cfi_def_cfa_offset 4
 1184 0046 BD46     	 mov sp,r7
 1185              	.LCFI63:
 1186              	 .cfi_def_cfa_register 13
 1187              	 
 1188 0048 5DF8047B 	 ldr r7,[sp],#4
 1189              	.LCFI64:
 1190              	 .cfi_restore 7
 1191              	 .cfi_def_cfa_offset 0
 1192 004c 7047     	 bx lr
 1193              	.L62:
 1194 004e 00BF     	 .align 2
 1195              	.L61:
 1196 0050 C0C0FFEF 	 .word -268451648
 1197              	 .cfi_endproc
 1198              	.LFE247:
 1200              	 .section .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit,"ax",%progbits
 1201              	 .align 2
 1202              	 .global XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
 1203              	 .thumb
 1204              	 .thumb_func
 1206              	XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:
 1207              	.LFB248:
 401:../Libraries/XMCLib/src/xmc_usic.c **** 
 402:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 403:../Libraries/XMCLib/src/xmc_usic.c ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
 404:../Libraries/XMCLib/src/xmc_usic.c ****                                             const uint32_t limit)
 405:../Libraries/XMCLib/src/xmc_usic.c **** {
 1208              	 .loc 2 405 0
 1209              	 .cfi_startproc
 1210              	 
 1211              	 
 1212              	 
 1213 0000 80B4     	 push {r7}
 1214              	.LCFI65:
 1215              	 .cfi_def_cfa_offset 4
 1216              	 .cfi_offset 7,-4
 1217 0002 85B0     	 sub sp,sp,#20
 1218              	.LCFI66:
 1219              	 .cfi_def_cfa_offset 24
 1220 0004 00AF     	 add r7,sp,#0
 1221              	.LCFI67:
 1222              	 .cfi_def_cfa_register 7
 1223 0006 F860     	 str r0,[r7,#12]
 1224 0008 0B46     	 mov r3,r1
 1225 000a 7A60     	 str r2,[r7,#4]
 1226 000c FB72     	 strb r3,[r7,#11]
 406:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 407:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR &= (uint32_t)~USIC_CH_TBCTR_SIZE_Msk;
 1227              	 .loc 2 407 0
 1228 000e FB68     	 ldr r3,[r7,#12]
 1229 0010 D3F80831 	 ldr r3,[r3,#264]
 1230 0014 23F0E062 	 bic r2,r3,#117440512
 1231 0018 FB68     	 ldr r3,[r7,#12]
 1232 001a C3F80821 	 str r2,[r3,#264]
 408:../Libraries/XMCLib/src/xmc_usic.c **** 
 409:../Libraries/XMCLib/src/xmc_usic.c ****   /* STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 410:../Libraries/XMCLib/src/xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 411:../Libraries/XMCLib/src/xmc_usic.c ****    */
 412:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((uint32_t)(channel->TBCTR & (uint32_t)~USIC_CH_TBCTR_LIMIT_Msk) |
 1233              	 .loc 2 412 0
 1234 001e FB68     	 ldr r3,[r7,#12]
 1235 0020 D3F80831 	 ldr r3,[r3,#264]
 1236 0024 23F47C52 	 bic r2,r3,#16128
 413:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1237              	 .loc 2 413 0
 1238 0028 7B68     	 ldr r3,[r7,#4]
 1239 002a 1B02     	 lsls r3,r3,#8
 412:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1240              	 .loc 2 412 0
 1241 002c 1A43     	 orrs r2,r2,r3
 414:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_TBCTR_SIZE_Pos));
 1242              	 .loc 2 414 0
 1243 002e FB7A     	 ldrb r3,[r7,#11]
 1244 0030 1B06     	 lsls r3,r3,#24
 412:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1245              	 .loc 2 412 0
 1246 0032 1A43     	 orrs r2,r2,r3
 1247 0034 FB68     	 ldr r3,[r7,#12]
 1248 0036 C3F80821 	 str r2,[r3,#264]
 415:../Libraries/XMCLib/src/xmc_usic.c **** }
 1249              	 .loc 2 415 0
 1250 003a 1437     	 adds r7,r7,#20
 1251              	.LCFI68:
 1252              	 .cfi_def_cfa_offset 4
 1253 003c BD46     	 mov sp,r7
 1254              	.LCFI69:
 1255              	 .cfi_def_cfa_register 13
 1256              	 
 1257 003e 5DF8047B 	 ldr r7,[sp],#4
 1258              	.LCFI70:
 1259              	 .cfi_restore 7
 1260              	 .cfi_def_cfa_offset 0
 1261 0042 7047     	 bx lr
 1262              	 .cfi_endproc
 1263              	.LFE248:
 1265              	 .section .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit,"ax",%progbits
 1266              	 .align 2
 1267              	 .global XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
 1268              	 .thumb
 1269              	 .thumb_func
 1271              	XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:
 1272              	.LFB249:
 416:../Libraries/XMCLib/src/xmc_usic.c **** 
 417:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 418:../Libraries/XMCLib/src/xmc_usic.c ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
 419:../Libraries/XMCLib/src/xmc_usic.c ****                                             const uint32_t limit)
 420:../Libraries/XMCLib/src/xmc_usic.c **** {
 1273              	 .loc 2 420 0
 1274              	 .cfi_startproc
 1275              	 
 1276              	 
 1277              	 
 1278 0000 80B4     	 push {r7}
 1279              	.LCFI71:
 1280              	 .cfi_def_cfa_offset 4
 1281              	 .cfi_offset 7,-4
 1282 0002 85B0     	 sub sp,sp,#20
 1283              	.LCFI72:
 1284              	 .cfi_def_cfa_offset 24
 1285 0004 00AF     	 add r7,sp,#0
 1286              	.LCFI73:
 1287              	 .cfi_def_cfa_register 7
 1288 0006 F860     	 str r0,[r7,#12]
 1289 0008 0B46     	 mov r3,r1
 1290 000a 7A60     	 str r2,[r7,#4]
 1291 000c FB72     	 strb r3,[r7,#11]
 421:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 422:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR &= (uint32_t)~USIC_CH_RBCTR_SIZE_Msk;
 1292              	 .loc 2 422 0
 1293 000e FB68     	 ldr r3,[r7,#12]
 1294 0010 D3F80C31 	 ldr r3,[r3,#268]
 1295 0014 23F0E062 	 bic r2,r3,#117440512
 1296 0018 FB68     	 ldr r3,[r7,#12]
 1297 001a C3F80C21 	 str r2,[r3,#268]
 423:../Libraries/XMCLib/src/xmc_usic.c **** 
 424:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((uint32_t)(channel->RBCTR & (uint32_t)~USIC_CH_RBCTR_LIMIT_Msk) |
 1298              	 .loc 2 424 0
 1299 001e FB68     	 ldr r3,[r7,#12]
 1300 0020 D3F80C31 	 ldr r3,[r3,#268]
 1301 0024 23F47C52 	 bic r2,r3,#16128
 425:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 1302              	 .loc 2 425 0
 1303 0028 7B68     	 ldr r3,[r7,#4]
 1304 002a 1B02     	 lsls r3,r3,#8
 424:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 1305              	 .loc 2 424 0
 1306 002c 1A43     	 orrs r2,r2,r3
 426:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_RBCTR_SIZE_Pos));
 1307              	 .loc 2 426 0
 1308 002e FB7A     	 ldrb r3,[r7,#11]
 1309 0030 1B06     	 lsls r3,r3,#24
 424:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 1310              	 .loc 2 424 0
 1311 0032 1A43     	 orrs r2,r2,r3
 1312 0034 FB68     	 ldr r3,[r7,#12]
 1313 0036 C3F80C21 	 str r2,[r3,#268]
 427:../Libraries/XMCLib/src/xmc_usic.c **** }
 1314              	 .loc 2 427 0
 1315 003a 1437     	 adds r7,r7,#20
 1316              	.LCFI74:
 1317              	 .cfi_def_cfa_offset 4
 1318 003c BD46     	 mov sp,r7
 1319              	.LCFI75:
 1320              	 .cfi_def_cfa_register 13
 1321              	 
 1322 003e 5DF8047B 	 ldr r7,[sp],#4
 1323              	.LCFI76:
 1324              	 .cfi_restore 7
 1325              	 .cfi_def_cfa_offset 0
 1326 0042 7047     	 bx lr
 1327              	 .cfi_endproc
 1328              	.LFE249:
 1330              	 .section .text.XMC_USIC_CH_SetInterruptNodePointer,"ax",%progbits
 1331              	 .align 2
 1332              	 .global XMC_USIC_CH_SetInterruptNodePointer
 1333              	 .thumb
 1334              	 .thumb_func
 1336              	XMC_USIC_CH_SetInterruptNodePointer:
 1337              	.LFB250:
 428:../Libraries/XMCLib/src/xmc_usic.c **** 
 429:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 430:../Libraries/XMCLib/src/xmc_usic.c ****                                          const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
 431:../Libraries/XMCLib/src/xmc_usic.c ****                                          const uint32_t service_request)
 432:../Libraries/XMCLib/src/xmc_usic.c **** {
 1338              	 .loc 2 432 0
 1339              	 .cfi_startproc
 1340              	 
 1341              	 
 1342              	 
 1343 0000 80B4     	 push {r7}
 1344              	.LCFI77:
 1345              	 .cfi_def_cfa_offset 4
 1346              	 .cfi_offset 7,-4
 1347 0002 85B0     	 sub sp,sp,#20
 1348              	.LCFI78:
 1349              	 .cfi_def_cfa_offset 24
 1350 0004 00AF     	 add r7,sp,#0
 1351              	.LCFI79:
 1352              	 .cfi_def_cfa_register 7
 1353 0006 F860     	 str r0,[r7,#12]
 1354 0008 0B46     	 mov r3,r1
 1355 000a 7A60     	 str r2,[r7,#4]
 1356 000c FB72     	 strb r3,[r7,#11]
 433:../Libraries/XMCLib/src/xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 1357              	 .loc 2 433 0
 1358 000e FB68     	 ldr r3,[r7,#12]
 1359 0010 9A69     	 ldr r2,[r3,#24]
 1360 0012 FB7A     	 ldrb r3,[r7,#11]
 1361 0014 0721     	 movs r1,#7
 1362 0016 01FA03F3 	 lsl r3,r1,r3
 1363 001a DB43     	 mvns r3,r3
 1364 001c 1A40     	 ands r2,r2,r3
 434:../Libraries/XMCLib/src/xmc_usic.c ****                   (service_request << (uint32_t)interrupt_node));
 1365              	 .loc 2 434 0
 1366 001e FB7A     	 ldrb r3,[r7,#11]
 1367 0020 7968     	 ldr r1,[r7,#4]
 1368 0022 01FA03F3 	 lsl r3,r1,r3
 433:../Libraries/XMCLib/src/xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 1369              	 .loc 2 433 0
 1370 0026 1A43     	 orrs r2,r2,r3
 1371 0028 FB68     	 ldr r3,[r7,#12]
 1372 002a 9A61     	 str r2,[r3,#24]
 435:../Libraries/XMCLib/src/xmc_usic.c **** }
 1373              	 .loc 2 435 0
 1374 002c 1437     	 adds r7,r7,#20
 1375              	.LCFI80:
 1376              	 .cfi_def_cfa_offset 4
 1377 002e BD46     	 mov sp,r7
 1378              	.LCFI81:
 1379              	 .cfi_def_cfa_register 13
 1380              	 
 1381 0030 5DF8047B 	 ldr r7,[sp],#4
 1382              	.LCFI82:
 1383              	 .cfi_restore 7
 1384              	 .cfi_def_cfa_offset 0
 1385 0034 7047     	 bx lr
 1386              	 .cfi_endproc
 1387              	.LFE250:
 1389 0036 00BF     	 .section .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer,"ax",%progbits
 1390              	 .align 2
 1391              	 .global XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
 1392              	 .thumb
 1393              	 .thumb_func
 1395              	XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:
 1396              	.LFB251:
 436:../Libraries/XMCLib/src/xmc_usic.c **** 
 437:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 438:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t i
 439:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const uint32_t service_request)
 440:../Libraries/XMCLib/src/xmc_usic.c **** {
 1397              	 .loc 2 440 0
 1398              	 .cfi_startproc
 1399              	 
 1400              	 
 1401              	 
 1402 0000 80B4     	 push {r7}
 1403              	.LCFI83:
 1404              	 .cfi_def_cfa_offset 4
 1405              	 .cfi_offset 7,-4
 1406 0002 85B0     	 sub sp,sp,#20
 1407              	.LCFI84:
 1408              	 .cfi_def_cfa_offset 24
 1409 0004 00AF     	 add r7,sp,#0
 1410              	.LCFI85:
 1411              	 .cfi_def_cfa_register 7
 1412 0006 F860     	 str r0,[r7,#12]
 1413 0008 0B46     	 mov r3,r1
 1414 000a 7A60     	 str r2,[r7,#4]
 1415 000c FB72     	 strb r3,[r7,#11]
 441:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1416              	 .loc 2 441 0
 1417 000e FB68     	 ldr r3,[r7,#12]
 1418 0010 D3F80821 	 ldr r2,[r3,#264]
 1419 0014 FB7A     	 ldrb r3,[r7,#11]
 1420 0016 0721     	 movs r1,#7
 1421 0018 01FA03F3 	 lsl r3,r1,r3
 1422 001c DB43     	 mvns r3,r3
 1423 001e 1A40     	 ands r2,r2,r3
 442:../Libraries/XMCLib/src/xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 1424              	 .loc 2 442 0
 1425 0020 FB7A     	 ldrb r3,[r7,#11]
 1426 0022 7968     	 ldr r1,[r7,#4]
 1427 0024 01FA03F3 	 lsl r3,r1,r3
 441:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1428              	 .loc 2 441 0
 1429 0028 1A43     	 orrs r2,r2,r3
 1430 002a FB68     	 ldr r3,[r7,#12]
 1431 002c C3F80821 	 str r2,[r3,#264]
 443:../Libraries/XMCLib/src/xmc_usic.c **** }
 1432              	 .loc 2 443 0
 1433 0030 1437     	 adds r7,r7,#20
 1434              	.LCFI86:
 1435              	 .cfi_def_cfa_offset 4
 1436 0032 BD46     	 mov sp,r7
 1437              	.LCFI87:
 1438              	 .cfi_def_cfa_register 13
 1439              	 
 1440 0034 5DF8047B 	 ldr r7,[sp],#4
 1441              	.LCFI88:
 1442              	 .cfi_restore 7
 1443              	 .cfi_def_cfa_offset 0
 1444 0038 7047     	 bx lr
 1445              	 .cfi_endproc
 1446              	.LFE251:
 1448 003a 00BF     	 .section .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer,"ax",%progbits
 1449              	 .align 2
 1450              	 .global XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
 1451              	 .thumb
 1452              	 .thumb_func
 1454              	XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:
 1455              	.LFB252:
 444:../Libraries/XMCLib/src/xmc_usic.c **** 
 445:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 446:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t i
 447:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const uint32_t service_request)
 448:../Libraries/XMCLib/src/xmc_usic.c **** {
 1456              	 .loc 2 448 0
 1457              	 .cfi_startproc
 1458              	 
 1459              	 
 1460              	 
 1461 0000 80B4     	 push {r7}
 1462              	.LCFI89:
 1463              	 .cfi_def_cfa_offset 4
 1464              	 .cfi_offset 7,-4
 1465 0002 85B0     	 sub sp,sp,#20
 1466              	.LCFI90:
 1467              	 .cfi_def_cfa_offset 24
 1468 0004 00AF     	 add r7,sp,#0
 1469              	.LCFI91:
 1470              	 .cfi_def_cfa_register 7
 1471 0006 F860     	 str r0,[r7,#12]
 1472 0008 0B46     	 mov r3,r1
 1473 000a 7A60     	 str r2,[r7,#4]
 1474 000c FB72     	 strb r3,[r7,#11]
 449:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1475              	 .loc 2 449 0
 1476 000e FB68     	 ldr r3,[r7,#12]
 1477 0010 D3F80C21 	 ldr r2,[r3,#268]
 1478 0014 FB7A     	 ldrb r3,[r7,#11]
 1479 0016 0721     	 movs r1,#7
 1480 0018 01FA03F3 	 lsl r3,r1,r3
 1481 001c DB43     	 mvns r3,r3
 1482 001e 1A40     	 ands r2,r2,r3
 450:../Libraries/XMCLib/src/xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 1483              	 .loc 2 450 0
 1484 0020 FB7A     	 ldrb r3,[r7,#11]
 1485 0022 7968     	 ldr r1,[r7,#4]
 1486 0024 01FA03F3 	 lsl r3,r1,r3
 449:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1487              	 .loc 2 449 0
 1488 0028 1A43     	 orrs r2,r2,r3
 1489 002a FB68     	 ldr r3,[r7,#12]
 1490 002c C3F80C21 	 str r2,[r3,#268]
 451:../Libraries/XMCLib/src/xmc_usic.c **** }
 1491              	 .loc 2 451 0
 1492 0030 1437     	 adds r7,r7,#20
 1493              	.LCFI92:
 1494              	 .cfi_def_cfa_offset 4
 1495 0032 BD46     	 mov sp,r7
 1496              	.LCFI93:
 1497              	 .cfi_def_cfa_register 13
 1498              	 
 1499 0034 5DF8047B 	 ldr r7,[sp],#4
 1500              	.LCFI94:
 1501              	 .cfi_restore 7
 1502              	 .cfi_def_cfa_offset 0
 1503 0038 7047     	 bx lr
 1504              	 .cfi_endproc
 1505              	.LFE252:
 1507 003a 00BF     	 .section .text.XMC_USIC_Enable,"ax",%progbits
 1508              	 .align 2
 1509              	 .global XMC_USIC_Enable
 1510              	 .thumb
 1511              	 .thumb_func
 1513              	XMC_USIC_Enable:
 1514              	.LFB253:
 452:../Libraries/XMCLib/src/xmc_usic.c **** 
 453:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_Enable(XMC_USIC_t *const usic)
 454:../Libraries/XMCLib/src/xmc_usic.c **** {
 1515              	 .loc 2 454 0
 1516              	 .cfi_startproc
 1517              	 
 1518              	 
 1519 0000 80B5     	 push {r7,lr}
 1520              	.LCFI95:
 1521              	 .cfi_def_cfa_offset 8
 1522              	 .cfi_offset 7,-8
 1523              	 .cfi_offset 14,-4
 1524 0002 82B0     	 sub sp,sp,#8
 1525              	.LCFI96:
 1526              	 .cfi_def_cfa_offset 16
 1527 0004 00AF     	 add r7,sp,#0
 1528              	.LCFI97:
 1529              	 .cfi_def_cfa_register 7
 1530 0006 7860     	 str r0,[r7,#4]
 455:../Libraries/XMCLib/src/xmc_usic.c ****   if (usic == USIC0)
 1531              	 .loc 2 455 0
 1532 0008 7B68     	 ldr r3,[r7,#4]
 1533 000a 1B4A     	 ldr r2,.L75
 1534 000c 9342     	 cmp r3,r2
 1535 000e 18D1     	 bne .L69
 456:../Libraries/XMCLib/src/xmc_usic.c ****   {
 457:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 458:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC0);
 1536              	 .loc 2 458 0
 1537 0010 4FF40060 	 mov r0,#2048
 1538 0014 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 459:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC0));
 1539              	 .loc 2 459 0
 1540 0018 00BF     	 nop
 1541              	.L70:
 1542              	 .loc 2 459 0 is_stmt 0 discriminator 1
 1543 001a 4FF40060 	 mov r0,#2048
 1544 001e FFF7FEFF 	 bl XMC_SCU_CLOCK_IsPeripheralClockGated
 1545 0022 0346     	 mov r3,r0
 1546 0024 002B     	 cmp r3,#0
 1547 0026 F8D1     	 bne .L70
 460:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 461:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 462:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC0);
 1548              	 .loc 2 462 0 is_stmt 1
 1549 0028 4FF40060 	 mov r0,#2048
 1550 002c FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 463:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC0));
 1551              	 .loc 2 463 0
 1552 0030 00BF     	 nop
 1553              	.L71:
 1554              	 .loc 2 463 0 is_stmt 0 discriminator 1
 1555 0032 4FF40060 	 mov r0,#2048
 1556 0036 FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 1557 003a 0346     	 mov r3,r0
 1558 003c 002B     	 cmp r3,#0
 1559 003e F8D1     	 bne .L71
 1560 0040 17E0     	 b .L68
 1561              	.L69:
 464:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 465:../Libraries/XMCLib/src/xmc_usic.c ****   }
 466:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)  
 467:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == USIC1)
 1562              	 .loc 2 467 0 is_stmt 1
 1563 0042 7B68     	 ldr r3,[r7,#4]
 1564 0044 0D4A     	 ldr r2,.L75+4
 1565 0046 9342     	 cmp r3,r2
 1566 0048 13D1     	 bne .L68
 468:../Libraries/XMCLib/src/xmc_usic.c ****   {
 469:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 470:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC1);
 1567              	 .loc 2 470 0
 1568 004a 0D48     	 ldr r0,.L75+8
 1569 004c FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 471:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC1));
 1570              	 .loc 2 471 0
 1571 0050 00BF     	 nop
 1572              	.L73:
 1573              	 .loc 2 471 0 is_stmt 0 discriminator 1
 1574 0052 0B48     	 ldr r0,.L75+8
 1575 0054 FFF7FEFF 	 bl XMC_SCU_CLOCK_IsPeripheralClockGated
 1576 0058 0346     	 mov r3,r0
 1577 005a 002B     	 cmp r3,#0
 1578 005c F9D1     	 bne .L73
 472:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 473:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 474:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC1);
 1579              	 .loc 2 474 0 is_stmt 1
 1580 005e 0848     	 ldr r0,.L75+8
 1581 0060 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 475:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC1));
 1582              	 .loc 2 475 0
 1583 0064 00BF     	 nop
 1584              	.L74:
 1585              	 .loc 2 475 0 is_stmt 0 discriminator 1
 1586 0066 0648     	 ldr r0,.L75+8
 1587 0068 FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 1588 006c 0346     	 mov r3,r0
 1589 006e 002B     	 cmp r3,#0
 1590 0070 F9D1     	 bne .L74
 1591              	.L68:
 476:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 477:../Libraries/XMCLib/src/xmc_usic.c ****   }
 478:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 479:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)  
 480:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == USIC2)
 481:../Libraries/XMCLib/src/xmc_usic.c ****   {
 482:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 483:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC2);
 484:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC2));
 485:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 486:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 487:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC2);
 488:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC2));
 489:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 490:../Libraries/XMCLib/src/xmc_usic.c ****   }
 491:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 492:../Libraries/XMCLib/src/xmc_usic.c ****   else
 493:../Libraries/XMCLib/src/xmc_usic.c ****   {
 494:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0/*Always*/);
 495:../Libraries/XMCLib/src/xmc_usic.c ****   }
 496:../Libraries/XMCLib/src/xmc_usic.c **** }
 1592              	 .loc 2 496 0 is_stmt 1
 1593 0072 0837     	 adds r7,r7,#8
 1594              	.LCFI98:
 1595              	 .cfi_def_cfa_offset 8
 1596 0074 BD46     	 mov sp,r7
 1597              	.LCFI99:
 1598              	 .cfi_def_cfa_register 13
 1599              	 
 1600 0076 80BD     	 pop {r7,pc}
 1601              	.L76:
 1602              	 .align 2
 1603              	.L75:
 1604 0078 08000340 	 .word 1073938440
 1605 007c 08000248 	 .word 1208090632
 1606 0080 80000010 	 .word 268435584
 1607              	 .cfi_endproc
 1608              	.LFE253:
 1610              	 .section .text.XMC_USIC_Disable,"ax",%progbits
 1611              	 .align 2
 1612              	 .global XMC_USIC_Disable
 1613              	 .thumb
 1614              	 .thumb_func
 1616              	XMC_USIC_Disable:
 1617              	.LFB254:
 497:../Libraries/XMCLib/src/xmc_usic.c **** 
 498:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_Disable(XMC_USIC_t *const usic)
 499:../Libraries/XMCLib/src/xmc_usic.c **** {
 1618              	 .loc 2 499 0
 1619              	 .cfi_startproc
 1620              	 
 1621              	 
 1622 0000 80B5     	 push {r7,lr}
 1623              	.LCFI100:
 1624              	 .cfi_def_cfa_offset 8
 1625              	 .cfi_offset 7,-8
 1626              	 .cfi_offset 14,-4
 1627 0002 82B0     	 sub sp,sp,#8
 1628              	.LCFI101:
 1629              	 .cfi_def_cfa_offset 16
 1630 0004 00AF     	 add r7,sp,#0
 1631              	.LCFI102:
 1632              	 .cfi_def_cfa_register 7
 1633 0006 7860     	 str r0,[r7,#4]
 500:../Libraries/XMCLib/src/xmc_usic.c ****   if (usic == (XMC_USIC_t *)USIC0)
 1634              	 .loc 2 500 0
 1635 0008 7B68     	 ldr r3,[r7,#4]
 1636 000a 0C4A     	 ldr r2,.L80
 1637 000c 9342     	 cmp r3,r2
 1638 000e 08D1     	 bne .L78
 501:../Libraries/XMCLib/src/xmc_usic.c ****   {
 502:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 503:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC0);
 1639              	 .loc 2 503 0
 1640 0010 4FF40060 	 mov r0,#2048
 1641 0014 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 504:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 505:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 506:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC0);
 1642              	 .loc 2 506 0
 1643 0018 4FF40060 	 mov r0,#2048
 1644 001c FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 1645 0020 09E0     	 b .L77
 1646              	.L78:
 507:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 508:../Libraries/XMCLib/src/xmc_usic.c ****   }
 509:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)  
 510:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == (XMC_USIC_t *)USIC1)
 1647              	 .loc 2 510 0
 1648 0022 7B68     	 ldr r3,[r7,#4]
 1649 0024 064A     	 ldr r2,.L80+4
 1650 0026 9342     	 cmp r3,r2
 1651 0028 05D1     	 bne .L77
 511:../Libraries/XMCLib/src/xmc_usic.c ****   {
 512:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 513:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC1);
 1652              	 .loc 2 513 0
 1653 002a 0648     	 ldr r0,.L80+8
 1654 002c FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 514:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 515:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 516:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC1);
 1655              	 .loc 2 516 0
 1656 0030 0448     	 ldr r0,.L80+8
 1657 0032 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 1658              	.L77:
 517:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 518:../Libraries/XMCLib/src/xmc_usic.c ****   }
 519:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 520:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)  
 521:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == (XMC_USIC_t *)USIC2)
 522:../Libraries/XMCLib/src/xmc_usic.c ****   {
 523:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 524:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC2);
 525:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 526:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 527:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC2);
 528:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 529:../Libraries/XMCLib/src/xmc_usic.c ****   }
 530:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 531:../Libraries/XMCLib/src/xmc_usic.c ****   else
 532:../Libraries/XMCLib/src/xmc_usic.c ****   {
 533:../Libraries/XMCLib/src/xmc_usic.c **** 	  XMC_ASSERT("USIC module not available", 0/*Always*/);
 534:../Libraries/XMCLib/src/xmc_usic.c ****   }
 535:../Libraries/XMCLib/src/xmc_usic.c ****   
 536:../Libraries/XMCLib/src/xmc_usic.c **** }
 1659              	 .loc 2 536 0
 1660 0036 0837     	 adds r7,r7,#8
 1661              	.LCFI103:
 1662              	 .cfi_def_cfa_offset 8
 1663 0038 BD46     	 mov sp,r7
 1664              	.LCFI104:
 1665              	 .cfi_def_cfa_register 13
 1666              	 
 1667 003a 80BD     	 pop {r7,pc}
 1668              	.L81:
 1669              	 .align 2
 1670              	.L80:
 1671 003c 08000340 	 .word 1073938440
 1672 0040 08000248 	 .word 1208090632
 1673 0044 80000010 	 .word 268435584
 1674              	 .cfi_endproc
 1675              	.LFE254:
 1677              	 .text
 1678              	.Letext0:
 1679              	 .file 3 "c:\\tools\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1680              	 .file 4 "c:\\tools\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1681              	 .file 5 "C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/CMSIS/Infineon/XMC4300_series/Include/XMC4300.h"
 1682              	 .file 6 "C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc/xmc4_scu.h"
 1683              	 .file 7 "C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/CMSIS/Include/cmsis_gcc.h"
 1684              	 .file 8 "C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/CMSIS/Include/core_cm4.h"
 1685              	 .file 9 "C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/CMSIS/Infineon/XMC4300_series/Include/system_XMC4300.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usic.c
    {standard input}:20     .text.XMC_USIC_CH_SetInputTriggerCombinationMode:00000000 $t
    {standard input}:24     .text.XMC_USIC_CH_SetInputTriggerCombinationMode:00000000 XMC_USIC_CH_SetInputTriggerCombinationMode
    {standard input}:83     .text.XMC_USIC_CH_SetBRGInputClockSource:00000000 $t
    {standard input}:87     .text.XMC_USIC_CH_SetBRGInputClockSource:00000000 XMC_USIC_CH_SetBRGInputClockSource
    {standard input}:132    .text.XMC_USIC_CH_Enable:00000000 $t
    {standard input}:137    .text.XMC_USIC_CH_Enable:00000000 XMC_USIC_CH_Enable
    {standard input}:1513   .text.XMC_USIC_Enable:00000000 XMC_USIC_Enable
    {standard input}:218    .text.XMC_USIC_CH_Enable:0000005c $d
    {standard input}:228    .text.XMC_USIC_CH_Disable:00000000 $t
    {standard input}:233    .text.XMC_USIC_CH_Disable:00000000 XMC_USIC_CH_Disable
    {standard input}:275    .text.XMC_USIC_CH_SetBaudrate:00000000 $t
    {standard input}:280    .text.XMC_USIC_CH_SetBaudrate:00000000 XMC_USIC_CH_SetBaudrate
    {standard input}:429    .text.XMC_USIC_CH_SetBaudrate:000000d8 $d
    {standard input}:435    .text.XMC_USIC_CH_SetBaudrateEx:00000000 $t
    {standard input}:440    .text.XMC_USIC_CH_SetBaudrateEx:00000000 XMC_USIC_CH_SetBaudrateEx
    {standard input}:599    .text.XMC_USIC_CH_SetBaudrateEx:000000fc $d
    {standard input}:604    .text.XMC_USIC_CH_GetBaudrate:00000000 $t
    {standard input}:609    .text.XMC_USIC_CH_GetBaudrate:00000000 XMC_USIC_CH_GetBaudrate
    {standard input}:761    .text.XMC_USIC_CH_GetBaudrate:00000120 $d
    {standard input}:767    .text.XMC_USIC_CH_GetSCLKFrequency:00000000 $t
    {standard input}:772    .text.XMC_USIC_CH_GetSCLKFrequency:00000000 XMC_USIC_CH_GetSCLKFrequency
    {standard input}:882    .text.XMC_USIC_CH_GetSCLKFrequency:000000d0 $d
    {standard input}:888    .text.XMC_USIC_CH_GetMCLKFrequency:00000000 $t
    {standard input}:893    .text.XMC_USIC_CH_GetMCLKFrequency:00000000 XMC_USIC_CH_GetMCLKFrequency
    {standard input}:972    .text.XMC_USIC_CH_GetMCLKFrequency:0000009c $d
    {standard input}:977    .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000000 $t
    {standard input}:982    .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000000 XMC_USIC_CH_ConfigExternalInputSignalToBRG
    {standard input}:1048   .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:0000004c $d
    {standard input}:1053   .text.XMC_USIC_CH_TXFIFO_Configure:00000000 $t
    {standard input}:1058   .text.XMC_USIC_CH_TXFIFO_Configure:00000000 XMC_USIC_CH_TXFIFO_Configure
    {standard input}:1122   .text.XMC_USIC_CH_TXFIFO_Configure:0000004c $d
    {standard input}:1127   .text.XMC_USIC_CH_RXFIFO_Configure:00000000 $t
    {standard input}:1132   .text.XMC_USIC_CH_RXFIFO_Configure:00000000 XMC_USIC_CH_RXFIFO_Configure
    {standard input}:1196   .text.XMC_USIC_CH_RXFIFO_Configure:00000050 $d
    {standard input}:1201   .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:1206   .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
    {standard input}:1266   .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:1271   .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
    {standard input}:1331   .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 $t
    {standard input}:1336   .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 XMC_USIC_CH_SetInterruptNodePointer
    {standard input}:1390   .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:1395   .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
    {standard input}:1449   .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:1454   .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
    {standard input}:1508   .text.XMC_USIC_Enable:00000000 $t
    {standard input}:1604   .text.XMC_USIC_Enable:00000078 $d
    {standard input}:1611   .text.XMC_USIC_Disable:00000000 $t
    {standard input}:1616   .text.XMC_USIC_Disable:00000000 XMC_USIC_Disable
    {standard input}:1671   .text.XMC_USIC_Disable:0000003c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_GetPeripheralClockFrequency
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_CLOCK_IsPeripheralClockGated
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_IsPeripheralResetAsserted
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
