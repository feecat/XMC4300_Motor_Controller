   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "ecatappl.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_ECAT_GetALEventRegister,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_ECAT_GetALEventRegister:
  25              	.LFB138:
  26              	 .file 1 "C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc/xmc_ecat.h"
   1:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
   2:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**
   3:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @file xmc_ecat.h
   4:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @date 2015-12-27
   5:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
   6:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @cond
   7:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
   8:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   9:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  10:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  11:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * All rights reserved.                        
  12:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *                                             
  13:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * following conditions are met:   
  15:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *                                                                              
  16:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * disclaimer.                        
  18:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * 
  19:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  21:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * 
  22:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * products derived from this software without specific prior written permission.                  
  24:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *                                                                              
  25:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *                                                                              
  33:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
  36:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  37:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * Change History
  38:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * --------------
  39:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  40:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * 2015-12-27:
  41:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *     - Initial Version<br>
  42:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  43:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @endcond
  44:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  */
  45:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
  46:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**
  47:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @addtogroup XMClib XMC Peripheral Library
  48:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @{
  49:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  */
  50:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
  51:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**
  52:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @addtogroup ECAT
  53:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @brief EtherCAT Low level driver for XMC4800/XMC4300 series.
  54:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  55:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * EtherCAT is an Ethernet-based fieldbus system.
  56:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * The EtherCAT Slave Controller (ECAT) read the data addressed to them while the telegram passes t
  57:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * An EtherCAT Slave Controller (ESC) takes care of the EtherCAT communication as an interface betw
  58:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * fieldbus and the slave application. EtherCAT uses standard IEEE 802.3 Ethernet frames, thus a st
  59:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * controller can be used and no special hardware is required on master side. EtherCAT has a reserv
  60:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * 0x88A4 that distinguishes it from other Ethernet frames. Thus, EtherCAT can run in parallel to o
  61:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * protocols. EtherCAT does not require the IP protocol, however it can be encapsulated in IP/UDP. 
  62:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * Slave Controller processes the frame in hardware. Thus, communication performance is independent
  63:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * power.
  64:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  65:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * The XMC_ECAT low level driver provides functions to configure and initialize the ECAT hardware p
  66:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * For EHTERCAT stack integration, the necessary hardware accees layer APIs shall be explicitly imp
  67:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * upon the stack provider. The XMC_ECAT lld layer provides only the hardware initialization functi
  68:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * basic functionalities.
  69:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @{
  70:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  */
  71:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
  72:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** #ifndef XMC_ECAT_H
  73:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** #define XMC_ECAT_H
  74:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
  75:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**************************************************************************************************
  76:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * HEADER FILES
  77:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
  78:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
  79:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** #include "xmc_common.h"
  80:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
  81:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** #if defined (ECAT0)
  82:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
  83:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** #include "xmc_ecat_map.h"
  84:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
  85:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**************************************************************************************************
  86:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * MACROS
  87:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
  88:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
  89:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**************************************************************************************************
  90:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * ENUMS
  91:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
  92:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
  93:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**
  94:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * ECAT status return values
  95:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  */
  96:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** typedef enum XMC_ECAT_STATUS
  97:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** {
  98:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_STATUS_OK    = 0U, /**< Driver accepted application request */
  99:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_STATUS_BUSY  = 1U, /**< Driver is busy and cannot handle request */
 100:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_STATUS_ERROR = 2U  /**< Driver could not fulfil application request */
 101:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** } XMC_ECAT_STATUS_t;
 102:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 103:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 104:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * EtherCAT event enumeration types
 105:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 106:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** typedef enum XMC_ECAT_EVENT
 107:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** {
 108:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_AL_CONTROL = ECAT_AL_EVENT_MASK_AL_CE_MASK_Msk, /**< Application control event mas
 109:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_DC_LATCH = ECAT_AL_EVENT_MASK_DC_LE_MASK_Msk,  /**< Distributed Clock latch event 
 110:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_DC_SYNC0 = ECAT_AL_EVENT_MASK_ST_S0_MASK_Msk, /**< State of distributed clock sync
 111:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_DC_SYNC1 = ECAT_AL_EVENT_MASK_ST_S1_MASK_Msk, /**< State of distributed clock sync
 112:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM_ACTIVATION_REGISTER = ECAT_AL_EVENT_MASK_SM_A_MASK_Msk, /**< SyncManager activa
 113:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_EEPROM = ECAT_AL_EVENT_MASK_EEP_E_MASK_Msk, /**< EEPROM Emulation event mask*/
 114:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_WATCHDOG = ECAT_AL_EVENT_MASK_WP_D_MASK_Msk, /**< WATCHDOG process data event mask
 115:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM0 = ECAT_AL_EVENT_MASK_SMI_0_MASK_Msk, /**< Sync Manager 0 event mask*/
 116:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM1 = ECAT_AL_EVENT_MASK_SMI_1_MASK_Msk, /**< Sync Manager 1 event mask*/
 117:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM2 = ECAT_AL_EVENT_MASK_SMI_2_MASK_Msk, /**< Sync Manager 2 event mask*/
 118:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM3 = ECAT_AL_EVENT_MASK_SMI_3_MASK_Msk, /**< Sync Manager 3 event mask*/
 119:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM4 = ECAT_AL_EVENT_MASK_SMI_4_MASK_Msk, /**< Sync Manager 4 event mask*/
 120:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM5 = ECAT_AL_EVENT_MASK_SMI_5_MASK_Msk, /**< Sync Manager 5 event mask*/
 121:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM6 = ECAT_AL_EVENT_MASK_SMI_6_MASK_Msk, /**< Sync Manager 6 event mask*/
 122:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM7 = ECAT_AL_EVENT_MASK_SMI_7_MASK_Msk  /**< Sync Manager 7 event mask*/
 123:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** } XMC_ECAT_EVENT_t;
 124:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 125:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**************************************************************************************************
 126:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * DATA STRUCTURES
 127:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
 128:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 129:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /* Anonymous structure/union guard start */
 130:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** #if defined (__CC_ARM)
 131:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** #pragma push
 132:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** #pragma anon_unions
 133:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** #elif defined (__TASKING__)
 134:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** #pragma warning 586
 135:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** #endif
 136:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 137:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 138:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * ECAT port control data structure
 139:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 140:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** typedef struct XMC_ECAT_PORT_CTRL
 141:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** {
 142:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   union 
 143:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   {
 144:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     struct
 145:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     {
 146:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t enable_rstreq: 1;     /**< Master can trigger a reset of the XMC4700 / XMC4800 (::bo
 147:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 7;                   /**< Reserved bits */
 148:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t latch_input0: 2;      /**< Latch input 0 selection (::XMC_ECAT_PORT_LATCHIN0_t) */
 149:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 2;                   /**< Reserved bits */
 150:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t latch_input1: 2;      /**< Latch input 1 selection (::XMC_ECAT_PORT_LATCHIN1_t) */
 151:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 2;                   /**< Reserved bits */
 152:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t phyaddr_offset: 5;    /**< Ethernet PHY address offset, address of port 0 */
 153:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 1;                   /**< Reserved bits */
 154:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t mdio: 2;              /**< Bidirectional, push-pull management data I/O line (::XMC_
 155:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 8;                   /**< Reserved bits */
 156:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     };
 157:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 158:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t raw;
 159:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   } common;
 160:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 161:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   union 
 162:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   {  
 163:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     struct
 164:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     {
 165:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd0: 2;     /**< Receive data bit 0 (::XMC_ECAT_PORT0_CTRL_RXD0_t) */
 166:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd1: 2;     /**< Receive data bit 1 (::XMC_ECAT_PORT0_CTRL_RXD1_t) */
 167:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd2: 2;     /**< Receive data bit 2 (::XMC_ECAT_PORT0_CTRL_RXD2_t) */
 168:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd3: 2;     /**< Receive data bit 3 (::XMC_ECAT_PORT0_CTRL_RXD3_t) */
 169:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_err: 2;   /**< RX Error (::XMC_ECAT_PORT0_CTRL_RX_ERR_t) */
 170:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_dv: 2;    /**< RX Data valid (::XMC_ECAT_PORT0_CTRL_RX_DV_t) */
 171:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_clk: 2;   /**< RX Clock (::XMC_ECAT_PORT0_CTRL_RX_CLK_t) */
 172:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 2;          /**< Reserved bits */
 173:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t link: 2;     /**< Link status (::XMC_ECAT_PORT0_CTRL_LINK_t) */
 174:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 10;         /**< Reserved bits */
 175:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t tx_clk: 2;   /**< TX Clock (::XMC_ECAT_PORT0_CTRL_TX_CLK_t) */
 176:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t tx_shift: 2; /**< TX signal delay (::XMC_ECAT_PORT0_CTRL_TX_SHIFT_t) */
 177:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     };
 178:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 179:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t raw;
 180:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   } port0;
 181:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 182:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   union 
 183:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   {      
 184:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     struct
 185:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     {
 186:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd0: 2;     /**< Receive data bit 0 (::XMC_ECAT_PORT_CTRL_RXD0_t) */
 187:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd1: 2;     /**< Receive data bit 1 (::XMC_ECAT_PORT_CTRL_RXD1_t) */
 188:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd2: 2;     /**< Receive data bit 2 (::XMC_ECAT_PORT_CTRL_RXD2_t) */
 189:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd3: 2;     /**< Receive data bit 3 (::XMC_ECAT_PORT_CTRL_RXD3_t) */
 190:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_err: 2;   /**< RX Error (::XMC_ECAT_PORT_CTRL_RX_ERR_t) */
 191:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_dv: 2;    /**< RX Data valid (::XMC_ECAT_PORT_CTRL_RX_DV_t) */
 192:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_clk: 2;   /**< RX Clock (::XMC_ECAT_PORT_CTRL_RX_CLK_t) */
 193:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 2;          /**< Reserved bits */
 194:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t link: 2;     /**< Link status (::XMC_ECAT_PORT_CTRL_LINK_t) */
 195:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 10;         /**< Reserved bits */
 196:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t tx_clk: 2;   /**< TX Clock (::XMC_ECAT_PORT_CTRL_TX_CLK_t) */
 197:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t tx_shift: 2; /**< TX signal delay (::XMC_ECAT_PORT1_CTRL_TX_SHIFT_t) */
 198:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     };
 199:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 200:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t raw;
 201:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   } port1;
 202:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   
 203:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** } XMC_ECAT_PORT_CTRL_t;
 204:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 205:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 206:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * ECAT EEPROM configuration area data structure
 207:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 208:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** typedef union XMC_ECAT_CONFIG
 209:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** {
 210:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   struct
 211:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   {
 212:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t : 8;
 213:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 214:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t : 2;
 215:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t enable_dc_sync_out : 1;
 216:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t enable_dc_latch_in : 1;
 217:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t enable_enhanced_link_p0 : 1;
 218:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t enable_enhanced_link_p1 : 1;
 219:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t : 2;
 220:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 221:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t : 16;
 222:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 223:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     uint16_t sync_pulse_length; /**< Initialization value for Pulse Length of SYNC Signals register
 224:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 225:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t : 16;
 226:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 227:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     uint16_t station_alias; /**< Initialization value for Configured Station Alias Address register
 228:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 229:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     uint16_t : 16;
 230:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 231:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     uint16_t : 16;
 232:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 233:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****     uint16_t checksum;
 234:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   };
 235:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 236:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   uint32_t dword[4]; /**< Four 32 bit double word equivalent to 8 16 bit configuration area word. *
 237:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** } XMC_ECAT_CONFIG_t;
 238:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 239:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /* Anonymous structure/union guard end */
 240:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** #if defined (__CC_ARM)
 241:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** #pragma pop
 242:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** #elif defined (__TASKING__)
 243:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** #pragma warning restore
 244:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** #endif
 245:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 246:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**************************************************************************************************
 247:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * API PROTOTYPES
 248:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
 249:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 250:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** #ifdef __cplusplus
 251:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** extern "C" {
 252:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** #endif
 253:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 254:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 255:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param config XMC_ECAT_CONFIG_t
 256:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return XMC_ECAT_STATUS_t ECAT Initialization status
 257:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 258:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 259:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * Initialize the Ethernet MAC peripheral <br>
 260:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 261:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 262:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function sets the link speed, applies the duplex mode, sets auto-negotiation
 263:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * and loop-back settings.
 264:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 265:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_Init(XMC_ECAT_CONFIG_t *const config);
 266:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 267:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 268:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param None
 269:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 270:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 271:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 272:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * Enable the EtherCAT peripheral <br>
 273:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 274:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 275:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function de-asserts the peripheral reset.
 276:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 277:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_Enable(void);
 278:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 279:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 280:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param None
 281:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 282:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 283:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 284:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * Disable the EtherCAT peripheral <br>
 285:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 286:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 287:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function asserts the peripheral reset.
 288:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 289:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_Disable(void);
 290:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 291:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 292:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param phy_addr PHY address
 293:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param reg_addr Register address
 294:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param data The destination to which the read data needs to be copied to.
 295:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 296:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return XMC_ECAT_STATUS_t EtherCAT Read PHY API return status
 297:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 298:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 299:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * Read a PHY register <br>
 300:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 301:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 302:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function reads a PHY register. It essentially polls busy bit during max
 303:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * PHY_TIMEOUT time and reads the information into 'data' when not busy.
 304:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 305:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** XMC_ECAT_STATUS_t XMC_ECAT_ReadPhy(uint8_t phy_addr, uint8_t reg_addr, uint16_t *data);
 306:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 307:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 308:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param phy_addr PHY address
 309:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param reg_addr Register address
 310:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param data The data to write
 311:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return XMC_ECAT_STATUS_t EtherCAT Write PHY API return status
 312:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 313:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 314:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * Write a PHY register <br>
 315:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 316:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 317:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function reads a PHY register. It essentially writes the data and polls
 318:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * the busy bit until it is no longer busy.
 319:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 320:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** XMC_ECAT_STATUS_t XMC_ECAT_WritePhy(uint8_t phy_addr, uint8_t reg_addr, uint16_t data);
 321:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 322:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 323:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param port_ctrl Port control configuration
 324:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 325:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 326:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 327:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * Set port control configuration <br>
 328:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 329:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 330:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function sets the port control by writing the configuration into the ECAT CON register.
 331:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 332:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 333:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** __STATIC_INLINE void XMC_ECAT_SetPortControl(const XMC_ECAT_PORT_CTRL_t port_ctrl)
 334:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** {
 335:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   ECAT0_CON->CON = (uint32_t)port_ctrl.common.raw;
 336:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   ECAT0_CON->CONP0 = (uint32_t)port_ctrl.port0.raw;
 337:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   ECAT0_CON->CONP1 = (uint32_t)port_ctrl.port1.raw;
 338:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** }
 339:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 340:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 341:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param event Single or logically OR'd events specified in the enum type @refXMC_ECAT_EVENT_t
 342:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 343:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 344:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 345:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * Enable ECAT event(s) <br>
 346:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 347:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 348:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function can be used to enable ECAT event(s).
 349:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 350:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_EnableEvent(uint32_t event);
 351:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 352:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 353:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param event Single or logically OR'd events specified in the enum type @refXMC_ECAT_EVENT_t
 354:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 355:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 356:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 357:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * Disable an ECAT event(s) <br>
 358:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 359:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 360:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function can be used to disable ECAT event(s).
 361:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 362:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_DisableEvent(uint32_t event);
 363:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 364:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 365:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param None
 366:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return uint32_t Event status
 367:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 368:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 369:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * Get event status <br>
 370:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 371:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 372:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function returns the ECAT status and interrupt status as a single word. The user
 373:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * can then check the status of the events by using an appropriate mask.
 374:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 375:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** uint32_t XMC_ECAT_GetEventStatus(void);
 376:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 377:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 378:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 379:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param channel SyncManager channel number.
 380:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 381:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 382:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 383:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * Disables selected SyncManager channel <br>
 384:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 385:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 386:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * Sets bit 0 of the corresponding 0x807 register.
 387:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 388:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_DisableSyncManChannel(const uint8_t channel);
 389:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 390:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 391:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param channel SyncManager channel number.
 392:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 393:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 394:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 395:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * Enables selected SyncManager channel <br>
 396:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 397:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 398:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * Resets bit 0 of the corresponding 0x807 register.
 399:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 400:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_EnableSyncManChannel(const uint8_t channel);
 401:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** 
 402:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 403:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param None
 404:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return uint16_t Content of register 0x220-0x221
 405:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 406:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 407:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * Get content of AL event register <br>
 408:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 409:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 410:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  * Get the first two bytes of the AL Event register (0x220-0x221).
 411:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 412:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** __STATIC_INLINE uint16_t XMC_ECAT_GetALEventRegister(void)
 413:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** {
  27              	 .loc 1 413 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
 414:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h ****   return ((uint16_t)ECAT0->AL_EVENT_REQ);
  39              	 .loc 1 414 0
  40 0004 044B     	 ldr r3,.L3
  41 0006 D3F82032 	 ldr r3,[r3,#544]
  42 000a 9BB2     	 uxth r3,r3
 415:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc\xmc_ecat.h **** }
  43              	 .loc 1 415 0
  44 000c 1846     	 mov r0,r3
  45 000e BD46     	 mov sp,r7
  46              	.LCFI2:
  47              	 .cfi_def_cfa_register 13
  48              	 
  49 0010 5DF8047B 	 ldr r7,[sp],#4
  50              	.LCFI3:
  51              	 .cfi_restore 7
  52              	 .cfi_def_cfa_offset 0
  53 0014 7047     	 bx lr
  54              	.L4:
  55 0016 00BF     	 .align 2
  56              	.L3:
  57 0018 00000154 	 .word 1409351680
  58              	 .cfi_endproc
  59              	.LFE138:
  61              	 .section .text.HW_EscRead,"ax",%progbits
  62              	 .align 2
  63              	 .thumb
  64              	 .thumb_func
  66              	HW_EscRead:
  67              	.LFB171:
  68              	 .file 2 "C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC/xmc_eschw.h"
   1:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
   2:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @file xmc_eschw.h
   3:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @date 2018-01-24
   4:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
   5:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * NOTE:
   6:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * This file is copied by DAVE. Any manual modification done to this file will be lost when the cod
   7:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
   8:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @cond
   9:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  **************************************************************************************************
  10:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * ECAT_SSC v4.0.26 - ECAT_SSC APP initializes the XMC ESC and sets up the interface for Beckhoff E
  11:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  12:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Copyright (c) 2016-2019, Infineon Technologies AG
  13:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * All rights reserved.
  14:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  15:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * following conditions are met:
  17:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  18:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *   disclaimer.
  20:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  21:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *   disclaimer in the documentation and/or other materials provided with the distribution.
  23:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  24:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *   products derived from this software without specific prior written permission.
  26:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  27:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  35:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * with Infineon Technologies AG (dave@infineon.com).
  37:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  **************************************************************************************************
  38:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  39:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Change History
  40:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * --------------
  41:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  42:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * 2016-02-05:
  43:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *     - Initial version
  44:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  45:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * 2018-01-24:
  46:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *     - Added HW_ClearTimer()
  47:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  48:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @endcond
  49:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  50:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
  51:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  52:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #ifndef XMC_ESCHW_H
  53:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define XMC_ESCHW_H
  54:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  55:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**************************************************************************************************
  56:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * HEADER FILES
  57:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  **************************************************************************************************
  58:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #include "SSC/Src/esc.h"
  59:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #include "xmc_ecat.h"
  60:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #include "../E_EEPROM_XMC4/e_eeprom_xmc4.h"
  61:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  62:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  /*************************************************************************************************
  63:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   * MACROS
  64:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   *************************************************************************************************
  65:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  66:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define ECAT_TIMER_INC_P_MS (1U) /**< Timer increment value */
  67:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  68:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define pEsc ((uint8_t *)ECAT0)  /**< EtherCAT module address */
  69:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  70:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** extern uint8_t aEepromData[];
  71:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  72:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**************************************************************************************************
  73:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * API Prototypes
  74:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  **************************************************************************************************
  75:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  76:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #ifdef __cplusplus
  77:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** extern "C" {
  78:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #endif
  79:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  80:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
  81:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @ingroup ECAT_SSC_apidoc
  82:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @{
  83:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
  84:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  85:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscReadDWord(DWordValue, Address)     ((DWordValue) = (UINT32)(((volatile UINT32 *)pEsc)
  86:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  87:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscReadDWordIsr(DWordValue, Address)  HW_EscReadDWord(DWordValue, Address)              
  88:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  89:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscReadWord(WordValue, Address)       ((WordValue) = (((volatile UINT16 *)pEsc)[((Addres
  90:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  91:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscReadWordIsr(WordValue, Address)    HW_EscReadWord(WordValue, Address)                
  92:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  93:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscReadByte(ByteValue, Address)       ((ByteValue) = (((volatile UINT8 *)pEsc)[(Address)
  94:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  95:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscReadByteIsr(ByteValue, Address)    HW_EscReadByte(ByteValue, Address)                
  96:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  97:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscWriteDWord(DWordValue, Address)    ((((volatile UINT32 *)pEsc)[(Address>>2)]) = (DWor
  98:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  99:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscWriteDWordIsr(DWordValue, Address) HW_EscWriteWord(DWordValue, Address)              
 100:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 101:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscWriteWord(WordValue, Address)      ((((volatile UINT16 *)pEsc)[((Address)>>1)]) = (Wo
 102:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 103:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscWriteWordIsr(WordValue, Address)   HW_EscWriteWord(WordValue, Address)               
 104:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 105:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscWriteByte(ByteValue, Address)      ((((volatile UINT8 *)pEsc)[(Address)]) = (ByteValu
 106:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 107:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscWriteByteIsr(ByteValue, Address)   HW_EscWriteByte(ByteValue, Address)               
 108:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 109:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 110:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief 16Bit ESC read access
 111:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 112:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param pData Pointer to local destination buffer.
 113:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Address EtherCAT Slave Controller address. Specifies the offset within the ESC memory are
 114:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Len Access size in Bytes
 115:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 116:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return None
 117:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 118:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 119:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 120:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Reads from the EtherCAT Slave Controller. This function is used to access ESC registers and the 
 121:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 122:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 123:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE void HW_EscRead(MEM_ADDR *pData, UINT16 Address, UINT16 Len)
 124:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
  69              	 .loc 2 124 0
  70              	 .cfi_startproc
  71              	 
  72              	 
  73 0000 80B5     	 push {r7,lr}
  74              	.LCFI4:
  75              	 .cfi_def_cfa_offset 8
  76              	 .cfi_offset 7,-8
  77              	 .cfi_offset 14,-4
  78 0002 82B0     	 sub sp,sp,#8
  79              	.LCFI5:
  80              	 .cfi_def_cfa_offset 16
  81 0004 00AF     	 add r7,sp,#0
  82              	.LCFI6:
  83              	 .cfi_def_cfa_register 7
  84 0006 7860     	 str r0,[r7,#4]
  85 0008 0B46     	 mov r3,r1
  86 000a 7B80     	 strh r3,[r7,#2]
  87 000c 1346     	 mov r3,r2
  88 000e 3B80     	 strh r3,[r7]
 125:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   memcpy(pData, &pEsc[Address], Len);
  89              	 .loc 2 125 0
  90 0010 7B88     	 ldrh r3,[r7,#2]
  91 0012 03F1A843 	 add r3,r3,#1409286144
  92 0016 03F58033 	 add r3,r3,#65536
  93 001a 3A88     	 ldrh r2,[r7]
  94 001c 7868     	 ldr r0,[r7,#4]
  95 001e 1946     	 mov r1,r3
  96 0020 FFF7FEFF 	 bl memcpy
 126:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
  97              	 .loc 2 126 0
  98 0024 0837     	 adds r7,r7,#8
  99              	.LCFI7:
 100              	 .cfi_def_cfa_offset 8
 101 0026 BD46     	 mov sp,r7
 102              	.LCFI8:
 103              	 .cfi_def_cfa_register 13
 104              	 
 105 0028 80BD     	 pop {r7,pc}
 106              	 .cfi_endproc
 107              	.LFE171:
 109 002a 00BF     	 .section .text.HW_EscReadIsr,"ax",%progbits
 110              	 .align 2
 111              	 .thumb
 112              	 .thumb_func
 114              	HW_EscReadIsr:
 115              	.LFB172:
 127:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 128:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 129:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief Interrupt specific 16Bit ESC read access
 130:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 131:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param pData Pointer to local destination buffer.
 132:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Address EtherCAT Slave Controller address. Specifies the offset within the ESC memory are
 133:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Len Access size in Bytes
 134:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 135:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return None
 136:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 137:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 138:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 139:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Reads from the EtherCAT Slave Controller. This function is used to access ESC registers and the 
 140:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 141:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 142:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE void HW_EscReadIsr(MEM_ADDR *pData, UINT16 Address, UINT16 Len)
 143:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 116              	 .loc 2 143 0
 117              	 .cfi_startproc
 118              	 
 119              	 
 120 0000 80B5     	 push {r7,lr}
 121              	.LCFI9:
 122              	 .cfi_def_cfa_offset 8
 123              	 .cfi_offset 7,-8
 124              	 .cfi_offset 14,-4
 125 0002 82B0     	 sub sp,sp,#8
 126              	.LCFI10:
 127              	 .cfi_def_cfa_offset 16
 128 0004 00AF     	 add r7,sp,#0
 129              	.LCFI11:
 130              	 .cfi_def_cfa_register 7
 131 0006 7860     	 str r0,[r7,#4]
 132 0008 0B46     	 mov r3,r1
 133 000a 7B80     	 strh r3,[r7,#2]
 134 000c 1346     	 mov r3,r2
 135 000e 3B80     	 strh r3,[r7]
 144:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   HW_EscRead(pData, Address, Len);
 136              	 .loc 2 144 0
 137 0010 7A88     	 ldrh r2,[r7,#2]
 138 0012 3B88     	 ldrh r3,[r7]
 139 0014 7868     	 ldr r0,[r7,#4]
 140 0016 1146     	 mov r1,r2
 141 0018 1A46     	 mov r2,r3
 142 001a FFF7FEFF 	 bl HW_EscRead
 145:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 143              	 .loc 2 145 0
 144 001e 0837     	 adds r7,r7,#8
 145              	.LCFI12:
 146              	 .cfi_def_cfa_offset 8
 147 0020 BD46     	 mov sp,r7
 148              	.LCFI13:
 149              	 .cfi_def_cfa_register 13
 150              	 
 151 0022 80BD     	 pop {r7,pc}
 152              	 .cfi_endproc
 153              	.LFE172:
 155              	 .section .text.HW_EscWrite,"ax",%progbits
 156              	 .align 2
 157              	 .thumb
 158              	 .thumb_func
 160              	HW_EscWrite:
 161              	.LFB174:
 146:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 147:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 148:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief Reads data from the ESC and copies to slave mailbox memory.
 149:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 150:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param pData Pointer to local destination buffer.
 151:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Address EtherCAT Slave Controller address. Specifies the offset within the ESC memory are
 152:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Len Access size in Bytes
 153:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 154:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return None
 155:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 156:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 157:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 158:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Reads data from the ESC and copies to slave mailbox memory. If the local mailbox memory is also 
 159:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * application memory this function is equal to HW_EscRead.
 160:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 161:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 162:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE void HW_EscReadMbxMem(MEM_ADDR *pData, UINT16 Address, UINT16 Len)
 163:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 164:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   HW_EscRead(pData, Address, Len);
 165:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 166:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 167:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 168:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief 16Bit ESC write access
 169:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 170:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param pData Pointer to local source buffer.
 171:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Address EtherCAT Slave Controller address. Specifies the offset within the ESC memory are
 172:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Len Access size in Bytes
 173:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 174:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return None
 175:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 176:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 177:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 178:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Writes from the EtherCAT Slave Controller. This function is used to access ESC registers and the
 179:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 180:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 181:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE void HW_EscWrite(MEM_ADDR *pData, UINT16 Address, UINT16 Len)
 182:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 162              	 .loc 2 182 0
 163              	 .cfi_startproc
 164              	 
 165              	 
 166 0000 80B5     	 push {r7,lr}
 167              	.LCFI14:
 168              	 .cfi_def_cfa_offset 8
 169              	 .cfi_offset 7,-8
 170              	 .cfi_offset 14,-4
 171 0002 82B0     	 sub sp,sp,#8
 172              	.LCFI15:
 173              	 .cfi_def_cfa_offset 16
 174 0004 00AF     	 add r7,sp,#0
 175              	.LCFI16:
 176              	 .cfi_def_cfa_register 7
 177 0006 7860     	 str r0,[r7,#4]
 178 0008 0B46     	 mov r3,r1
 179 000a 7B80     	 strh r3,[r7,#2]
 180 000c 1346     	 mov r3,r2
 181 000e 3B80     	 strh r3,[r7]
 183:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   memcpy(&pEsc[Address], pData, Len);
 182              	 .loc 2 183 0
 183 0010 7B88     	 ldrh r3,[r7,#2]
 184 0012 03F1A843 	 add r3,r3,#1409286144
 185 0016 03F58033 	 add r3,r3,#65536
 186 001a 3A88     	 ldrh r2,[r7]
 187 001c 1846     	 mov r0,r3
 188 001e 7968     	 ldr r1,[r7,#4]
 189 0020 FFF7FEFF 	 bl memcpy
 184:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 190              	 .loc 2 184 0
 191 0024 0837     	 adds r7,r7,#8
 192              	.LCFI17:
 193              	 .cfi_def_cfa_offset 8
 194 0026 BD46     	 mov sp,r7
 195              	.LCFI18:
 196              	 .cfi_def_cfa_register 13
 197              	 
 198 0028 80BD     	 pop {r7,pc}
 199              	 .cfi_endproc
 200              	.LFE174:
 202 002a 00BF     	 .section .text.HW_EscWriteIsr,"ax",%progbits
 203              	 .align 2
 204              	 .thumb
 205              	 .thumb_func
 207              	HW_EscWriteIsr:
 208              	.LFB175:
 185:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 186:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 187:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief Interrupt specific 16Bit ESC write access
 188:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 189:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param pData Pointer to local source buffer.
 190:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Address EtherCAT Slave Controller address. Specifies the offset within the ESC memory are
 191:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Len Access size in Bytes
 192:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 193:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return None
 194:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 195:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 196:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 197:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Writes from the EtherCAT Slave Controller. This function is used to access ESC registers and the
 198:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 199:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 200:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE void HW_EscWriteIsr(MEM_ADDR *pData, UINT16 Address, UINT16 Len)
 201:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 209              	 .loc 2 201 0
 210              	 .cfi_startproc
 211              	 
 212              	 
 213 0000 80B5     	 push {r7,lr}
 214              	.LCFI19:
 215              	 .cfi_def_cfa_offset 8
 216              	 .cfi_offset 7,-8
 217              	 .cfi_offset 14,-4
 218 0002 82B0     	 sub sp,sp,#8
 219              	.LCFI20:
 220              	 .cfi_def_cfa_offset 16
 221 0004 00AF     	 add r7,sp,#0
 222              	.LCFI21:
 223              	 .cfi_def_cfa_register 7
 224 0006 7860     	 str r0,[r7,#4]
 225 0008 0B46     	 mov r3,r1
 226 000a 7B80     	 strh r3,[r7,#2]
 227 000c 1346     	 mov r3,r2
 228 000e 3B80     	 strh r3,[r7]
 202:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   HW_EscWrite(pData, Address, Len);
 229              	 .loc 2 202 0
 230 0010 7A88     	 ldrh r2,[r7,#2]
 231 0012 3B88     	 ldrh r3,[r7]
 232 0014 7868     	 ldr r0,[r7,#4]
 233 0016 1146     	 mov r1,r2
 234 0018 1A46     	 mov r2,r3
 235 001a FFF7FEFF 	 bl HW_EscWrite
 203:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 236              	 .loc 2 203 0
 237 001e 0837     	 adds r7,r7,#8
 238              	.LCFI22:
 239              	 .cfi_def_cfa_offset 8
 240 0020 BD46     	 mov sp,r7
 241              	.LCFI23:
 242              	 .cfi_def_cfa_register 13
 243              	 
 244 0022 80BD     	 pop {r7,pc}
 245              	 .cfi_endproc
 246              	.LFE175:
 248              	 .section .text.HW_GetALEventRegister,"ax",%progbits
 249              	 .align 2
 250              	 .thumb
 251              	 .thumb_func
 253              	HW_GetALEventRegister:
 254              	.LFB177:
 204:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 205:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 206:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief Writes data from the slave mailbox memory to ESC memory.
 207:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 208:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param pData Pointer to local source mailbox buffer.
 209:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Address EtherCAT Slave Controller address. Specifies the offset within the ESC memory are
 210:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Len Access size in Bytes
 211:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 212:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return None
 213:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 214:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 215:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 216:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Writes data from the slave mailbox memory to ESC memory. If the local mailbox memory is also loc
 217:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * application memory this function is equal to HW_EscWrite.
 218:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 219:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 220:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE void HW_EscWriteMbxMem(MEM_ADDR *pData, UINT16 Address, UINT16 Len)
 221:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 222:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   HW_EscWrite(pData, Address, Len);
 223:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 224:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 225:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 226:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief Get the first two bytes of the AL Event register
 227:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 228:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param None
 229:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 230:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return Content of register 0x220-0x221
 231:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 232:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 233:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 234:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 235:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 236:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 237:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE UINT16 HW_GetALEventRegister(void)
 238:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 255              	 .loc 2 238 0
 256              	 .cfi_startproc
 257              	 
 258              	 
 259 0000 80B5     	 push {r7,lr}
 260              	.LCFI24:
 261              	 .cfi_def_cfa_offset 8
 262              	 .cfi_offset 7,-8
 263              	 .cfi_offset 14,-4
 264 0002 00AF     	 add r7,sp,#0
 265              	.LCFI25:
 266              	 .cfi_def_cfa_register 7
 239:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   return XMC_ECAT_GetALEventRegister();
 267              	 .loc 2 239 0
 268 0004 FFF7FEFF 	 bl XMC_ECAT_GetALEventRegister
 269 0008 0346     	 mov r3,r0
 240:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 270              	 .loc 2 240 0
 271 000a 1846     	 mov r0,r3
 272 000c 80BD     	 pop {r7,pc}
 273              	 .cfi_endproc
 274              	.LFE177:
 276 000e 00BF     	 .section .text.HW_GetALEventRegister_Isr,"ax",%progbits
 277              	 .align 2
 278              	 .thumb
 279              	 .thumb_func
 281              	HW_GetALEventRegister_Isr:
 282              	.LFB178:
 241:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 242:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 243:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief Get the first two bytes of the AL Event register from ISR.
 244:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 245:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param None
 246:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 247:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return None
 248:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 249:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 250:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 251:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Special function for ESC access from interrupt service routines if required, otherwise this func
 252:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * HW_GetALEventRegister.
 253:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 254:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 255:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE UINT16 HW_GetALEventRegister_Isr(void)
 256:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 283              	 .loc 2 256 0
 284              	 .cfi_startproc
 285              	 
 286              	 
 287 0000 80B5     	 push {r7,lr}
 288              	.LCFI26:
 289              	 .cfi_def_cfa_offset 8
 290              	 .cfi_offset 7,-8
 291              	 .cfi_offset 14,-4
 292 0002 00AF     	 add r7,sp,#0
 293              	.LCFI27:
 294              	 .cfi_def_cfa_register 7
 257:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   return HW_GetALEventRegister();
 295              	 .loc 2 257 0
 296 0004 FFF7FEFF 	 bl HW_GetALEventRegister
 297 0008 0346     	 mov r3,r0
 258:C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 298              	 .loc 2 258 0
 299 000a 1846     	 mov r0,r3
 300 000c 80BD     	 pop {r7,pc}
 301              	 .cfi_endproc
 302              	.LFE178:
 304              	 .comm pEEPROM,4,4
 305              	 .comm bEcatWaitForInputUpdate,1,1
 306              	 .comm bEtherCATRunLed,1,1
 307              	 .comm bEtherCATErrorLed,1,1
 308              	 .comm bRunApplication,1,1
 309              	 .comm EepromReadSize,2,2
 310              	 .comm pAPPL_EEPROM_Read,4,4
 311              	 .comm pAPPL_EEPROM_Write,4,4
 312              	 .comm pAPPL_EEPROM_Reload,4,4
 313              	 .comm pAPPL_EEPROM_Store,4,4
 314              	 .comm pAPPL_MainLoop,4,4
 315              	 .global aEepromData
 316 000e 00BF     	 .section .data.aEepromData,"aw",%progbits
 317              	 .align 2
 320              	aEepromData:
 321 0000 00       	 .byte 0
 322 0001 3C       	 .byte 60
 323 0002 00       	 .byte 0
 324 0003 00       	 .byte 0
 325 0004 FF       	 .byte -1
 326 0005 01       	 .byte 1
 327 0006 00       	 .byte 0
 328 0007 00       	 .byte 0
 329 0008 00       	 .byte 0
 330 0009 00       	 .byte 0
 331 000a 00       	 .byte 0
 332 000b 00       	 .byte 0
 333 000c 00       	 .byte 0
 334 000d 00       	 .byte 0
 335 000e 07       	 .byte 7
 336 000f 00       	 .byte 0
 337 0010 01       	 .byte 1
 338 0011 00       	 .byte 0
 339 0012 00       	 .byte 0
 340 0013 00       	 .byte 0
 341 0014 98       	 .byte -104
 342 0015 07       	 .byte 7
 343 0016 00       	 .byte 0
 344 0017 00       	 .byte 0
 345 0018 00       	 .byte 0
 346 0019 00       	 .byte 0
 347 001a 00       	 .byte 0
 348 001b 00       	 .byte 0
 349 001c 00       	 .byte 0
 350 001d 00       	 .byte 0
 351 001e 00       	 .byte 0
 352 001f 00       	 .byte 0
 353 0020 00       	 .byte 0
 354 0021 00       	 .byte 0
 355 0022 00       	 .byte 0
 356 0023 00       	 .byte 0
 357 0024 00       	 .byte 0
 358 0025 00       	 .byte 0
 359 0026 00       	 .byte 0
 360 0027 00       	 .byte 0
 361 0028 00       	 .byte 0
 362 0029 00       	 .byte 0
 363 002a 00       	 .byte 0
 364 002b 00       	 .byte 0
 365 002c 00       	 .byte 0
 366 002d 00       	 .byte 0
 367 002e 00       	 .byte 0
 368 002f 00       	 .byte 0
 369 0030 00       	 .byte 0
 370 0031 10       	 .byte 16
 371 0032 80       	 .byte -128
 372 0033 00       	 .byte 0
 373 0034 80       	 .byte -128
 374 0035 10       	 .byte 16
 375 0036 80       	 .byte -128
 376 0037 00       	 .byte 0
 377 0038 04       	 .byte 4
 378 0039 00       	 .byte 0
 379 003a 00       	 .byte 0
 380 003b 00       	 .byte 0
 381 003c 00       	 .byte 0
 382 003d 00       	 .byte 0
 383 003e 00       	 .byte 0
 384 003f 00       	 .byte 0
 385 0040 00       	 .byte 0
 386 0041 00       	 .byte 0
 387 0042 00       	 .byte 0
 388 0043 00       	 .byte 0
 389 0044 00       	 .byte 0
 390 0045 00       	 .byte 0
 391 0046 00       	 .byte 0
 392 0047 00       	 .byte 0
 393 0048 00       	 .byte 0
 394 0049 00       	 .byte 0
 395 004a 00       	 .byte 0
 396 004b 00       	 .byte 0
 397 004c 00       	 .byte 0
 398 004d 00       	 .byte 0
 399 004e 00       	 .byte 0
 400 004f 00       	 .byte 0
 401 0050 00       	 .byte 0
 402 0051 00       	 .byte 0
 403 0052 00       	 .byte 0
 404 0053 00       	 .byte 0
 405 0054 00       	 .byte 0
 406 0055 00       	 .byte 0
 407 0056 00       	 .byte 0
 408 0057 00       	 .byte 0
 409 0058 00       	 .byte 0
 410 0059 00       	 .byte 0
 411 005a 00       	 .byte 0
 412 005b 00       	 .byte 0
 413 005c 00       	 .byte 0
 414 005d 00       	 .byte 0
 415 005e 00       	 .byte 0
 416 005f 00       	 .byte 0
 417 0060 00       	 .byte 0
 418 0061 00       	 .byte 0
 419 0062 00       	 .byte 0
 420 0063 00       	 .byte 0
 421 0064 00       	 .byte 0
 422 0065 00       	 .byte 0
 423 0066 00       	 .byte 0
 424 0067 00       	 .byte 0
 425 0068 00       	 .byte 0
 426 0069 00       	 .byte 0
 427 006a 00       	 .byte 0
 428 006b 00       	 .byte 0
 429 006c 00       	 .byte 0
 430 006d 00       	 .byte 0
 431 006e 00       	 .byte 0
 432 006f 00       	 .byte 0
 433 0070 00       	 .byte 0
 434 0071 00       	 .byte 0
 435 0072 00       	 .byte 0
 436 0073 00       	 .byte 0
 437 0074 00       	 .byte 0
 438 0075 00       	 .byte 0
 439 0076 00       	 .byte 0
 440 0077 00       	 .byte 0
 441 0078 00       	 .byte 0
 442 0079 00       	 .byte 0
 443 007a 00       	 .byte 0
 444 007b 00       	 .byte 0
 445 007c 0F       	 .byte 15
 446 007d 00       	 .byte 0
 447 007e 01       	 .byte 1
 448 007f 00       	 .byte 0
 449 0080 0A       	 .byte 10
 450 0081 00       	 .byte 0
 451 0082 F9       	 .byte -7
 452 0083 00       	 .byte 0
 453 0084 1D       	 .byte 29
 454 0085 0E       	 .byte 14
 455 0086 49       	 .byte 73
 456 0087 6E       	 .byte 110
 457 0088 66       	 .byte 102
 458 0089 69       	 .byte 105
 459 008a 6E       	 .byte 110
 460 008b 65       	 .byte 101
 461 008c 6F       	 .byte 111
 462 008d 6E       	 .byte 110
 463 008e 20       	 .byte 32
 464 008f 73       	 .byte 115
 465 0090 6C       	 .byte 108
 466 0091 61       	 .byte 97
 467 0092 76       	 .byte 118
 468 0093 65       	 .byte 101
 469 0094 18       	 .byte 24
 470 0095 58       	 .byte 88
 471 0096 4D       	 .byte 77
 472 0097 43       	 .byte 67
 473 0098 34       	 .byte 52
 474 0099 33       	 .byte 51
 475 009a 30       	 .byte 48
 476 009b 30       	 .byte 48
 477 009c 5F       	 .byte 95
 478 009d 4D       	 .byte 77
 479 009e 6F       	 .byte 111
 480 009f 74       	 .byte 116
 481 00a0 6F       	 .byte 111
 482 00a1 72       	 .byte 114
 483 00a2 5F       	 .byte 95
 484 00a3 43       	 .byte 67
 485 00a4 6F       	 .byte 111
 486 00a5 6E       	 .byte 110
 487 00a6 74       	 .byte 116
 488 00a7 72       	 .byte 114
 489 00a8 6F       	 .byte 111
 490 00a9 6C       	 .byte 108
 491 00aa 6C       	 .byte 108
 492 00ab 65       	 .byte 101
 493 00ac 72       	 .byte 114
 494 00ad 08       	 .byte 8
 495 00ae 53       	 .byte 83
 496 00af 79       	 .byte 121
 497 00b0 6E       	 .byte 110
 498 00b1 63       	 .byte 99
 499 00b2 68       	 .byte 104
 500 00b3 72       	 .byte 114
 501 00b4 6F       	 .byte 111
 502 00b5 6E       	 .byte 110
 503 00b6 0B       	 .byte 11
 504 00b7 53       	 .byte 83
 505 00b8 4D       	 .byte 77
 506 00b9 2D       	 .byte 45
 507 00ba 53       	 .byte 83
 508 00bb 79       	 .byte 121
 509 00bc 6E       	 .byte 110
 510 00bd 63       	 .byte 99
 511 00be 68       	 .byte 104
 512 00bf 72       	 .byte 114
 513 00c0 6F       	 .byte 111
 514 00c1 6E       	 .byte 110
 515 00c2 1F       	 .byte 31
 516 00c3 49       	 .byte 73
 517 00c4 4E       	 .byte 78
 518 00c5 5F       	 .byte 95
 519 00c6 47       	 .byte 71
 520 00c7 45       	 .byte 69
 521 00c8 4E       	 .byte 78
 522 00c9 45       	 .byte 69
 523 00ca 52       	 .byte 82
 524 00cb 49       	 .byte 73
 525 00cc 43       	 .byte 67
 526 00cd 20       	 .byte 32
 527 00ce 70       	 .byte 112
 528 00cf 72       	 .byte 114
 529 00d0 6F       	 .byte 111
 530 00d1 63       	 .byte 99
 531 00d2 65       	 .byte 101
 532 00d3 73       	 .byte 115
 533 00d4 73       	 .byte 115
 534 00d5 20       	 .byte 32
 535 00d6 64       	 .byte 100
 536 00d7 61       	 .byte 97
 537 00d8 74       	 .byte 116
 538 00d9 61       	 .byte 97
 539 00da 20       	 .byte 32
 540 00db 6D       	 .byte 109
 541 00dc 61       	 .byte 97
 542 00dd 70       	 .byte 112
 543 00de 70       	 .byte 112
 544 00df 69       	 .byte 105
 545 00e0 6E       	 .byte 110
 546 00e1 67       	 .byte 103
 547 00e2 0C       	 .byte 12
 548 00e3 41       	 .byte 65
 549 00e4 63       	 .byte 99
 550 00e5 74       	 .byte 116
 551 00e6 75       	 .byte 117
 552 00e7 61       	 .byte 97
 553 00e8 6C       	 .byte 108
 554 00e9 43       	 .byte 67
 555 00ea 6F       	 .byte 111
 556 00eb 6E       	 .byte 110
 557 00ec 66       	 .byte 102
 558 00ed 69       	 .byte 105
 559 00ee 67       	 .byte 103
 560 00ef 0E       	 .byte 14
 561 00f0 43       	 .byte 67
 562 00f1 48       	 .byte 72
 563 00f2 30       	 .byte 48
 564 00f3 5F       	 .byte 95
 565 00f4 41       	 .byte 65
 566 00f5 63       	 .byte 99
 567 00f6 74       	 .byte 116
 568 00f7 75       	 .byte 117
 569 00f8 61       	 .byte 97
 570 00f9 6C       	 .byte 108
 571 00fa 4D       	 .byte 77
 572 00fb 6F       	 .byte 111
 573 00fc 64       	 .byte 100
 574 00fd 65       	 .byte 101
 575 00fe 12       	 .byte 18
 576 00ff 43       	 .byte 67
 577 0100 48       	 .byte 72
 578 0101 30       	 .byte 48
 579 0102 5F       	 .byte 95
 580 0103 41       	 .byte 65
 581 0104 63       	 .byte 99
 582 0105 74       	 .byte 116
 583 0106 75       	 .byte 117
 584 0107 61       	 .byte 97
 585 0108 6C       	 .byte 108
 586 0109 50       	 .byte 80
 587 010a 6F       	 .byte 111
 588 010b 73       	 .byte 115
 589 010c 69       	 .byte 105
 590 010d 74       	 .byte 116
 591 010e 69       	 .byte 105
 592 010f 6F       	 .byte 111
 593 0110 6E       	 .byte 110
 594 0111 12       	 .byte 18
 595 0112 43       	 .byte 67
 596 0113 48       	 .byte 72
 597 0114 30       	 .byte 48
 598 0115 5F       	 .byte 95
 599 0116 41       	 .byte 65
 600 0117 63       	 .byte 99
 601 0118 74       	 .byte 116
 602 0119 75       	 .byte 117
 603 011a 61       	 .byte 97
 604 011b 6C       	 .byte 108
 605 011c 56       	 .byte 86
 606 011d 65       	 .byte 101
 607 011e 6C       	 .byte 108
 608 011f 6F       	 .byte 111
 609 0120 63       	 .byte 99
 610 0121 69       	 .byte 105
 611 0122 74       	 .byte 116
 612 0123 79       	 .byte 121
 613 0124 0E       	 .byte 14
 614 0125 43       	 .byte 67
 615 0126 48       	 .byte 72
 616 0127 31       	 .byte 49
 617 0128 5F       	 .byte 95
 618 0129 41       	 .byte 65
 619 012a 63       	 .byte 99
 620 012b 74       	 .byte 116
 621 012c 75       	 .byte 117
 622 012d 61       	 .byte 97
 623 012e 6C       	 .byte 108
 624 012f 4D       	 .byte 77
 625 0130 6F       	 .byte 111
 626 0131 64       	 .byte 100
 627 0132 65       	 .byte 101
 628 0133 12       	 .byte 18
 629 0134 43       	 .byte 67
 630 0135 48       	 .byte 72
 631 0136 31       	 .byte 49
 632 0137 5F       	 .byte 95
 633 0138 41       	 .byte 65
 634 0139 63       	 .byte 99
 635 013a 74       	 .byte 116
 636 013b 75       	 .byte 117
 637 013c 61       	 .byte 97
 638 013d 6C       	 .byte 108
 639 013e 50       	 .byte 80
 640 013f 6F       	 .byte 111
 641 0140 73       	 .byte 115
 642 0141 69       	 .byte 105
 643 0142 74       	 .byte 116
 644 0143 69       	 .byte 105
 645 0144 6F       	 .byte 111
 646 0145 6E       	 .byte 110
 647 0146 12       	 .byte 18
 648 0147 43       	 .byte 67
 649 0148 48       	 .byte 72
 650 0149 31       	 .byte 49
 651 014a 5F       	 .byte 95
 652 014b 41       	 .byte 65
 653 014c 63       	 .byte 99
 654 014d 74       	 .byte 116
 655 014e 75       	 .byte 117
 656 014f 61       	 .byte 97
 657 0150 6C       	 .byte 108
 658 0151 56       	 .byte 86
 659 0152 65       	 .byte 101
 660 0153 6C       	 .byte 108
 661 0154 6F       	 .byte 111
 662 0155 63       	 .byte 99
 663 0156 69       	 .byte 105
 664 0157 74       	 .byte 116
 665 0158 79       	 .byte 121
 666 0159 0E       	 .byte 14
 667 015a 43       	 .byte 67
 668 015b 48       	 .byte 72
 669 015c 32       	 .byte 50
 670 015d 5F       	 .byte 95
 671 015e 41       	 .byte 65
 672 015f 63       	 .byte 99
 673 0160 74       	 .byte 116
 674 0161 75       	 .byte 117
 675 0162 61       	 .byte 97
 676 0163 6C       	 .byte 108
 677 0164 4D       	 .byte 77
 678 0165 6F       	 .byte 111
 679 0166 64       	 .byte 100
 680 0167 65       	 .byte 101
 681 0168 12       	 .byte 18
 682 0169 43       	 .byte 67
 683 016a 48       	 .byte 72
 684 016b 32       	 .byte 50
 685 016c 5F       	 .byte 95
 686 016d 41       	 .byte 65
 687 016e 63       	 .byte 99
 688 016f 74       	 .byte 116
 689 0170 75       	 .byte 117
 690 0171 61       	 .byte 97
 691 0172 6C       	 .byte 108
 692 0173 50       	 .byte 80
 693 0174 6F       	 .byte 111
 694 0175 73       	 .byte 115
 695 0176 69       	 .byte 105
 696 0177 74       	 .byte 116
 697 0178 69       	 .byte 105
 698 0179 6F       	 .byte 111
 699 017a 6E       	 .byte 110
 700 017b 12       	 .byte 18
 701 017c 43       	 .byte 67
 702 017d 48       	 .byte 72
 703 017e 32       	 .byte 50
 704 017f 5F       	 .byte 95
 705 0180 41       	 .byte 65
 706 0181 63       	 .byte 99
 707 0182 74       	 .byte 116
 708 0183 75       	 .byte 117
 709 0184 61       	 .byte 97
 710 0185 6C       	 .byte 108
 711 0186 56       	 .byte 86
 712 0187 65       	 .byte 101
 713 0188 6C       	 .byte 108
 714 0189 6F       	 .byte 111
 715 018a 63       	 .byte 99
 716 018b 69       	 .byte 105
 717 018c 74       	 .byte 116
 718 018d 79       	 .byte 121
 719 018e 20       	 .byte 32
 720 018f 4F       	 .byte 79
 721 0190 55       	 .byte 85
 722 0191 54       	 .byte 84
 723 0192 5F       	 .byte 95
 724 0193 47       	 .byte 71
 725 0194 45       	 .byte 69
 726 0195 4E       	 .byte 78
 727 0196 45       	 .byte 69
 728 0197 52       	 .byte 82
 729 0198 49       	 .byte 73
 730 0199 43       	 .byte 67
 731 019a 20       	 .byte 32
 732 019b 70       	 .byte 112
 733 019c 72       	 .byte 114
 734 019d 6F       	 .byte 111
 735 019e 63       	 .byte 99
 736 019f 65       	 .byte 101
 737 01a0 73       	 .byte 115
 738 01a1 73       	 .byte 115
 739 01a2 20       	 .byte 32
 740 01a3 64       	 .byte 100
 741 01a4 61       	 .byte 97
 742 01a5 74       	 .byte 116
 743 01a6 61       	 .byte 97
 744 01a7 20       	 .byte 32
 745 01a8 6D       	 .byte 109
 746 01a9 61       	 .byte 97
 747 01aa 70       	 .byte 112
 748 01ab 70       	 .byte 112
 749 01ac 69       	 .byte 105
 750 01ad 6E       	 .byte 110
 751 01ae 67       	 .byte 103
 752 01af 06       	 .byte 6
 753 01b0 43       	 .byte 67
 754 01b1 6F       	 .byte 111
 755 01b2 6E       	 .byte 110
 756 01b3 66       	 .byte 102
 757 01b4 69       	 .byte 105
 758 01b5 67       	 .byte 103
 759 01b6 08       	 .byte 8
 760 01b7 43       	 .byte 67
 761 01b8 48       	 .byte 72
 762 01b9 30       	 .byte 48
 763 01ba 5F       	 .byte 95
 764 01bb 4D       	 .byte 77
 765 01bc 6F       	 .byte 111
 766 01bd 64       	 .byte 100
 767 01be 65       	 .byte 101
 768 01bf 13       	 .byte 19
 769 01c0 43       	 .byte 67
 770 01c1 48       	 .byte 72
 771 01c2 30       	 .byte 48
 772 01c3 5F       	 .byte 95
 773 01c4 50       	 .byte 80
 774 01c5 72       	 .byte 114
 775 01c6 6F       	 .byte 111
 776 01c7 66       	 .byte 102
 777 01c8 69       	 .byte 105
 778 01c9 6C       	 .byte 108
 779 01ca 65       	 .byte 101
 780 01cb 50       	 .byte 80
 781 01cc 6F       	 .byte 111
 782 01cd 73       	 .byte 115
 783 01ce 69       	 .byte 105
 784 01cf 74       	 .byte 116
 785 01d0 69       	 .byte 105
 786 01d1 6F       	 .byte 111
 787 01d2 6E       	 .byte 110
 788 01d3 13       	 .byte 19
 789 01d4 43       	 .byte 67
 790 01d5 48       	 .byte 72
 791 01d6 30       	 .byte 48
 792 01d7 5F       	 .byte 95
 793 01d8 50       	 .byte 80
 794 01d9 72       	 .byte 114
 795 01da 6F       	 .byte 111
 796 01db 66       	 .byte 102
 797 01dc 69       	 .byte 105
 798 01dd 6C       	 .byte 108
 799 01de 65       	 .byte 101
 800 01df 56       	 .byte 86
 801 01e0 65       	 .byte 101
 802 01e1 6C       	 .byte 108
 803 01e2 6F       	 .byte 111
 804 01e3 63       	 .byte 99
 805 01e4 69       	 .byte 105
 806 01e5 74       	 .byte 116
 807 01e6 79       	 .byte 121
 808 01e7 0E       	 .byte 14
 809 01e8 43       	 .byte 67
 810 01e9 48       	 .byte 72
 811 01ea 30       	 .byte 48
 812 01eb 5F       	 .byte 95
 813 01ec 50       	 .byte 80
 814 01ed 72       	 .byte 114
 815 01ee 6F       	 .byte 111
 816 01ef 66       	 .byte 102
 817 01f0 69       	 .byte 105
 818 01f1 6C       	 .byte 108
 819 01f2 65       	 .byte 101
 820 01f3 41       	 .byte 65
 821 01f4 43       	 .byte 67
 822 01f5 43       	 .byte 67
 823 01f6 08       	 .byte 8
 824 01f7 43       	 .byte 67
 825 01f8 48       	 .byte 72
 826 01f9 31       	 .byte 49
 827 01fa 5F       	 .byte 95
 828 01fb 4D       	 .byte 77
 829 01fc 6F       	 .byte 111
 830 01fd 64       	 .byte 100
 831 01fe 65       	 .byte 101
 832 01ff 13       	 .byte 19
 833 0200 43       	 .byte 67
 834 0201 48       	 .byte 72
 835 0202 31       	 .byte 49
 836 0203 5F       	 .byte 95
 837 0204 50       	 .byte 80
 838 0205 72       	 .byte 114
 839 0206 6F       	 .byte 111
 840 0207 66       	 .byte 102
 841 0208 69       	 .byte 105
 842 0209 6C       	 .byte 108
 843 020a 65       	 .byte 101
 844 020b 50       	 .byte 80
 845 020c 6F       	 .byte 111
 846 020d 73       	 .byte 115
 847 020e 69       	 .byte 105
 848 020f 74       	 .byte 116
 849 0210 69       	 .byte 105
 850 0211 6F       	 .byte 111
 851 0212 6E       	 .byte 110
 852 0213 13       	 .byte 19
 853 0214 43       	 .byte 67
 854 0215 48       	 .byte 72
 855 0216 31       	 .byte 49
 856 0217 5F       	 .byte 95
 857 0218 50       	 .byte 80
 858 0219 72       	 .byte 114
 859 021a 6F       	 .byte 111
 860 021b 66       	 .byte 102
 861 021c 69       	 .byte 105
 862 021d 6C       	 .byte 108
 863 021e 65       	 .byte 101
 864 021f 56       	 .byte 86
 865 0220 65       	 .byte 101
 866 0221 6C       	 .byte 108
 867 0222 6F       	 .byte 111
 868 0223 63       	 .byte 99
 869 0224 69       	 .byte 105
 870 0225 74       	 .byte 116
 871 0226 79       	 .byte 121
 872 0227 0E       	 .byte 14
 873 0228 43       	 .byte 67
 874 0229 48       	 .byte 72
 875 022a 31       	 .byte 49
 876 022b 5F       	 .byte 95
 877 022c 50       	 .byte 80
 878 022d 72       	 .byte 114
 879 022e 6F       	 .byte 111
 880 022f 66       	 .byte 102
 881 0230 69       	 .byte 105
 882 0231 6C       	 .byte 108
 883 0232 65       	 .byte 101
 884 0233 41       	 .byte 65
 885 0234 43       	 .byte 67
 886 0235 43       	 .byte 67
 887 0236 08       	 .byte 8
 888 0237 43       	 .byte 67
 889 0238 48       	 .byte 72
 890 0239 32       	 .byte 50
 891 023a 5F       	 .byte 95
 892 023b 4D       	 .byte 77
 893 023c 6F       	 .byte 111
 894 023d 64       	 .byte 100
 895 023e 65       	 .byte 101
 896 023f 13       	 .byte 19
 897 0240 43       	 .byte 67
 898 0241 48       	 .byte 72
 899 0242 32       	 .byte 50
 900 0243 5F       	 .byte 95
 901 0244 50       	 .byte 80
 902 0245 72       	 .byte 114
 903 0246 6F       	 .byte 111
 904 0247 66       	 .byte 102
 905 0248 69       	 .byte 105
 906 0249 6C       	 .byte 108
 907 024a 65       	 .byte 101
 908 024b 50       	 .byte 80
 909 024c 6F       	 .byte 111
 910 024d 73       	 .byte 115
 911 024e 69       	 .byte 105
 912 024f 74       	 .byte 116
 913 0250 69       	 .byte 105
 914 0251 6F       	 .byte 111
 915 0252 6E       	 .byte 110
 916 0253 13       	 .byte 19
 917 0254 43       	 .byte 67
 918 0255 48       	 .byte 72
 919 0256 32       	 .byte 50
 920 0257 5F       	 .byte 95
 921 0258 50       	 .byte 80
 922 0259 72       	 .byte 114
 923 025a 6F       	 .byte 111
 924 025b 66       	 .byte 102
 925 025c 69       	 .byte 105
 926 025d 6C       	 .byte 108
 927 025e 65       	 .byte 101
 928 025f 56       	 .byte 86
 929 0260 65       	 .byte 101
 930 0261 6C       	 .byte 108
 931 0262 6F       	 .byte 111
 932 0263 63       	 .byte 99
 933 0264 69       	 .byte 105
 934 0265 74       	 .byte 116
 935 0266 79       	 .byte 121
 936 0267 0E       	 .byte 14
 937 0268 43       	 .byte 67
 938 0269 48       	 .byte 72
 939 026a 32       	 .byte 50
 940 026b 5F       	 .byte 95
 941 026c 50       	 .byte 80
 942 026d 72       	 .byte 114
 943 026e 6F       	 .byte 111
 944 026f 66       	 .byte 102
 945 0270 69       	 .byte 105
 946 0271 6C       	 .byte 108
 947 0272 65       	 .byte 101
 948 0273 41       	 .byte 65
 949 0274 43       	 .byte 67
 950 0275 43       	 .byte 67
 951 0276 1E       	 .byte 30
 952 0277 00       	 .byte 0
 953 0278 10       	 .byte 16
 954 0279 00       	 .byte 0
 955 027a 01       	 .byte 1
 956 027b 00       	 .byte 0
 957 027c 02       	 .byte 2
 958 027d 02       	 .byte 2
 959 027e 00       	 .byte 0
 960 027f 23       	 .byte 35
 961 0280 00       	 .byte 0
 962 0281 00       	 .byte 0
 963 0282 00       	 .byte 0
 964 0283 00       	 .byte 0
 965 0284 00       	 .byte 0
 966 0285 04       	 .byte 4
 967 0286 00       	 .byte 0
 968 0287 00       	 .byte 0
 969 0288 01       	 .byte 1
 970 0289 00       	 .byte 0
 971 028a 11       	 .byte 17
 972 028b 00       	 .byte 0
 973 028c 00       	 .byte 0
 974 028d 00       	 .byte 0
 975 028e 00       	 .byte 0
 976 028f 00       	 .byte 0
 977 0290 00       	 .byte 0
 978 0291 00       	 .byte 0
 979 0292 00       	 .byte 0
 980 0293 00       	 .byte 0
 981 0294 00       	 .byte 0
 982 0295 00       	 .byte 0
 983 0296 00       	 .byte 0
 984 0297 00       	 .byte 0
 985 0298 00       	 .byte 0
 986 0299 00       	 .byte 0
 987 029a 28       	 .byte 40
 988 029b 00       	 .byte 0
 989 029c 02       	 .byte 2
 990 029d 00       	 .byte 0
 991 029e 01       	 .byte 1
 992 029f 02       	 .byte 2
 993 02a0 03       	 .byte 3
 994 02a1 FF       	 .byte -1
 995 02a2 29       	 .byte 41
 996 02a3 00       	 .byte 0
 997 02a4 10       	 .byte 16
 998 02a5 00       	 .byte 0
 999 02a6 00       	 .byte 0
 1000 02a7 10       	 .byte 16
 1001 02a8 80       	 .byte -128
 1002 02a9 00       	 .byte 0
 1003 02aa 26       	 .byte 38
 1004 02ab 00       	 .byte 0
 1005 02ac 01       	 .byte 1
 1006 02ad 01       	 .byte 1
 1007 02ae 80       	 .byte -128
 1008 02af 10       	 .byte 16
 1009 02b0 80       	 .byte -128
 1010 02b1 00       	 .byte 0
 1011 02b2 22       	 .byte 34
 1012 02b3 00       	 .byte 0
 1013 02b4 01       	 .byte 1
 1014 02b5 02       	 .byte 2
 1015 02b6 00       	 .byte 0
 1016 02b7 11       	 .byte 17
 1017 02b8 34       	 .byte 52
 1018 02b9 00       	 .byte 0
 1019 02ba 64       	 .byte 100
 1020 02bb 00       	 .byte 0
 1021 02bc 01       	 .byte 1
 1022 02bd 03       	 .byte 3
 1023 02be 00       	 .byte 0
 1024 02bf 14       	 .byte 20
 1025 02c0 28       	 .byte 40
 1026 02c1 00       	 .byte 0
 1027 02c2 20       	 .byte 32
 1028 02c3 00       	 .byte 0
 1029 02c4 01       	 .byte 1
 1030 02c5 04       	 .byte 4
 1031 02c6 32       	 .byte 50
 1032 02c7 00       	 .byte 0
 1033 02c8 2C       	 .byte 44
 1034 02c9 00       	 .byte 0
 1035 02ca 00       	 .byte 0
 1036 02cb 1A       	 .byte 26
 1037 02cc 0A       	 .byte 10
 1038 02cd 03       	 .byte 3
 1039 02ce 00       	 .byte 0
 1040 02cf 05       	 .byte 5
 1041 02d0 00       	 .byte 0
 1042 02d1 00       	 .byte 0
 1043 02d2 00       	 .byte 0
 1044 02d3 60       	 .byte 96
 1045 02d4 01       	 .byte 1
 1046 02d5 06       	 .byte 6
 1047 02d6 04       	 .byte 4
 1048 02d7 20       	 .byte 32
 1049 02d8 00       	 .byte 0
 1050 02d9 00       	 .byte 0
 1051 02da 00       	 .byte 0
 1052 02db 60       	 .byte 96
 1053 02dc 03       	 .byte 3
 1054 02dd 07       	 .byte 7
 1055 02de 04       	 .byte 4
 1056 02df 20       	 .byte 32
 1057 02e0 00       	 .byte 0
 1058 02e1 00       	 .byte 0
 1059 02e2 00       	 .byte 0
 1060 02e3 60       	 .byte 96
 1061 02e4 05       	 .byte 5
 1062 02e5 08       	 .byte 8
 1063 02e6 04       	 .byte 4
 1064 02e7 20       	 .byte 32
 1065 02e8 00       	 .byte 0
 1066 02e9 00       	 .byte 0
 1067 02ea 00       	 .byte 0
 1068 02eb 60       	 .byte 96
 1069 02ec 07       	 .byte 7
 1070 02ed 09       	 .byte 9
 1071 02ee 04       	 .byte 4
 1072 02ef 20       	 .byte 32
 1073 02f0 00       	 .byte 0
 1074 02f1 00       	 .byte 0
 1075 02f2 00       	 .byte 0
 1076 02f3 60       	 .byte 96
 1077 02f4 09       	 .byte 9
 1078 02f5 0A       	 .byte 10
 1079 02f6 04       	 .byte 4
 1080 02f7 20       	 .byte 32
 1081 02f8 00       	 .byte 0
 1082 02f9 00       	 .byte 0
 1083 02fa 00       	 .byte 0
 1084 02fb 60       	 .byte 96
 1085 02fc 0B       	 .byte 11
 1086 02fd 0B       	 .byte 11
 1087 02fe 04       	 .byte 4
 1088 02ff 20       	 .byte 32
 1089 0300 00       	 .byte 0
 1090 0301 00       	 .byte 0
 1091 0302 00       	 .byte 0
 1092 0303 60       	 .byte 96
 1093 0304 0D       	 .byte 13
 1094 0305 0C       	 .byte 12
 1095 0306 04       	 .byte 4
 1096 0307 20       	 .byte 32
 1097 0308 00       	 .byte 0
 1098 0309 00       	 .byte 0
 1099 030a 00       	 .byte 0
 1100 030b 60       	 .byte 96
 1101 030c 0F       	 .byte 15
 1102 030d 0D       	 .byte 13
 1103 030e 04       	 .byte 4
 1104 030f 20       	 .byte 32
 1105 0310 00       	 .byte 0
 1106 0311 00       	 .byte 0
 1107 0312 00       	 .byte 0
 1108 0313 60       	 .byte 96
 1109 0314 11       	 .byte 17
 1110 0315 0E       	 .byte 14
 1111 0316 04       	 .byte 4
 1112 0317 20       	 .byte 32
 1113 0318 00       	 .byte 0
 1114 0319 00       	 .byte 0
 1115 031a 00       	 .byte 0
 1116 031b 60       	 .byte 96
 1117 031c 13       	 .byte 19
 1118 031d 0F       	 .byte 15
 1119 031e 04       	 .byte 4
 1120 031f 20       	 .byte 32
 1121 0320 00       	 .byte 0
 1122 0321 00       	 .byte 0
 1123 0322 33       	 .byte 51
 1124 0323 00       	 .byte 0
 1125 0324 38       	 .byte 56
 1126 0325 00       	 .byte 0
 1127 0326 00       	 .byte 0
 1128 0327 16       	 .byte 22
 1129 0328 0D       	 .byte 13
 1130 0329 02       	 .byte 2
 1131 032a 00       	 .byte 0
 1132 032b 10       	 .byte 16
 1133 032c 00       	 .byte 0
 1134 032d 00       	 .byte 0
 1135 032e 00       	 .byte 0
 1136 032f 70       	 .byte 112
 1137 0330 01       	 .byte 1
 1138 0331 11       	 .byte 17
 1139 0332 04       	 .byte 4
 1140 0333 20       	 .byte 32
 1141 0334 00       	 .byte 0
 1142 0335 00       	 .byte 0
 1143 0336 00       	 .byte 0
 1144 0337 70       	 .byte 112
 1145 0338 03       	 .byte 3
 1146 0339 12       	 .byte 18
 1147 033a 04       	 .byte 4
 1148 033b 20       	 .byte 32
 1149 033c 00       	 .byte 0
 1150 033d 00       	 .byte 0
 1151 033e 00       	 .byte 0
 1152 033f 70       	 .byte 112
 1153 0340 05       	 .byte 5
 1154 0341 13       	 .byte 19
 1155 0342 04       	 .byte 4
 1156 0343 20       	 .byte 32
 1157 0344 00       	 .byte 0
 1158 0345 00       	 .byte 0
 1159 0346 00       	 .byte 0
 1160 0347 70       	 .byte 112
 1161 0348 07       	 .byte 7
 1162 0349 14       	 .byte 20
 1163 034a 04       	 .byte 4
 1164 034b 20       	 .byte 32
 1165 034c 00       	 .byte 0
 1166 034d 00       	 .byte 0
 1167 034e 00       	 .byte 0
 1168 034f 70       	 .byte 112
 1169 0350 09       	 .byte 9
 1170 0351 15       	 .byte 21
 1171 0352 04       	 .byte 4
 1172 0353 20       	 .byte 32
 1173 0354 00       	 .byte 0
 1174 0355 00       	 .byte 0
 1175 0356 00       	 .byte 0
 1176 0357 70       	 .byte 112
 1177 0358 0B       	 .byte 11
 1178 0359 16       	 .byte 22
 1179 035a 04       	 .byte 4
 1180 035b 20       	 .byte 32
 1181 035c 00       	 .byte 0
 1182 035d 00       	 .byte 0
 1183 035e 00       	 .byte 0
 1184 035f 70       	 .byte 112
 1185 0360 0D       	 .byte 13
 1186 0361 17       	 .byte 23
 1187 0362 04       	 .byte 4
 1188 0363 20       	 .byte 32
 1189 0364 00       	 .byte 0
 1190 0365 00       	 .byte 0
 1191 0366 00       	 .byte 0
 1192 0367 70       	 .byte 112
 1193 0368 0F       	 .byte 15
 1194 0369 18       	 .byte 24
 1195 036a 04       	 .byte 4
 1196 036b 20       	 .byte 32
 1197 036c 00       	 .byte 0
 1198 036d 00       	 .byte 0
 1199 036e 00       	 .byte 0
 1200 036f 70       	 .byte 112
 1201 0370 11       	 .byte 17
 1202 0371 19       	 .byte 25
 1203 0372 04       	 .byte 4
 1204 0373 20       	 .byte 32
 1205 0374 00       	 .byte 0
 1206 0375 00       	 .byte 0
 1207 0376 00       	 .byte 0
 1208 0377 70       	 .byte 112
 1209 0378 13       	 .byte 19
 1210 0379 1A       	 .byte 26
 1211 037a 04       	 .byte 4
 1212 037b 20       	 .byte 32
 1213 037c 00       	 .byte 0
 1214 037d 00       	 .byte 0
 1215 037e 00       	 .byte 0
 1216 037f 70       	 .byte 112
 1217 0380 15       	 .byte 21
 1218 0381 1B       	 .byte 27
 1219 0382 04       	 .byte 4
 1220 0383 20       	 .byte 32
 1221 0384 00       	 .byte 0
 1222 0385 00       	 .byte 0
 1223 0386 00       	 .byte 0
 1224 0387 70       	 .byte 112
 1225 0388 17       	 .byte 23
 1226 0389 1C       	 .byte 28
 1227 038a 04       	 .byte 4
 1228 038b 20       	 .byte 32
 1229 038c 00       	 .byte 0
 1230 038d 00       	 .byte 0
 1231 038e 00       	 .byte 0
 1232 038f 70       	 .byte 112
 1233 0390 19       	 .byte 25
 1234 0391 1D       	 .byte 29
 1235 0392 04       	 .byte 4
 1236 0393 20       	 .byte 32
 1237 0394 00       	 .byte 0
 1238 0395 00       	 .byte 0
 1239 0396 3C       	 .byte 60
 1240 0397 00       	 .byte 0
 1241 0398 0C       	 .byte 12
 1242 0399 00       	 .byte 0
 1243 039a 00       	 .byte 0
 1244 039b 00       	 .byte 0
 1245 039c 00       	 .byte 0
 1246 039d 00       	 .byte 0
 1247 039e 00       	 .byte 0
 1248 039f 00       	 .byte 0
 1249 03a0 00       	 .byte 0
 1250 03a1 00       	 .byte 0
 1251 03a2 00       	 .byte 0
 1252 03a3 00       	 .byte 0
 1253 03a4 00       	 .byte 0
 1254 03a5 00       	 .byte 0
 1255 03a6 00       	 .byte 0
 1256 03a7 00       	 .byte 0
 1257 03a8 00       	 .byte 0
 1258 03a9 00       	 .byte 0
 1259 03aa 00       	 .byte 0
 1260 03ab 00       	 .byte 0
 1261 03ac 03       	 .byte 3
 1262 03ad 04       	 .byte 4
 1263 03ae 00       	 .byte 0
 1264 03af 00       	 .byte 0
 1265 03b0 00       	 .byte 0
 1266 03b1 00       	 .byte 0
 1267 03b2 FF       	 .byte -1
 1268 03b3 FF       	 .byte -1
 1269 03b4 FF       	 .byte -1
 1270 03b5 FF       	 .byte -1
 1271 03b6 FF       	 .byte -1
 1272 03b7 FF       	 .byte -1
 1273 03b8 FF       	 .byte -1
 1274 03b9 FF       	 .byte -1
 1275 03ba FF       	 .byte -1
 1276 03bb FF       	 .byte -1
 1277 03bc FF       	 .byte -1
 1278 03bd FF       	 .byte -1
 1279 03be FF       	 .byte -1
 1280 03bf FF       	 .byte -1
 1281 03c0 FF       	 .byte -1
 1282 03c1 FF       	 .byte -1
 1283 03c2 FF       	 .byte -1
 1284 03c3 FF       	 .byte -1
 1285 03c4 FF       	 .byte -1
 1286 03c5 FF       	 .byte -1
 1287 03c6 FF       	 .byte -1
 1288 03c7 FF       	 .byte -1
 1289 03c8 FF       	 .byte -1
 1290 03c9 FF       	 .byte -1
 1291 03ca FF       	 .byte -1
 1292 03cb FF       	 .byte -1
 1293 03cc FF       	 .byte -1
 1294 03cd FF       	 .byte -1
 1295 03ce FF       	 .byte -1
 1296 03cf FF       	 .byte -1
 1297 03d0 FF       	 .byte -1
 1298 03d1 FF       	 .byte -1
 1299 03d2 FF       	 .byte -1
 1300 03d3 FF       	 .byte -1
 1301 03d4 FF       	 .byte -1
 1302 03d5 FF       	 .byte -1
 1303 03d6 FF       	 .byte -1
 1304 03d7 FF       	 .byte -1
 1305 03d8 FF       	 .byte -1
 1306 03d9 FF       	 .byte -1
 1307 03da FF       	 .byte -1
 1308 03db FF       	 .byte -1
 1309 03dc FF       	 .byte -1
 1310 03dd FF       	 .byte -1
 1311 03de FF       	 .byte -1
 1312 03df FF       	 .byte -1
 1313 03e0 FF       	 .byte -1
 1314 03e1 FF       	 .byte -1
 1315 03e2 FF       	 .byte -1
 1316 03e3 FF       	 .byte -1
 1317 03e4 FF       	 .byte -1
 1318 03e5 FF       	 .byte -1
 1319 03e6 FF       	 .byte -1
 1320 03e7 FF       	 .byte -1
 1321 03e8 FF       	 .byte -1
 1322 03e9 FF       	 .byte -1
 1323 03ea FF       	 .byte -1
 1324 03eb FF       	 .byte -1
 1325 03ec FF       	 .byte -1
 1326 03ed FF       	 .byte -1
 1327 03ee FF       	 .byte -1
 1328 03ef FF       	 .byte -1
 1329 03f0 FF       	 .byte -1
 1330 03f1 FF       	 .byte -1
 1331 03f2 FF       	 .byte -1
 1332 03f3 FF       	 .byte -1
 1333 03f4 FF       	 .byte -1
 1334 03f5 FF       	 .byte -1
 1335 03f6 FF       	 .byte -1
 1336 03f7 FF       	 .byte -1
 1337 03f8 FF       	 .byte -1
 1338 03f9 FF       	 .byte -1
 1339 03fa FF       	 .byte -1
 1340 03fb FF       	 .byte -1
 1341 03fc FF       	 .byte -1
 1342 03fd FF       	 .byte -1
 1343 03fe FF       	 .byte -1
 1344 03ff FF       	 .byte -1
 1345 0400 FF       	 .byte -1
 1346 0401 FF       	 .byte -1
 1347 0402 FF       	 .byte -1
 1348 0403 FF       	 .byte -1
 1349 0404 FF       	 .byte -1
 1350 0405 FF       	 .byte -1
 1351 0406 FF       	 .byte -1
 1352 0407 FF       	 .byte -1
 1353 0408 FF       	 .byte -1
 1354 0409 FF       	 .byte -1
 1355 040a FF       	 .byte -1
 1356 040b FF       	 .byte -1
 1357 040c FF       	 .byte -1
 1358 040d FF       	 .byte -1
 1359 040e FF       	 .byte -1
 1360 040f FF       	 .byte -1
 1361 0410 FF       	 .byte -1
 1362 0411 FF       	 .byte -1
 1363 0412 FF       	 .byte -1
 1364 0413 FF       	 .byte -1
 1365 0414 FF       	 .byte -1
 1366 0415 FF       	 .byte -1
 1367 0416 FF       	 .byte -1
 1368 0417 FF       	 .byte -1
 1369 0418 FF       	 .byte -1
 1370 0419 FF       	 .byte -1
 1371 041a FF       	 .byte -1
 1372 041b FF       	 .byte -1
 1373 041c FF       	 .byte -1
 1374 041d FF       	 .byte -1
 1375 041e FF       	 .byte -1
 1376 041f FF       	 .byte -1
 1377 0420 FF       	 .byte -1
 1378 0421 FF       	 .byte -1
 1379 0422 FF       	 .byte -1
 1380 0423 FF       	 .byte -1
 1381 0424 FF       	 .byte -1
 1382 0425 FF       	 .byte -1
 1383 0426 FF       	 .byte -1
 1384 0427 FF       	 .byte -1
 1385 0428 FF       	 .byte -1
 1386 0429 FF       	 .byte -1
 1387 042a FF       	 .byte -1
 1388 042b FF       	 .byte -1
 1389 042c FF       	 .byte -1
 1390 042d FF       	 .byte -1
 1391 042e FF       	 .byte -1
 1392 042f FF       	 .byte -1
 1393 0430 FF       	 .byte -1
 1394 0431 FF       	 .byte -1
 1395 0432 FF       	 .byte -1
 1396 0433 FF       	 .byte -1
 1397 0434 FF       	 .byte -1
 1398 0435 FF       	 .byte -1
 1399 0436 FF       	 .byte -1
 1400 0437 FF       	 .byte -1
 1401 0438 FF       	 .byte -1
 1402 0439 FF       	 .byte -1
 1403 043a FF       	 .byte -1
 1404 043b FF       	 .byte -1
 1405 043c FF       	 .byte -1
 1406 043d FF       	 .byte -1
 1407 043e FF       	 .byte -1
 1408 043f FF       	 .byte -1
 1409 0440 FF       	 .byte -1
 1410 0441 FF       	 .byte -1
 1411 0442 FF       	 .byte -1
 1412 0443 FF       	 .byte -1
 1413 0444 FF       	 .byte -1
 1414 0445 FF       	 .byte -1
 1415 0446 FF       	 .byte -1
 1416 0447 FF       	 .byte -1
 1417 0448 FF       	 .byte -1
 1418 0449 FF       	 .byte -1
 1419 044a FF       	 .byte -1
 1420 044b FF       	 .byte -1
 1421 044c FF       	 .byte -1
 1422 044d FF       	 .byte -1
 1423 044e FF       	 .byte -1
 1424 044f FF       	 .byte -1
 1425 0450 FF       	 .byte -1
 1426 0451 FF       	 .byte -1
 1427 0452 FF       	 .byte -1
 1428 0453 FF       	 .byte -1
 1429 0454 FF       	 .byte -1
 1430 0455 FF       	 .byte -1
 1431 0456 FF       	 .byte -1
 1432 0457 FF       	 .byte -1
 1433 0458 FF       	 .byte -1
 1434 0459 FF       	 .byte -1
 1435 045a FF       	 .byte -1
 1436 045b FF       	 .byte -1
 1437 045c FF       	 .byte -1
 1438 045d FF       	 .byte -1
 1439 045e FF       	 .byte -1
 1440 045f FF       	 .byte -1
 1441 0460 FF       	 .byte -1
 1442 0461 FF       	 .byte -1
 1443 0462 FF       	 .byte -1
 1444 0463 FF       	 .byte -1
 1445 0464 FF       	 .byte -1
 1446 0465 FF       	 .byte -1
 1447 0466 FF       	 .byte -1
 1448 0467 FF       	 .byte -1
 1449 0468 FF       	 .byte -1
 1450 0469 FF       	 .byte -1
 1451 046a FF       	 .byte -1
 1452 046b FF       	 .byte -1
 1453 046c FF       	 .byte -1
 1454 046d FF       	 .byte -1
 1455 046e FF       	 .byte -1
 1456 046f FF       	 .byte -1
 1457 0470 FF       	 .byte -1
 1458 0471 FF       	 .byte -1
 1459 0472 FF       	 .byte -1
 1460 0473 FF       	 .byte -1
 1461 0474 FF       	 .byte -1
 1462 0475 FF       	 .byte -1
 1463 0476 FF       	 .byte -1
 1464 0477 FF       	 .byte -1
 1465 0478 FF       	 .byte -1
 1466 0479 FF       	 .byte -1
 1467 047a FF       	 .byte -1
 1468 047b FF       	 .byte -1
 1469 047c FF       	 .byte -1
 1470 047d FF       	 .byte -1
 1471 047e FF       	 .byte -1
 1472 047f FF       	 .byte -1
 1473 0480 FF       	 .byte -1
 1474 0481 FF       	 .byte -1
 1475 0482 FF       	 .byte -1
 1476 0483 FF       	 .byte -1
 1477 0484 FF       	 .byte -1
 1478 0485 FF       	 .byte -1
 1479 0486 FF       	 .byte -1
 1480 0487 FF       	 .byte -1
 1481 0488 FF       	 .byte -1
 1482 0489 FF       	 .byte -1
 1483 048a FF       	 .byte -1
 1484 048b FF       	 .byte -1
 1485 048c FF       	 .byte -1
 1486 048d FF       	 .byte -1
 1487 048e FF       	 .byte -1
 1488 048f FF       	 .byte -1
 1489 0490 FF       	 .byte -1
 1490 0491 FF       	 .byte -1
 1491 0492 FF       	 .byte -1
 1492 0493 FF       	 .byte -1
 1493 0494 FF       	 .byte -1
 1494 0495 FF       	 .byte -1
 1495 0496 FF       	 .byte -1
 1496 0497 FF       	 .byte -1
 1497 0498 FF       	 .byte -1
 1498 0499 FF       	 .byte -1
 1499 049a FF       	 .byte -1
 1500 049b FF       	 .byte -1
 1501 049c FF       	 .byte -1
 1502 049d FF       	 .byte -1
 1503 049e FF       	 .byte -1
 1504 049f FF       	 .byte -1
 1505 04a0 FF       	 .byte -1
 1506 04a1 FF       	 .byte -1
 1507 04a2 FF       	 .byte -1
 1508 04a3 FF       	 .byte -1
 1509 04a4 FF       	 .byte -1
 1510 04a5 FF       	 .byte -1
 1511 04a6 FF       	 .byte -1
 1512 04a7 FF       	 .byte -1
 1513 04a8 FF       	 .byte -1
 1514 04a9 FF       	 .byte -1
 1515 04aa FF       	 .byte -1
 1516 04ab FF       	 .byte -1
 1517 04ac FF       	 .byte -1
 1518 04ad FF       	 .byte -1
 1519 04ae FF       	 .byte -1
 1520 04af FF       	 .byte -1
 1521 04b0 FF       	 .byte -1
 1522 04b1 FF       	 .byte -1
 1523 04b2 FF       	 .byte -1
 1524 04b3 FF       	 .byte -1
 1525 04b4 FF       	 .byte -1
 1526 04b5 FF       	 .byte -1
 1527 04b6 FF       	 .byte -1
 1528 04b7 FF       	 .byte -1
 1529 04b8 FF       	 .byte -1
 1530 04b9 FF       	 .byte -1
 1531 04ba FF       	 .byte -1
 1532 04bb FF       	 .byte -1
 1533 04bc FF       	 .byte -1
 1534 04bd FF       	 .byte -1
 1535 04be FF       	 .byte -1
 1536 04bf FF       	 .byte -1
 1537 04c0 FF       	 .byte -1
 1538 04c1 FF       	 .byte -1
 1539 04c2 FF       	 .byte -1
 1540 04c3 FF       	 .byte -1
 1541 04c4 FF       	 .byte -1
 1542 04c5 FF       	 .byte -1
 1543 04c6 FF       	 .byte -1
 1544 04c7 FF       	 .byte -1
 1545 04c8 FF       	 .byte -1
 1546 04c9 FF       	 .byte -1
 1547 04ca FF       	 .byte -1
 1548 04cb FF       	 .byte -1
 1549 04cc FF       	 .byte -1
 1550 04cd FF       	 .byte -1
 1551 04ce FF       	 .byte -1
 1552 04cf FF       	 .byte -1
 1553 04d0 FF       	 .byte -1
 1554 04d1 FF       	 .byte -1
 1555 04d2 FF       	 .byte -1
 1556 04d3 FF       	 .byte -1
 1557 04d4 FF       	 .byte -1
 1558 04d5 FF       	 .byte -1
 1559 04d6 FF       	 .byte -1
 1560 04d7 FF       	 .byte -1
 1561 04d8 FF       	 .byte -1
 1562 04d9 FF       	 .byte -1
 1563 04da FF       	 .byte -1
 1564 04db FF       	 .byte -1
 1565 04dc FF       	 .byte -1
 1566 04dd FF       	 .byte -1
 1567 04de FF       	 .byte -1
 1568 04df FF       	 .byte -1
 1569 04e0 FF       	 .byte -1
 1570 04e1 FF       	 .byte -1
 1571 04e2 FF       	 .byte -1
 1572 04e3 FF       	 .byte -1
 1573 04e4 FF       	 .byte -1
 1574 04e5 FF       	 .byte -1
 1575 04e6 FF       	 .byte -1
 1576 04e7 FF       	 .byte -1
 1577 04e8 FF       	 .byte -1
 1578 04e9 FF       	 .byte -1
 1579 04ea FF       	 .byte -1
 1580 04eb FF       	 .byte -1
 1581 04ec FF       	 .byte -1
 1582 04ed FF       	 .byte -1
 1583 04ee FF       	 .byte -1
 1584 04ef FF       	 .byte -1
 1585 04f0 FF       	 .byte -1
 1586 04f1 FF       	 .byte -1
 1587 04f2 FF       	 .byte -1
 1588 04f3 FF       	 .byte -1
 1589 04f4 FF       	 .byte -1
 1590 04f5 FF       	 .byte -1
 1591 04f6 FF       	 .byte -1
 1592 04f7 FF       	 .byte -1
 1593 04f8 FF       	 .byte -1
 1594 04f9 FF       	 .byte -1
 1595 04fa FF       	 .byte -1
 1596 04fb FF       	 .byte -1
 1597 04fc FF       	 .byte -1
 1598 04fd FF       	 .byte -1
 1599 04fe FF       	 .byte -1
 1600 04ff FF       	 .byte -1
 1601 0500 FF       	 .byte -1
 1602 0501 FF       	 .byte -1
 1603 0502 FF       	 .byte -1
 1604 0503 FF       	 .byte -1
 1605 0504 FF       	 .byte -1
 1606 0505 FF       	 .byte -1
 1607 0506 FF       	 .byte -1
 1608 0507 FF       	 .byte -1
 1609 0508 FF       	 .byte -1
 1610 0509 FF       	 .byte -1
 1611 050a FF       	 .byte -1
 1612 050b FF       	 .byte -1
 1613 050c FF       	 .byte -1
 1614 050d FF       	 .byte -1
 1615 050e FF       	 .byte -1
 1616 050f FF       	 .byte -1
 1617 0510 FF       	 .byte -1
 1618 0511 FF       	 .byte -1
 1619 0512 FF       	 .byte -1
 1620 0513 FF       	 .byte -1
 1621 0514 FF       	 .byte -1
 1622 0515 FF       	 .byte -1
 1623 0516 FF       	 .byte -1
 1624 0517 FF       	 .byte -1
 1625 0518 FF       	 .byte -1
 1626 0519 FF       	 .byte -1
 1627 051a FF       	 .byte -1
 1628 051b FF       	 .byte -1
 1629 051c FF       	 .byte -1
 1630 051d FF       	 .byte -1
 1631 051e FF       	 .byte -1
 1632 051f FF       	 .byte -1
 1633 0520 FF       	 .byte -1
 1634 0521 FF       	 .byte -1
 1635 0522 FF       	 .byte -1
 1636 0523 FF       	 .byte -1
 1637 0524 FF       	 .byte -1
 1638 0525 FF       	 .byte -1
 1639 0526 FF       	 .byte -1
 1640 0527 FF       	 .byte -1
 1641 0528 FF       	 .byte -1
 1642 0529 FF       	 .byte -1
 1643 052a FF       	 .byte -1
 1644 052b FF       	 .byte -1
 1645 052c FF       	 .byte -1
 1646 052d FF       	 .byte -1
 1647 052e FF       	 .byte -1
 1648 052f FF       	 .byte -1
 1649 0530 FF       	 .byte -1
 1650 0531 FF       	 .byte -1
 1651 0532 FF       	 .byte -1
 1652 0533 FF       	 .byte -1
 1653 0534 FF       	 .byte -1
 1654 0535 FF       	 .byte -1
 1655 0536 FF       	 .byte -1
 1656 0537 FF       	 .byte -1
 1657 0538 FF       	 .byte -1
 1658 0539 FF       	 .byte -1
 1659 053a FF       	 .byte -1
 1660 053b FF       	 .byte -1
 1661 053c FF       	 .byte -1
 1662 053d FF       	 .byte -1
 1663 053e FF       	 .byte -1
 1664 053f FF       	 .byte -1
 1665 0540 FF       	 .byte -1
 1666 0541 FF       	 .byte -1
 1667 0542 FF       	 .byte -1
 1668 0543 FF       	 .byte -1
 1669 0544 FF       	 .byte -1
 1670 0545 FF       	 .byte -1
 1671 0546 FF       	 .byte -1
 1672 0547 FF       	 .byte -1
 1673 0548 FF       	 .byte -1
 1674 0549 FF       	 .byte -1
 1675 054a FF       	 .byte -1
 1676 054b FF       	 .byte -1
 1677 054c FF       	 .byte -1
 1678 054d FF       	 .byte -1
 1679 054e FF       	 .byte -1
 1680 054f FF       	 .byte -1
 1681 0550 FF       	 .byte -1
 1682 0551 FF       	 .byte -1
 1683 0552 FF       	 .byte -1
 1684 0553 FF       	 .byte -1
 1685 0554 FF       	 .byte -1
 1686 0555 FF       	 .byte -1
 1687 0556 FF       	 .byte -1
 1688 0557 FF       	 .byte -1
 1689 0558 FF       	 .byte -1
 1690 0559 FF       	 .byte -1
 1691 055a FF       	 .byte -1
 1692 055b FF       	 .byte -1
 1693 055c FF       	 .byte -1
 1694 055d FF       	 .byte -1
 1695 055e FF       	 .byte -1
 1696 055f FF       	 .byte -1
 1697 0560 FF       	 .byte -1
 1698 0561 FF       	 .byte -1
 1699 0562 FF       	 .byte -1
 1700 0563 FF       	 .byte -1
 1701 0564 FF       	 .byte -1
 1702 0565 FF       	 .byte -1
 1703 0566 FF       	 .byte -1
 1704 0567 FF       	 .byte -1
 1705 0568 FF       	 .byte -1
 1706 0569 FF       	 .byte -1
 1707 056a FF       	 .byte -1
 1708 056b FF       	 .byte -1
 1709 056c FF       	 .byte -1
 1710 056d FF       	 .byte -1
 1711 056e FF       	 .byte -1
 1712 056f FF       	 .byte -1
 1713 0570 FF       	 .byte -1
 1714 0571 FF       	 .byte -1
 1715 0572 FF       	 .byte -1
 1716 0573 FF       	 .byte -1
 1717 0574 FF       	 .byte -1
 1718 0575 FF       	 .byte -1
 1719 0576 FF       	 .byte -1
 1720 0577 FF       	 .byte -1
 1721 0578 FF       	 .byte -1
 1722 0579 FF       	 .byte -1
 1723 057a FF       	 .byte -1
 1724 057b FF       	 .byte -1
 1725 057c FF       	 .byte -1
 1726 057d FF       	 .byte -1
 1727 057e FF       	 .byte -1
 1728 057f FF       	 .byte -1
 1729 0580 FF       	 .byte -1
 1730 0581 FF       	 .byte -1
 1731 0582 FF       	 .byte -1
 1732 0583 FF       	 .byte -1
 1733 0584 FF       	 .byte -1
 1734 0585 FF       	 .byte -1
 1735 0586 FF       	 .byte -1
 1736 0587 FF       	 .byte -1
 1737 0588 FF       	 .byte -1
 1738 0589 FF       	 .byte -1
 1739 058a FF       	 .byte -1
 1740 058b FF       	 .byte -1
 1741 058c FF       	 .byte -1
 1742 058d FF       	 .byte -1
 1743 058e FF       	 .byte -1
 1744 058f FF       	 .byte -1
 1745 0590 FF       	 .byte -1
 1746 0591 FF       	 .byte -1
 1747 0592 FF       	 .byte -1
 1748 0593 FF       	 .byte -1
 1749 0594 FF       	 .byte -1
 1750 0595 FF       	 .byte -1
 1751 0596 FF       	 .byte -1
 1752 0597 FF       	 .byte -1
 1753 0598 FF       	 .byte -1
 1754 0599 FF       	 .byte -1
 1755 059a FF       	 .byte -1
 1756 059b FF       	 .byte -1
 1757 059c FF       	 .byte -1
 1758 059d FF       	 .byte -1
 1759 059e FF       	 .byte -1
 1760 059f FF       	 .byte -1
 1761 05a0 FF       	 .byte -1
 1762 05a1 FF       	 .byte -1
 1763 05a2 FF       	 .byte -1
 1764 05a3 FF       	 .byte -1
 1765 05a4 FF       	 .byte -1
 1766 05a5 FF       	 .byte -1
 1767 05a6 FF       	 .byte -1
 1768 05a7 FF       	 .byte -1
 1769 05a8 FF       	 .byte -1
 1770 05a9 FF       	 .byte -1
 1771 05aa FF       	 .byte -1
 1772 05ab FF       	 .byte -1
 1773 05ac FF       	 .byte -1
 1774 05ad FF       	 .byte -1
 1775 05ae FF       	 .byte -1
 1776 05af FF       	 .byte -1
 1777 05b0 FF       	 .byte -1
 1778 05b1 FF       	 .byte -1
 1779 05b2 FF       	 .byte -1
 1780 05b3 FF       	 .byte -1
 1781 05b4 FF       	 .byte -1
 1782 05b5 FF       	 .byte -1
 1783 05b6 FF       	 .byte -1
 1784 05b7 FF       	 .byte -1
 1785 05b8 FF       	 .byte -1
 1786 05b9 FF       	 .byte -1
 1787 05ba FF       	 .byte -1
 1788 05bb FF       	 .byte -1
 1789 05bc FF       	 .byte -1
 1790 05bd FF       	 .byte -1
 1791 05be FF       	 .byte -1
 1792 05bf FF       	 .byte -1
 1793 05c0 FF       	 .byte -1
 1794 05c1 FF       	 .byte -1
 1795 05c2 FF       	 .byte -1
 1796 05c3 FF       	 .byte -1
 1797 05c4 FF       	 .byte -1
 1798 05c5 FF       	 .byte -1
 1799 05c6 FF       	 .byte -1
 1800 05c7 FF       	 .byte -1
 1801 05c8 FF       	 .byte -1
 1802 05c9 FF       	 .byte -1
 1803 05ca FF       	 .byte -1
 1804 05cb FF       	 .byte -1
 1805 05cc FF       	 .byte -1
 1806 05cd FF       	 .byte -1
 1807 05ce FF       	 .byte -1
 1808 05cf FF       	 .byte -1
 1809 05d0 FF       	 .byte -1
 1810 05d1 FF       	 .byte -1
 1811 05d2 FF       	 .byte -1
 1812 05d3 FF       	 .byte -1
 1813 05d4 FF       	 .byte -1
 1814 05d5 FF       	 .byte -1
 1815 05d6 FF       	 .byte -1
 1816 05d7 FF       	 .byte -1
 1817 05d8 FF       	 .byte -1
 1818 05d9 FF       	 .byte -1
 1819 05da FF       	 .byte -1
 1820 05db FF       	 .byte -1
 1821 05dc FF       	 .byte -1
 1822 05dd FF       	 .byte -1
 1823 05de FF       	 .byte -1
 1824 05df FF       	 .byte -1
 1825 05e0 FF       	 .byte -1
 1826 05e1 FF       	 .byte -1
 1827 05e2 FF       	 .byte -1
 1828 05e3 FF       	 .byte -1
 1829 05e4 FF       	 .byte -1
 1830 05e5 FF       	 .byte -1
 1831 05e6 FF       	 .byte -1
 1832 05e7 FF       	 .byte -1
 1833 05e8 FF       	 .byte -1
 1834 05e9 FF       	 .byte -1
 1835 05ea FF       	 .byte -1
 1836 05eb FF       	 .byte -1
 1837 05ec FF       	 .byte -1
 1838 05ed FF       	 .byte -1
 1839 05ee FF       	 .byte -1
 1840 05ef FF       	 .byte -1
 1841 05f0 FF       	 .byte -1
 1842 05f1 FF       	 .byte -1
 1843 05f2 FF       	 .byte -1
 1844 05f3 FF       	 .byte -1
 1845 05f4 FF       	 .byte -1
 1846 05f5 FF       	 .byte -1
 1847 05f6 FF       	 .byte -1
 1848 05f7 FF       	 .byte -1
 1849 05f8 FF       	 .byte -1
 1850 05f9 FF       	 .byte -1
 1851 05fa FF       	 .byte -1
 1852 05fb FF       	 .byte -1
 1853 05fc FF       	 .byte -1
 1854 05fd FF       	 .byte -1
 1855 05fe FF       	 .byte -1
 1856 05ff FF       	 .byte -1
 1857 0600 FF       	 .byte -1
 1858 0601 FF       	 .byte -1
 1859 0602 FF       	 .byte -1
 1860 0603 FF       	 .byte -1
 1861 0604 FF       	 .byte -1
 1862 0605 FF       	 .byte -1
 1863 0606 FF       	 .byte -1
 1864 0607 FF       	 .byte -1
 1865 0608 FF       	 .byte -1
 1866 0609 FF       	 .byte -1
 1867 060a FF       	 .byte -1
 1868 060b FF       	 .byte -1
 1869 060c FF       	 .byte -1
 1870 060d FF       	 .byte -1
 1871 060e FF       	 .byte -1
 1872 060f FF       	 .byte -1
 1873 0610 FF       	 .byte -1
 1874 0611 FF       	 .byte -1
 1875 0612 FF       	 .byte -1
 1876 0613 FF       	 .byte -1
 1877 0614 FF       	 .byte -1
 1878 0615 FF       	 .byte -1
 1879 0616 FF       	 .byte -1
 1880 0617 FF       	 .byte -1
 1881 0618 FF       	 .byte -1
 1882 0619 FF       	 .byte -1
 1883 061a FF       	 .byte -1
 1884 061b FF       	 .byte -1
 1885 061c FF       	 .byte -1
 1886 061d FF       	 .byte -1
 1887 061e FF       	 .byte -1
 1888 061f FF       	 .byte -1
 1889 0620 FF       	 .byte -1
 1890 0621 FF       	 .byte -1
 1891 0622 FF       	 .byte -1
 1892 0623 FF       	 .byte -1
 1893 0624 FF       	 .byte -1
 1894 0625 FF       	 .byte -1
 1895 0626 FF       	 .byte -1
 1896 0627 FF       	 .byte -1
 1897 0628 FF       	 .byte -1
 1898 0629 FF       	 .byte -1
 1899 062a FF       	 .byte -1
 1900 062b FF       	 .byte -1
 1901 062c FF       	 .byte -1
 1902 062d FF       	 .byte -1
 1903 062e FF       	 .byte -1
 1904 062f FF       	 .byte -1
 1905 0630 FF       	 .byte -1
 1906 0631 FF       	 .byte -1
 1907 0632 FF       	 .byte -1
 1908 0633 FF       	 .byte -1
 1909 0634 FF       	 .byte -1
 1910 0635 FF       	 .byte -1
 1911 0636 FF       	 .byte -1
 1912 0637 FF       	 .byte -1
 1913 0638 FF       	 .byte -1
 1914 0639 FF       	 .byte -1
 1915 063a FF       	 .byte -1
 1916 063b FF       	 .byte -1
 1917 063c FF       	 .byte -1
 1918 063d FF       	 .byte -1
 1919 063e FF       	 .byte -1
 1920 063f FF       	 .byte -1
 1921 0640 FF       	 .byte -1
 1922 0641 FF       	 .byte -1
 1923 0642 FF       	 .byte -1
 1924 0643 FF       	 .byte -1
 1925 0644 FF       	 .byte -1
 1926 0645 FF       	 .byte -1
 1927 0646 FF       	 .byte -1
 1928 0647 FF       	 .byte -1
 1929 0648 FF       	 .byte -1
 1930 0649 FF       	 .byte -1
 1931 064a FF       	 .byte -1
 1932 064b FF       	 .byte -1
 1933 064c FF       	 .byte -1
 1934 064d FF       	 .byte -1
 1935 064e FF       	 .byte -1
 1936 064f FF       	 .byte -1
 1937 0650 FF       	 .byte -1
 1938 0651 FF       	 .byte -1
 1939 0652 FF       	 .byte -1
 1940 0653 FF       	 .byte -1
 1941 0654 FF       	 .byte -1
 1942 0655 FF       	 .byte -1
 1943 0656 FF       	 .byte -1
 1944 0657 FF       	 .byte -1
 1945 0658 FF       	 .byte -1
 1946 0659 FF       	 .byte -1
 1947 065a FF       	 .byte -1
 1948 065b FF       	 .byte -1
 1949 065c FF       	 .byte -1
 1950 065d FF       	 .byte -1
 1951 065e FF       	 .byte -1
 1952 065f FF       	 .byte -1
 1953 0660 FF       	 .byte -1
 1954 0661 FF       	 .byte -1
 1955 0662 FF       	 .byte -1
 1956 0663 FF       	 .byte -1
 1957 0664 FF       	 .byte -1
 1958 0665 FF       	 .byte -1
 1959 0666 FF       	 .byte -1
 1960 0667 FF       	 .byte -1
 1961 0668 FF       	 .byte -1
 1962 0669 FF       	 .byte -1
 1963 066a FF       	 .byte -1
 1964 066b FF       	 .byte -1
 1965 066c FF       	 .byte -1
 1966 066d FF       	 .byte -1
 1967 066e FF       	 .byte -1
 1968 066f FF       	 .byte -1
 1969 0670 FF       	 .byte -1
 1970 0671 FF       	 .byte -1
 1971 0672 FF       	 .byte -1
 1972 0673 FF       	 .byte -1
 1973 0674 FF       	 .byte -1
 1974 0675 FF       	 .byte -1
 1975 0676 FF       	 .byte -1
 1976 0677 FF       	 .byte -1
 1977 0678 FF       	 .byte -1
 1978 0679 FF       	 .byte -1
 1979 067a FF       	 .byte -1
 1980 067b FF       	 .byte -1
 1981 067c FF       	 .byte -1
 1982 067d FF       	 .byte -1
 1983 067e FF       	 .byte -1
 1984 067f FF       	 .byte -1
 1985 0680 FF       	 .byte -1
 1986 0681 FF       	 .byte -1
 1987 0682 FF       	 .byte -1
 1988 0683 FF       	 .byte -1
 1989 0684 FF       	 .byte -1
 1990 0685 FF       	 .byte -1
 1991 0686 FF       	 .byte -1
 1992 0687 FF       	 .byte -1
 1993 0688 FF       	 .byte -1
 1994 0689 FF       	 .byte -1
 1995 068a FF       	 .byte -1
 1996 068b FF       	 .byte -1
 1997 068c FF       	 .byte -1
 1998 068d FF       	 .byte -1
 1999 068e FF       	 .byte -1
 2000 068f FF       	 .byte -1
 2001 0690 FF       	 .byte -1
 2002 0691 FF       	 .byte -1
 2003 0692 FF       	 .byte -1
 2004 0693 FF       	 .byte -1
 2005 0694 FF       	 .byte -1
 2006 0695 FF       	 .byte -1
 2007 0696 FF       	 .byte -1
 2008 0697 FF       	 .byte -1
 2009 0698 FF       	 .byte -1
 2010 0699 FF       	 .byte -1
 2011 069a FF       	 .byte -1
 2012 069b FF       	 .byte -1
 2013 069c FF       	 .byte -1
 2014 069d FF       	 .byte -1
 2015 069e FF       	 .byte -1
 2016 069f FF       	 .byte -1
 2017 06a0 FF       	 .byte -1
 2018 06a1 FF       	 .byte -1
 2019 06a2 FF       	 .byte -1
 2020 06a3 FF       	 .byte -1
 2021 06a4 FF       	 .byte -1
 2022 06a5 FF       	 .byte -1
 2023 06a6 FF       	 .byte -1
 2024 06a7 FF       	 .byte -1
 2025 06a8 FF       	 .byte -1
 2026 06a9 FF       	 .byte -1
 2027 06aa FF       	 .byte -1
 2028 06ab FF       	 .byte -1
 2029 06ac FF       	 .byte -1
 2030 06ad FF       	 .byte -1
 2031 06ae FF       	 .byte -1
 2032 06af FF       	 .byte -1
 2033 06b0 FF       	 .byte -1
 2034 06b1 FF       	 .byte -1
 2035 06b2 FF       	 .byte -1
 2036 06b3 FF       	 .byte -1
 2037 06b4 FF       	 .byte -1
 2038 06b5 FF       	 .byte -1
 2039 06b6 FF       	 .byte -1
 2040 06b7 FF       	 .byte -1
 2041 06b8 FF       	 .byte -1
 2042 06b9 FF       	 .byte -1
 2043 06ba FF       	 .byte -1
 2044 06bb FF       	 .byte -1
 2045 06bc FF       	 .byte -1
 2046 06bd FF       	 .byte -1
 2047 06be FF       	 .byte -1
 2048 06bf FF       	 .byte -1
 2049 06c0 FF       	 .byte -1
 2050 06c1 FF       	 .byte -1
 2051 06c2 FF       	 .byte -1
 2052 06c3 FF       	 .byte -1
 2053 06c4 FF       	 .byte -1
 2054 06c5 FF       	 .byte -1
 2055 06c6 FF       	 .byte -1
 2056 06c7 FF       	 .byte -1
 2057 06c8 FF       	 .byte -1
 2058 06c9 FF       	 .byte -1
 2059 06ca FF       	 .byte -1
 2060 06cb FF       	 .byte -1
 2061 06cc FF       	 .byte -1
 2062 06cd FF       	 .byte -1
 2063 06ce FF       	 .byte -1
 2064 06cf FF       	 .byte -1
 2065 06d0 FF       	 .byte -1
 2066 06d1 FF       	 .byte -1
 2067 06d2 FF       	 .byte -1
 2068 06d3 FF       	 .byte -1
 2069 06d4 FF       	 .byte -1
 2070 06d5 FF       	 .byte -1
 2071 06d6 FF       	 .byte -1
 2072 06d7 FF       	 .byte -1
 2073 06d8 FF       	 .byte -1
 2074 06d9 FF       	 .byte -1
 2075 06da FF       	 .byte -1
 2076 06db FF       	 .byte -1
 2077 06dc FF       	 .byte -1
 2078 06dd FF       	 .byte -1
 2079 06de FF       	 .byte -1
 2080 06df FF       	 .byte -1
 2081 06e0 FF       	 .byte -1
 2082 06e1 FF       	 .byte -1
 2083 06e2 FF       	 .byte -1
 2084 06e3 FF       	 .byte -1
 2085 06e4 FF       	 .byte -1
 2086 06e5 FF       	 .byte -1
 2087 06e6 FF       	 .byte -1
 2088 06e7 FF       	 .byte -1
 2089 06e8 FF       	 .byte -1
 2090 06e9 FF       	 .byte -1
 2091 06ea FF       	 .byte -1
 2092 06eb FF       	 .byte -1
 2093 06ec FF       	 .byte -1
 2094 06ed FF       	 .byte -1
 2095 06ee FF       	 .byte -1
 2096 06ef FF       	 .byte -1
 2097 06f0 FF       	 .byte -1
 2098 06f1 FF       	 .byte -1
 2099 06f2 FF       	 .byte -1
 2100 06f3 FF       	 .byte -1
 2101 06f4 FF       	 .byte -1
 2102 06f5 FF       	 .byte -1
 2103 06f6 FF       	 .byte -1
 2104 06f7 FF       	 .byte -1
 2105 06f8 FF       	 .byte -1
 2106 06f9 FF       	 .byte -1
 2107 06fa FF       	 .byte -1
 2108 06fb FF       	 .byte -1
 2109 06fc FF       	 .byte -1
 2110 06fd FF       	 .byte -1
 2111 06fe FF       	 .byte -1
 2112 06ff FF       	 .byte -1
 2113 0700 FF       	 .byte -1
 2114 0701 FF       	 .byte -1
 2115 0702 FF       	 .byte -1
 2116 0703 FF       	 .byte -1
 2117 0704 FF       	 .byte -1
 2118 0705 FF       	 .byte -1
 2119 0706 FF       	 .byte -1
 2120 0707 FF       	 .byte -1
 2121 0708 FF       	 .byte -1
 2122 0709 FF       	 .byte -1
 2123 070a FF       	 .byte -1
 2124 070b FF       	 .byte -1
 2125 070c FF       	 .byte -1
 2126 070d FF       	 .byte -1
 2127 070e FF       	 .byte -1
 2128 070f FF       	 .byte -1
 2129 0710 FF       	 .byte -1
 2130 0711 FF       	 .byte -1
 2131 0712 FF       	 .byte -1
 2132 0713 FF       	 .byte -1
 2133 0714 FF       	 .byte -1
 2134 0715 FF       	 .byte -1
 2135 0716 FF       	 .byte -1
 2136 0717 FF       	 .byte -1
 2137 0718 FF       	 .byte -1
 2138 0719 FF       	 .byte -1
 2139 071a FF       	 .byte -1
 2140 071b FF       	 .byte -1
 2141 071c FF       	 .byte -1
 2142 071d FF       	 .byte -1
 2143 071e FF       	 .byte -1
 2144 071f FF       	 .byte -1
 2145 0720 FF       	 .byte -1
 2146 0721 FF       	 .byte -1
 2147 0722 FF       	 .byte -1
 2148 0723 FF       	 .byte -1
 2149 0724 FF       	 .byte -1
 2150 0725 FF       	 .byte -1
 2151 0726 FF       	 .byte -1
 2152 0727 FF       	 .byte -1
 2153 0728 FF       	 .byte -1
 2154 0729 FF       	 .byte -1
 2155 072a FF       	 .byte -1
 2156 072b FF       	 .byte -1
 2157 072c FF       	 .byte -1
 2158 072d FF       	 .byte -1
 2159 072e FF       	 .byte -1
 2160 072f FF       	 .byte -1
 2161 0730 FF       	 .byte -1
 2162 0731 FF       	 .byte -1
 2163 0732 FF       	 .byte -1
 2164 0733 FF       	 .byte -1
 2165 0734 FF       	 .byte -1
 2166 0735 FF       	 .byte -1
 2167 0736 FF       	 .byte -1
 2168 0737 FF       	 .byte -1
 2169 0738 FF       	 .byte -1
 2170 0739 FF       	 .byte -1
 2171 073a FF       	 .byte -1
 2172 073b FF       	 .byte -1
 2173 073c FF       	 .byte -1
 2174 073d FF       	 .byte -1
 2175 073e FF       	 .byte -1
 2176 073f FF       	 .byte -1
 2177 0740 FF       	 .byte -1
 2178 0741 FF       	 .byte -1
 2179 0742 FF       	 .byte -1
 2180 0743 FF       	 .byte -1
 2181 0744 FF       	 .byte -1
 2182 0745 FF       	 .byte -1
 2183 0746 FF       	 .byte -1
 2184 0747 FF       	 .byte -1
 2185 0748 FF       	 .byte -1
 2186 0749 FF       	 .byte -1
 2187 074a FF       	 .byte -1
 2188 074b FF       	 .byte -1
 2189 074c FF       	 .byte -1
 2190 074d FF       	 .byte -1
 2191 074e FF       	 .byte -1
 2192 074f FF       	 .byte -1
 2193 0750 FF       	 .byte -1
 2194 0751 FF       	 .byte -1
 2195 0752 FF       	 .byte -1
 2196 0753 FF       	 .byte -1
 2197 0754 FF       	 .byte -1
 2198 0755 FF       	 .byte -1
 2199 0756 FF       	 .byte -1
 2200 0757 FF       	 .byte -1
 2201 0758 FF       	 .byte -1
 2202 0759 FF       	 .byte -1
 2203 075a FF       	 .byte -1
 2204 075b FF       	 .byte -1
 2205 075c FF       	 .byte -1
 2206 075d FF       	 .byte -1
 2207 075e FF       	 .byte -1
 2208 075f FF       	 .byte -1
 2209 0760 FF       	 .byte -1
 2210 0761 FF       	 .byte -1
 2211 0762 FF       	 .byte -1
 2212 0763 FF       	 .byte -1
 2213 0764 FF       	 .byte -1
 2214 0765 FF       	 .byte -1
 2215 0766 FF       	 .byte -1
 2216 0767 FF       	 .byte -1
 2217 0768 FF       	 .byte -1
 2218 0769 FF       	 .byte -1
 2219 076a FF       	 .byte -1
 2220 076b FF       	 .byte -1
 2221 076c FF       	 .byte -1
 2222 076d FF       	 .byte -1
 2223 076e FF       	 .byte -1
 2224 076f FF       	 .byte -1
 2225 0770 FF       	 .byte -1
 2226 0771 FF       	 .byte -1
 2227 0772 FF       	 .byte -1
 2228 0773 FF       	 .byte -1
 2229 0774 FF       	 .byte -1
 2230 0775 FF       	 .byte -1
 2231 0776 FF       	 .byte -1
 2232 0777 FF       	 .byte -1
 2233 0778 FF       	 .byte -1
 2234 0779 FF       	 .byte -1
 2235 077a FF       	 .byte -1
 2236 077b FF       	 .byte -1
 2237 077c FF       	 .byte -1
 2238 077d FF       	 .byte -1
 2239 077e FF       	 .byte -1
 2240 077f FF       	 .byte -1
 2241 0780 FF       	 .byte -1
 2242 0781 FF       	 .byte -1
 2243 0782 FF       	 .byte -1
 2244 0783 FF       	 .byte -1
 2245 0784 FF       	 .byte -1
 2246 0785 FF       	 .byte -1
 2247 0786 FF       	 .byte -1
 2248 0787 FF       	 .byte -1
 2249 0788 FF       	 .byte -1
 2250 0789 FF       	 .byte -1
 2251 078a FF       	 .byte -1
 2252 078b FF       	 .byte -1
 2253 078c FF       	 .byte -1
 2254 078d FF       	 .byte -1
 2255 078e FF       	 .byte -1
 2256 078f FF       	 .byte -1
 2257 0790 FF       	 .byte -1
 2258 0791 FF       	 .byte -1
 2259 0792 FF       	 .byte -1
 2260 0793 FF       	 .byte -1
 2261 0794 FF       	 .byte -1
 2262 0795 FF       	 .byte -1
 2263 0796 FF       	 .byte -1
 2264 0797 FF       	 .byte -1
 2265 0798 FF       	 .byte -1
 2266 0799 FF       	 .byte -1
 2267 079a FF       	 .byte -1
 2268 079b FF       	 .byte -1
 2269 079c FF       	 .byte -1
 2270 079d FF       	 .byte -1
 2271 079e FF       	 .byte -1
 2272 079f FF       	 .byte -1
 2273 07a0 FF       	 .byte -1
 2274 07a1 FF       	 .byte -1
 2275 07a2 FF       	 .byte -1
 2276 07a3 FF       	 .byte -1
 2277 07a4 FF       	 .byte -1
 2278 07a5 FF       	 .byte -1
 2279 07a6 FF       	 .byte -1
 2280 07a7 FF       	 .byte -1
 2281 07a8 FF       	 .byte -1
 2282 07a9 FF       	 .byte -1
 2283 07aa FF       	 .byte -1
 2284 07ab FF       	 .byte -1
 2285 07ac FF       	 .byte -1
 2286 07ad FF       	 .byte -1
 2287 07ae FF       	 .byte -1
 2288 07af FF       	 .byte -1
 2289 07b0 FF       	 .byte -1
 2290 07b1 FF       	 .byte -1
 2291 07b2 FF       	 .byte -1
 2292 07b3 FF       	 .byte -1
 2293 07b4 FF       	 .byte -1
 2294 07b5 FF       	 .byte -1
 2295 07b6 FF       	 .byte -1
 2296 07b7 FF       	 .byte -1
 2297 07b8 FF       	 .byte -1
 2298 07b9 FF       	 .byte -1
 2299 07ba FF       	 .byte -1
 2300 07bb FF       	 .byte -1
 2301 07bc FF       	 .byte -1
 2302 07bd FF       	 .byte -1
 2303 07be FF       	 .byte -1
 2304 07bf FF       	 .byte -1
 2305 07c0 FF       	 .byte -1
 2306 07c1 FF       	 .byte -1
 2307 07c2 FF       	 .byte -1
 2308 07c3 FF       	 .byte -1
 2309 07c4 FF       	 .byte -1
 2310 07c5 FF       	 .byte -1
 2311 07c6 FF       	 .byte -1
 2312 07c7 FF       	 .byte -1
 2313 07c8 FF       	 .byte -1
 2314 07c9 FF       	 .byte -1
 2315 07ca FF       	 .byte -1
 2316 07cb FF       	 .byte -1
 2317 07cc FF       	 .byte -1
 2318 07cd FF       	 .byte -1
 2319 07ce FF       	 .byte -1
 2320 07cf FF       	 .byte -1
 2321 07d0 FF       	 .byte -1
 2322 07d1 FF       	 .byte -1
 2323 07d2 FF       	 .byte -1
 2324 07d3 FF       	 .byte -1
 2325 07d4 FF       	 .byte -1
 2326 07d5 FF       	 .byte -1
 2327 07d6 FF       	 .byte -1
 2328 07d7 FF       	 .byte -1
 2329 07d8 FF       	 .byte -1
 2330 07d9 FF       	 .byte -1
 2331 07da FF       	 .byte -1
 2332 07db FF       	 .byte -1
 2333 07dc FF       	 .byte -1
 2334 07dd FF       	 .byte -1
 2335 07de FF       	 .byte -1
 2336 07df FF       	 .byte -1
 2337 07e0 FF       	 .byte -1
 2338 07e1 FF       	 .byte -1
 2339 07e2 FF       	 .byte -1
 2340 07e3 FF       	 .byte -1
 2341 07e4 FF       	 .byte -1
 2342 07e5 FF       	 .byte -1
 2343 07e6 FF       	 .byte -1
 2344 07e7 FF       	 .byte -1
 2345 07e8 FF       	 .byte -1
 2346 07e9 FF       	 .byte -1
 2347 07ea FF       	 .byte -1
 2348 07eb FF       	 .byte -1
 2349 07ec FF       	 .byte -1
 2350 07ed FF       	 .byte -1
 2351 07ee FF       	 .byte -1
 2352 07ef FF       	 .byte -1
 2353 07f0 FF       	 .byte -1
 2354 07f1 FF       	 .byte -1
 2355 07f2 FF       	 .byte -1
 2356 07f3 FF       	 .byte -1
 2357 07f4 FF       	 .byte -1
 2358 07f5 FF       	 .byte -1
 2359 07f6 FF       	 .byte -1
 2360 07f7 FF       	 .byte -1
 2361 07f8 FF       	 .byte -1
 2362 07f9 FF       	 .byte -1
 2363 07fa FF       	 .byte -1
 2364 07fb FF       	 .byte -1
 2365 07fc FF       	 .byte -1
 2366 07fd FF       	 .byte -1
 2367 07fe FF       	 .byte -1
 2368 07ff FF       	 .byte -1
 2369              	 .comm u32CycleTimeStartValue,4,4
 2370              	 .comm u32MinCycleTimeStartValue,4,4
 2371              	 .comm u32SystemTimeReadFailure,4,4
 2372              	 .comm bMinCycleTimeMeasurementStarted,1,1
 2373              	 .comm u32MinCycleTimeValue,4,4
 2374              	 .comm u16EepromStoreTimeoutCounter,2,2
 2375              	 .comm u16EepromStoreTimeoutValue,2,2
 2376              	 .comm aPdOutputData,68,4
 2377              	 .comm aPdInputData,68,4
 2378              	 .global bInitFinished
 2379              	 .section .bss.bInitFinished,"aw",%nobits
 2382              	bInitFinished:
 2383 0000 00       	 .space 1
 2384              	 .section .text.PDO_InputMapping,"ax",%progbits
 2385              	 .align 2
 2386              	 .global PDO_InputMapping
 2387              	 .thumb
 2388              	 .thumb_func
 2390              	PDO_InputMapping:
 2391              	.LFB179:
 2392              	 .file 3 "../SSC/Src/ecatappl.c"
   1:../SSC/Src/ecatappl.c **** /*
   2:../SSC/Src/ecatappl.c **** * This source file is part of the EtherCAT Slave Stack Code licensed by Beckhoff Automation GmbH & 
   3:../SSC/Src/ecatappl.c **** * The corresponding license agreement applies. This hint shall not be removed.
   4:../SSC/Src/ecatappl.c **** */
   5:../SSC/Src/ecatappl.c **** 
   6:../SSC/Src/ecatappl.c **** /**
   7:../SSC/Src/ecatappl.c **** \addtogroup EcatAppl EtherCAT application
   8:../SSC/Src/ecatappl.c **** @{
   9:../SSC/Src/ecatappl.c **** */
  10:../SSC/Src/ecatappl.c **** 
  11:../SSC/Src/ecatappl.c **** 
  12:../SSC/Src/ecatappl.c **** /**
  13:../SSC/Src/ecatappl.c **** \file ecatappl.c
  14:../SSC/Src/ecatappl.c **** \author EthercatSSC@beckhoff.com
  15:../SSC/Src/ecatappl.c **** \brief Implementation
  16:../SSC/Src/ecatappl.c **** This file contains the Process Data interface
  17:../SSC/Src/ecatappl.c **** 
  18:../SSC/Src/ecatappl.c **** \version 5.12
  19:../SSC/Src/ecatappl.c **** 
  20:../SSC/Src/ecatappl.c **** <br>Changes to version V5.11:<br>
  21:../SSC/Src/ecatappl.c **** V5.12 APPL1: add optional application function called from the main loop (after mbx and esm are exe
  22:../SSC/Src/ecatappl.c **** V5.12 BOOT1: add a bootloader sample application (only the ESM and FoE is supported)<br>
  23:../SSC/Src/ecatappl.c **** V5.12 COE4: add timestamp object (0x10F8) and update diagnosis handling<br>
  24:../SSC/Src/ecatappl.c **** V5.12 ECAT1: update SM Parameter measurement (based on the system time), enhancement for input only
  25:../SSC/Src/ecatappl.c **** V5.12 ECAT3: update PD monitoring variables even if the slave is not in OP, disable all interrupts 
  26:../SSC/Src/ecatappl.c **** V5.12 ECAT5: update Sync error counter/flag handling,check enum memory alignment depending on the p
  27:../SSC/Src/ecatappl.c **** V5.12 ECAT8: reset appl function pointer on startup, update timeout calculation during eeprom acces
  28:../SSC/Src/ecatappl.c **** V5.12 EEPROM1: get read size from register 0x502.6<br>
  29:../SSC/Src/ecatappl.c **** V5.12 EEPROM2: clear CRC Error bit only in case of a valid reload, write station alias only in case
  30:../SSC/Src/ecatappl.c **** V5.12 EEPROM3: implement a store EEPROM timeout handler<br>
  31:../SSC/Src/ecatappl.c **** <br>Changes to version V5.10.1:<br>
  32:../SSC/Src/ecatappl.c **** V5.11 COE3: change 0x10F3.2 (Sync Error limit) from UINT32 to UINT16 (according to the ETG.1020)<br
  33:../SSC/Src/ecatappl.c **** V5.11 ECAT1: update EEPROM access reset operation<br>
  34:../SSC/Src/ecatappl.c **** V5.11 ECAT10: change PROTO handling to prevent compiler errors<br>
  35:../SSC/Src/ecatappl.c **** V5.11 ECAT11: create application interface function pointer, add eeprom emulation interface functio
  36:../SSC/Src/ecatappl.c **** V5.11 ECAT2: update EEPROM access retry cycle (add 10ms delay between two retry cycles)<br>
  37:../SSC/Src/ecatappl.c **** V5.11 ECAT3: handle bus cycle calculation for input/output only devices and create warning diag mes
  38:../SSC/Src/ecatappl.c **** V5.11 ECAT4: enhance SM/Sync monitoring for input/output only slaves<br>
  39:../SSC/Src/ecatappl.c **** V5.11 ECAT6: add function to calculate bus cycle time<br>
  40:../SSC/Src/ecatappl.c **** V5.11 ECAT8: call PDO_InputMapping only once if DC is enabled and COE is not supported<br>
  41:../SSC/Src/ecatappl.c **** V5.11 EEPROM1: fix compiler error during pEEPROM pointer initialization<br>
  42:../SSC/Src/ecatappl.c **** V5.11 EEPROM2: write Station alias value to EEPROM data register on EEPROM reload command<br>
  43:../SSC/Src/ecatappl.c **** V5.11 EEPROM3: clear EEPROM error bits<br>
  44:../SSC/Src/ecatappl.c **** V5.11 EEPROM4: prevent the variable in the EEPROM busy loop to be removed by the compiler<br>
  45:../SSC/Src/ecatappl.c **** V5.11 ESM7: "add Sync define for 0x22 (""SYNCTYPE_SM2_SYNCHRON""), support value 0x22 for 0x1C33.1 
  46:../SSC/Src/ecatappl.c **** <br>Changes to version V5.01:<br>
  47:../SSC/Src/ecatappl.c **** V5.10 COE1: Define one entry description for all 0x1C3x objects and change data type of SI11,12,13 
  48:../SSC/Src/ecatappl.c **** V5.10 ECAT1: Correct calculation of blinking and flashing sequence<br>
  49:../SSC/Src/ecatappl.c **** V5.10 ECAT13: Update Synchronisation handling (FreeRun,SM Sync, Sync0, Sync1)<br>
  50:../SSC/Src/ecatappl.c ****               Compare DC UINT configuration (by ESC Config data) vs. DC activation register setting
  51:../SSC/Src/ecatappl.c ****               Update 0x1C3x entries<br>
  52:../SSC/Src/ecatappl.c **** V5.10 ECAT2: Prevent EEPROM data null pointer access (if the pointer is null an command error is se
  53:../SSC/Src/ecatappl.c ****              EEPROM emulation return command error if unknown command was received<br>
  54:../SSC/Src/ecatappl.c **** V5.10 ECAT4: Update alignment marco for 8 to 15 bit alignments (16 and 32 Bit controllers)<br>
  55:../SSC/Src/ecatappl.c ****              Bugfix calculate LED blink frequency<br>
  56:../SSC/Src/ecatappl.c **** V5.10 ECAT7: Add "bInitFinished" to indicate if the initialization is complete<br>
  57:../SSC/Src/ecatappl.c **** V5.10 HW2: Change HW_GetTimer return value to UINT32<br>
  58:../SSC/Src/ecatappl.c **** <br>Changes to version V5.0:<br>
  59:../SSC/Src/ecatappl.c **** V5.01 APPL3: Include library demo application<br>
  60:../SSC/Src/ecatappl.c **** V5.01 ESC1: Change ESC access function (if EEPROM Emulation is active)<br>
  61:../SSC/Src/ecatappl.c **** V5.01 ESC2: Add missed value swapping<br>
  62:../SSC/Src/ecatappl.c **** <br>Changes to version V4.40:<br>
  63:../SSC/Src/ecatappl.c **** V5.0 TEST1: Add test application. See Application Note ET9300 for more details.<br>
  64:../SSC/Src/ecatappl.c **** V5.0 ECAT2: Application specific functions are moved to application files.<br>
  65:../SSC/Src/ecatappl.c **** V5.0 ECAT3: Global dummy variables used for dummy ESC operations.<br>
  66:../SSC/Src/ecatappl.c **** V5.0 ESC1: ESC 32Bit Access added.<br>
  67:../SSC/Src/ecatappl.c **** V5.0 ESC3: Add EEPROM emulation support.<br>
  68:../SSC/Src/ecatappl.c **** V5.0 ESM3: Handling pending ESM transitions.<br>
  69:../SSC/Src/ecatappl.c **** V5.0 ESC5: Enhance EEPROM access handling.<br>
  70:../SSC/Src/ecatappl.c **** V5.0 PDO1: AL Event flags are not rechecked in PDO_OutputMappping(). (Already checked before call f
  71:../SSC/Src/ecatappl.c **** V5.0 SYNC1: Add missed SM event indication (0x1C32/0x1C33 SI11).<br>
  72:../SSC/Src/ecatappl.c **** <br>Changes to version V4.30:<br>
  73:../SSC/Src/ecatappl.c **** V4.40 DIAG1: add diagnosis message support<br>
  74:../SSC/Src/ecatappl.c **** V4.40 PDO1: merge content of HW_InputMapping (spihw.c/mcihw.c) to PDO_InputMapping. merge content o
  75:../SSC/Src/ecatappl.c **** V4.40 PDO2: Generic process data length calculation<br>
  76:../SSC/Src/ecatappl.c **** V4.40 ECAT2: call cyclic CheckIfLocalError() to check the local flags<br>
  77:../SSC/Src/ecatappl.c **** V4.40 HW0: Generic hardware access functions. Add Function (PDI_Isr()), content merged from spihw.c
  78:../SSC/Src/ecatappl.c **** V4.40 WD1: define (ESC_SM_WD_SUPPORTED) to choose ESC SyncManager watchdog or local watchdog<br>
  79:../SSC/Src/ecatappl.c **** V4.40 ESM2: Change state transition behaviour from SafeOP to OP<br>
  80:../SSC/Src/ecatappl.c **** V4.40 TIMER1: Change bus cycle time calculation and trigger of ECAT_CheckTimer() if ECAT_TIMER_INT 
  81:../SSC/Src/ecatappl.c **** V4.40 HW1: Add support for fc1100 hardware<br>
  82:../SSC/Src/ecatappl.c **** <br>Changes to version V4.20:<br>
  83:../SSC/Src/ecatappl.c **** V4.30 EL9800: EL9800_x cyclic application is moved to el9800.c<br>
  84:../SSC/Src/ecatappl.c **** V4.30 OBJ 3:    add object dictionary initialization<br>
  85:../SSC/Src/ecatappl.c **** V4.30 SYNC: add CalcSMCycleTime() (calculation of bus cycle time); change synchronisation control f
  86:../SSC/Src/ecatappl.c **** V4.30 PDO: include PDO specific functions (moved from coeappl.c).<br>
  87:../SSC/Src/ecatappl.c ****                xxx_InputMapping(); xxx_OutputMapping(); xxx_ReadInputs(); xxx_ResetOutputs(); xxx_A
  88:../SSC/Src/ecatappl.c **** V4.30 CiA402: Add CiA402_StateMachine() and CiA402_Application() call<br>
  89:../SSC/Src/ecatappl.c **** V4.20 DC 1: Add DC pending Statemachine handling<br>
  90:../SSC/Src/ecatappl.c **** V4.20 PIC24: Add EL9800_4 (PIC24) required source code<br>
  91:../SSC/Src/ecatappl.c **** V4.20 LED 1: Modified LED Handling<br>
  92:../SSC/Src/ecatappl.c **** V4.11 APPL 1: The checkWatchdog() function should not called in checkTimer() if this function is tr
  93:../SSC/Src/ecatappl.c **** <br>Changes to version V4.08:<br>
  94:../SSC/Src/ecatappl.c **** V4.10 LED 1: The handling of the EtherCAT-Error-LED was added<br>
  95:../SSC/Src/ecatappl.c **** V4.10 AOE 3: The AoE fragment size has to be initialized during the state transition<br>
  96:../SSC/Src/ecatappl.c ****                  from INIT to PREOP<br>
  97:../SSC/Src/ecatappl.c **** <br>Changes to version V4.07:<br>
  98:../SSC/Src/ecatappl.c **** V4.08 LED 1: The handling of the EtherCAT-LED can be (de-)selected by the switch LEDS_SUPPORTED<br>
  99:../SSC/Src/ecatappl.c ****                  because the ET1100 and ET1200 have an output port which could be connected directl
 100:../SSC/Src/ecatappl.c **** <br>Changes to version V4.01:<br>
 101:../SSC/Src/ecatappl.c **** V4.02 ECAT 1: The watchdog timer variables shall be initialized.<br>
 102:../SSC/Src/ecatappl.c **** <br>Changes to version V4.00:<br>
 103:../SSC/Src/ecatappl.c **** V4.01 APPL 1: If the application is running in synchron mode and no SM event<br>
 104:../SSC/Src/ecatappl.c ****               is received, the application should be called from the main loop<br>
 105:../SSC/Src/ecatappl.c **** V4.01 APPL 2: In FreeRun mode the output should only be copied if the slave is in OP<br>
 106:../SSC/Src/ecatappl.c **** <br>Changes to version V3.20:<br>
 107:../SSC/Src/ecatappl.c **** V4.00 APPL 1: The watchdog checking should be done by a microcontroller<br>
 108:../SSC/Src/ecatappl.c ****                  timer because the watchdog trigger of the ESC will be reset too<br>
 109:../SSC/Src/ecatappl.c ****                  if only a part of the sync manager data is written<br>
 110:../SSC/Src/ecatappl.c **** V4.00 APPL 2: The setting of EtherCAT state LEDs were included<br>
 111:../SSC/Src/ecatappl.c **** V4.00 APPL 3: The outputs should be reset to a safe state,<br>
 112:../SSC/Src/ecatappl.c ****                    when the state OP is left<br>
 113:../SSC/Src/ecatappl.c **** V4.00 APPL 4: An example for the EEPROM access through the ESC is shown in<br>
 114:../SSC/Src/ecatappl.c ****                    the function APPL_StartMailboxHandler<br>
 115:../SSC/Src/ecatappl.c **** V4.00 APPL 5: The inputs should be read once when the state transition<br>
 116:../SSC/Src/ecatappl.c ****                    from PREOP to SAFEOP is made<br>
 117:../SSC/Src/ecatappl.c **** V4.00 APPL 6: The main function was split in MainInit and MainLoop
 118:../SSC/Src/ecatappl.c **** */
 119:../SSC/Src/ecatappl.c **** 
 120:../SSC/Src/ecatappl.c **** 
 121:../SSC/Src/ecatappl.c **** /*-----------------------------------------------------------------------------------------
 122:../SSC/Src/ecatappl.c **** ------
 123:../SSC/Src/ecatappl.c **** ------    Includes
 124:../SSC/Src/ecatappl.c **** ------
 125:../SSC/Src/ecatappl.c **** -----------------------------------------------------------------------------------------*/
 126:../SSC/Src/ecatappl.c **** #include "ecatslv.h"
 127:../SSC/Src/ecatappl.c **** 
 128:../SSC/Src/ecatappl.c **** #define    _ECATAPPL_ 1
 129:../SSC/Src/ecatappl.c **** #include "ecatappl.h"
 130:../SSC/Src/ecatappl.c **** #undef _ECATAPPL_
 131:../SSC/Src/ecatappl.c **** /*remove definition of _ECATAPPL_ (#ifdef is used in ecatappl.h)*/
 132:../SSC/Src/ecatappl.c **** 
 133:../SSC/Src/ecatappl.c **** #include "coeappl.h"
 134:../SSC/Src/ecatappl.c **** 
 135:../SSC/Src/ecatappl.c **** 
 136:../SSC/Src/ecatappl.c **** 
 137:../SSC/Src/ecatappl.c **** #define _APPL_INTERFACE_ 1
 138:../SSC/Src/ecatappl.c **** #include "applInterface.h"
 139:../SSC/Src/ecatappl.c **** #undef _APPL_INTERFACE_
 140:../SSC/Src/ecatappl.c **** 
 141:../SSC/Src/ecatappl.c **** #include "XMC_ESC.h"
 142:../SSC/Src/ecatappl.c **** 
 143:../SSC/Src/ecatappl.c **** #include "eeprom.h"
 144:../SSC/Src/ecatappl.c **** 
 145:../SSC/Src/ecatappl.c **** #undef SET_EEPROM_PTR
 146:../SSC/Src/ecatappl.c **** 
 147:../SSC/Src/ecatappl.c **** #define SET_EEPROM_PTR pEEPROM = aEepromData;
 148:../SSC/Src/ecatappl.c **** 
 149:../SSC/Src/ecatappl.c **** 
 150:../SSC/Src/ecatappl.c **** /*--------------------------------------------------------------------------------------
 151:../SSC/Src/ecatappl.c **** ------
 152:../SSC/Src/ecatappl.c **** ------    local Types and Defines
 153:../SSC/Src/ecatappl.c **** ------
 154:../SSC/Src/ecatappl.c **** --------------------------------------------------------------------------------------*/
 155:../SSC/Src/ecatappl.c **** 
 156:../SSC/Src/ecatappl.c **** 
 157:../SSC/Src/ecatappl.c **** #ifndef ECAT_TIMER_INC_P_MS
 158:../SSC/Src/ecatappl.c **** /**
 159:../SSC/Src/ecatappl.c ****  * \todo Define the timer ticks per ms
 160:../SSC/Src/ecatappl.c ****  */
 161:../SSC/Src/ecatappl.c **** #warning "Define the timer ticks per ms"
 162:../SSC/Src/ecatappl.c **** #endif /* #ifndef ECAT_TIMER_INC_P_MS */
 163:../SSC/Src/ecatappl.c **** 
 164:../SSC/Src/ecatappl.c **** 
 165:../SSC/Src/ecatappl.c **** 
 166:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT1*/
 167:../SSC/Src/ecatappl.c **** #define    MEASUREMENT_ACTIVE (((sSyncManOutPar.u16GetCycleTime & 0x1) == 0x1) || ((sSyncManInPar.u
 168:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT1*/
 169:../SSC/Src/ecatappl.c **** 
 170:../SSC/Src/ecatappl.c **** /*-----------------------------------------------------------------------------------------
 171:../SSC/Src/ecatappl.c **** ------
 172:../SSC/Src/ecatappl.c **** ------    local variables and constants
 173:../SSC/Src/ecatappl.c **** ------
 174:../SSC/Src/ecatappl.c **** -----------------------------------------------------------------------------------------*/
 175:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT1*/
 176:../SSC/Src/ecatappl.c **** /*variables required to calculate values for SM Synchronisation objects (0x1C3x)*/
 177:../SSC/Src/ecatappl.c **** 
 178:../SSC/Src/ecatappl.c **** UINT32 u32CycleTimeStartValue; /** <\brief contains the timer start value to measure the applicatio
 179:../SSC/Src/ecatappl.c **** 
 180:../SSC/Src/ecatappl.c **** UINT32 u32MinCycleTimeStartValue; /** <\brief timeout counter in ms to measure the process timings 
 181:../SSC/Src/ecatappl.c **** 
 182:../SSC/Src/ecatappl.c **** UINT32 u32SystemTimeReadFailure; /** <\brief System time measurement failure (the value is calculat
 183:../SSC/Src/ecatappl.c **** 
 184:../SSC/Src/ecatappl.c **** BOOL bMinCycleTimeMeasurementStarted; /** <\brief Indicates if the min cycle measurement is started
 185:../SSC/Src/ecatappl.c **** 
 186:../SSC/Src/ecatappl.c **** UINT32 u32MinCycleTimeValue; /** <\brief tmp value of the min cycle time during measurement*/
 187:../SSC/Src/ecatappl.c **** 
 188:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT1*/
 189:../SSC/Src/ecatappl.c **** 
 190:../SSC/Src/ecatappl.c **** 
 191:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) EEPROM3*/
 192:../SSC/Src/ecatappl.c **** UINT16 u16EepromStoreTimeoutCounter; /** <\brief contains the current timer value to store the EEPR
 193:../SSC/Src/ecatappl.c **** 
 194:../SSC/Src/ecatappl.c **** UINT16 u16EepromStoreTimeoutValue; /** <\brief timeout in ms to store the EEPROM data*/
 195:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) EEPROM3*/
 196:../SSC/Src/ecatappl.c **** 
 197:../SSC/Src/ecatappl.c **** 
 198:../SSC/Src/ecatappl.c **** UINT16             aPdOutputData[(MAX_PD_OUTPUT_SIZE>>1)];
 199:../SSC/Src/ecatappl.c **** UINT16           aPdInputData[(MAX_PD_INPUT_SIZE>>1)];
 200:../SSC/Src/ecatappl.c **** 
 201:../SSC/Src/ecatappl.c **** /*variables are declared in ecatslv.c*/
 202:../SSC/Src/ecatappl.c ****     extern VARVOLATILE UINT8 u8dummy;
 203:../SSC/Src/ecatappl.c **** 
 204:../SSC/Src/ecatappl.c **** BOOL bInitFinished = FALSE; /** < \brief indicates if the initialization is finished*/
 205:../SSC/Src/ecatappl.c **** 
 206:../SSC/Src/ecatappl.c **** /*-----------------------------------------------------------------------------------------
 207:../SSC/Src/ecatappl.c **** ------
 208:../SSC/Src/ecatappl.c **** ------    local functions
 209:../SSC/Src/ecatappl.c **** ------
 210:../SSC/Src/ecatappl.c **** -----------------------------------------------------------------------------------------*/
 211:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT1*/
 212:../SSC/Src/ecatappl.c **** UINT32 GetSystemTimeDelay(UINT32 u32StartTime);
 213:../SSC/Src/ecatappl.c **** void HandleCycleTimeMeasurement(void);
 214:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT1*/
 215:../SSC/Src/ecatappl.c **** 
 216:../SSC/Src/ecatappl.c **** /*-----------------------------------------------------------------------------------------
 217:../SSC/Src/ecatappl.c **** ------
 218:../SSC/Src/ecatappl.c **** ------    Functions
 219:../SSC/Src/ecatappl.c **** ------
 220:../SSC/Src/ecatappl.c **** -----------------------------------------------------------------------------------------*/
 221:../SSC/Src/ecatappl.c **** /////////////////////////////////////////////////////////////////////////////////////////
 222:../SSC/Src/ecatappl.c **** /**
 223:../SSC/Src/ecatappl.c **** \brief      This function will copies the inputs from the local memory to the ESC memory
 224:../SSC/Src/ecatappl.c **** *////////////////////////////////////////////////////////////////////////////////////////
 225:../SSC/Src/ecatappl.c **** void PDO_InputMapping(void)
 226:../SSC/Src/ecatappl.c **** {
 2393              	 .loc 3 226 0
 2394              	 .cfi_startproc
 2395              	 
 2396              	 
 2397 0000 80B5     	 push {r7,lr}
 2398              	.LCFI28:
 2399              	 .cfi_def_cfa_offset 8
 2400              	 .cfi_offset 7,-8
 2401              	 .cfi_offset 14,-4
 2402 0002 82B0     	 sub sp,sp,#8
 2403              	.LCFI29:
 2404              	 .cfi_def_cfa_offset 16
 2405 0004 00AF     	 add r7,sp,#0
 2406              	.LCFI30:
 2407              	 .cfi_def_cfa_register 7
 227:../SSC/Src/ecatappl.c **** 
 228:../SSC/Src/ecatappl.c **** #if ((MIN_PD_CYCLE_TIME == 0) || (PD_INPUT_CALC_AND_COPY_TIME == 0))
 229:../SSC/Src/ecatappl.c ****     /*ECATCHANGE_START(V5.12) ECAT1*/
 230:../SSC/Src/ecatappl.c ****     UINT32 u32TimeValue = 0;
 2408              	 .loc 3 230 0
 2409 0006 0023     	 movs r3,#0
 2410 0008 7B60     	 str r3,[r7,#4]
 231:../SSC/Src/ecatappl.c ****     UINT16 ALEvent = HW_GetALEventRegister_Isr();
 2411              	 .loc 3 231 0
 2412 000a FFF7FEFF 	 bl HW_GetALEventRegister_Isr
 2413 000e 0346     	 mov r3,r0
 2414 0010 7B80     	 strh r3,[r7,#2]
 232:../SSC/Src/ecatappl.c ****     ALEvent = SWAPWORD(ALEvent);
 233:../SSC/Src/ecatappl.c **** 
 234:../SSC/Src/ecatappl.c **** 
 235:../SSC/Src/ecatappl.c ****     if (MEASUREMENT_ACTIVE)
 2415              	 .loc 3 235 0
 2416 0012 1B4B     	 ldr r3,.L18
 2417 0014 9B8B     	 ldrh r3,[r3,#28]
 2418 0016 03F00103 	 and r3,r3,#1
 2419 001a 002B     	 cmp r3,#0
 2420 001c 05D1     	 bne .L14
 2421              	 .loc 3 235 0 is_stmt 0 discriminator 1
 2422 001e 194B     	 ldr r3,.L18+4
 2423 0020 9B8B     	 ldrh r3,[r3,#28]
 2424 0022 03F00103 	 and r3,r3,#1
 2425 0026 002B     	 cmp r3,#0
 2426 0028 03D0     	 beq .L15
 2427              	.L14:
 236:../SSC/Src/ecatappl.c ****     {
 237:../SSC/Src/ecatappl.c ****         u32TimeValue = GetSystemTimeDelay(0);
 2428              	 .loc 3 237 0 is_stmt 1
 2429 002a 0020     	 movs r0,#0
 2430 002c FFF7FEFF 	 bl GetSystemTimeDelay
 2431 0030 7860     	 str r0,[r7,#4]
 2432              	.L15:
 238:../SSC/Src/ecatappl.c ****     }
 239:../SSC/Src/ecatappl.c ****     /*ECATCHANGE_END(V5.12) ECAT1*/
 240:../SSC/Src/ecatappl.c **** #endif /* ((MIN_PD_CYCLE_TIME == 0) || (PD_INPUT_CALC_AND_COPY_TIME == 0)) */
 241:../SSC/Src/ecatappl.c **** 
 242:../SSC/Src/ecatappl.c **** 
 243:../SSC/Src/ecatappl.c **** 
 244:../SSC/Src/ecatappl.c **** 
 245:../SSC/Src/ecatappl.c **** 
 246:../SSC/Src/ecatappl.c **** 
 247:../SSC/Src/ecatappl.c ****   
 248:../SSC/Src/ecatappl.c ****     APPL_InputMapping((UINT32*)aPdInputData);
 2433              	 .loc 3 248 0
 2434 0032 1548     	 ldr r0,.L18+8
 2435 0034 FFF7FEFF 	 bl APPL_InputMapping
 249:../SSC/Src/ecatappl.c ****     HW_EscWriteIsr(((MEM_ADDR *) aPdInputData), nEscAddrInputData, nPdInputSize );
 2436              	 .loc 3 249 0
 2437 0038 144B     	 ldr r3,.L18+12
 2438 003a 1A88     	 ldrh r2,[r3]
 2439 003c 144B     	 ldr r3,.L18+16
 2440 003e 1B88     	 ldrh r3,[r3]
 2441 0040 1148     	 ldr r0,.L18+8
 2442 0042 1146     	 mov r1,r2
 2443 0044 1A46     	 mov r2,r3
 2444 0046 FFF7FEFF 	 bl HW_EscWriteIsr
 250:../SSC/Src/ecatappl.c **** 
 251:../SSC/Src/ecatappl.c ****     
 252:../SSC/Src/ecatappl.c **** 
 253:../SSC/Src/ecatappl.c **** #if ((MIN_PD_CYCLE_TIME == 0) || (PD_INPUT_CALC_AND_COPY_TIME == 0))
 254:../SSC/Src/ecatappl.c ****     /*ECATCHANGE_START(V5.12) ECAT1*/
 255:../SSC/Src/ecatappl.c **** 
 256:../SSC/Src/ecatappl.c ****     if (MEASUREMENT_ACTIVE)
 2445              	 .loc 3 256 0
 2446 004a 0D4B     	 ldr r3,.L18
 2447 004c 9B8B     	 ldrh r3,[r3,#28]
 2448 004e 03F00103 	 and r3,r3,#1
 2449 0052 002B     	 cmp r3,#0
 2450 0054 05D1     	 bne .L16
 2451              	 .loc 3 256 0 is_stmt 0 discriminator 1
 2452 0056 0B4B     	 ldr r3,.L18+4
 2453 0058 9B8B     	 ldrh r3,[r3,#28]
 2454 005a 03F00103 	 and r3,r3,#1
 2455 005e 002B     	 cmp r3,#0
 2456 0060 0BD0     	 beq .L13
 2457              	.L16:
 257:../SSC/Src/ecatappl.c ****     {
 258:../SSC/Src/ecatappl.c ****         u32TimeValue = GetSystemTimeDelay(u32TimeValue);
 2458              	 .loc 3 258 0 is_stmt 1
 2459 0062 7868     	 ldr r0,[r7,#4]
 2460 0064 FFF7FEFF 	 bl GetSystemTimeDelay
 2461 0068 7860     	 str r0,[r7,#4]
 259:../SSC/Src/ecatappl.c **** 
 260:../SSC/Src/ecatappl.c **** #if (PD_INPUT_CALC_AND_COPY_TIME == 0)
 261:../SSC/Src/ecatappl.c ****         if (sSyncManInPar.u32CalcAndCopyTime < u32TimeValue)
 2462              	 .loc 3 261 0
 2463 006a 064B     	 ldr r3,.L18+4
 2464 006c 5A69     	 ldr r2,[r3,#20]
 2465 006e 7B68     	 ldr r3,[r7,#4]
 2466 0070 9A42     	 cmp r2,r3
 2467 0072 02D2     	 bcs .L13
 262:../SSC/Src/ecatappl.c ****         {
 263:../SSC/Src/ecatappl.c ****             sSyncManInPar.u32CalcAndCopyTime = u32TimeValue;
 2468              	 .loc 3 263 0
 2469 0074 034A     	 ldr r2,.L18+4
 2470 0076 7B68     	 ldr r3,[r7,#4]
 2471 0078 5361     	 str r3,[r2,#20]
 2472              	.L13:
 264:../SSC/Src/ecatappl.c ****         }
 265:../SSC/Src/ecatappl.c **** #endif
 266:../SSC/Src/ecatappl.c **** 
 267:../SSC/Src/ecatappl.c **** #if (MIN_PD_CYCLE_TIME == 0)
 268:../SSC/Src/ecatappl.c ****         /* handle the min cycle time measurement only if a new cycle was started (prevent measureme
 269:../SSC/Src/ecatappl.c ****         if (bMinCycleTimeMeasurementStarted == TRUE)
 270:../SSC/Src/ecatappl.c ****         {
 271:../SSC/Src/ecatappl.c **** 
 272:../SSC/Src/ecatappl.c ****             /* add input mapping time to the min cycle time*/
 273:../SSC/Src/ecatappl.c ****             u32MinCycleTimeValue = u32MinCycleTimeValue + u32TimeValue;
 274:../SSC/Src/ecatappl.c **** 
 275:../SSC/Src/ecatappl.c **** 
 276:../SSC/Src/ecatappl.c ****             if (sSyncManOutPar.u32MinCycleTime < u32MinCycleTimeValue)
 277:../SSC/Src/ecatappl.c ****             {
 278:../SSC/Src/ecatappl.c ****                     sSyncManOutPar.u32MinCycleTime = u32MinCycleTimeValue;
 279:../SSC/Src/ecatappl.c ****             }
 280:../SSC/Src/ecatappl.c **** 
 281:../SSC/Src/ecatappl.c ****             if (sSyncManInPar.u32MinCycleTime < u32MinCycleTimeValue)
 282:../SSC/Src/ecatappl.c ****             {
 283:../SSC/Src/ecatappl.c ****                     sSyncManInPar.u32MinCycleTime = u32MinCycleTimeValue;
 284:../SSC/Src/ecatappl.c ****             }
 285:../SSC/Src/ecatappl.c **** 
 286:../SSC/Src/ecatappl.c ****             bMinCycleTimeMeasurementStarted = FALSE;
 287:../SSC/Src/ecatappl.c ****         }
 288:../SSC/Src/ecatappl.c **** #endif /* (MIN_PD_CYCLE_TIME == 0) */
 289:../SSC/Src/ecatappl.c ****     }
 290:../SSC/Src/ecatappl.c **** 
 291:../SSC/Src/ecatappl.c ****     /*ECATCHANGE_END(V5.12) ECAT1*/
 292:../SSC/Src/ecatappl.c **** #endif /* ((MIN_PD_CYCLE_TIME == 0) || (PD_INPUT_CALC_AND_COPY_TIME == 0)) */
 293:../SSC/Src/ecatappl.c **** 
 294:../SSC/Src/ecatappl.c **** }
 2473              	 .loc 3 294 0
 2474 007a 0837     	 adds r7,r7,#8
 2475              	.LCFI31:
 2476              	 .cfi_def_cfa_offset 8
 2477 007c BD46     	 mov sp,r7
 2478              	.LCFI32:
 2479              	 .cfi_def_cfa_register 13
 2480              	 
 2481 007e 80BD     	 pop {r7,pc}
 2482              	.L19:
 2483              	 .align 2
 2484              	.L18:
 2485 0080 00000000 	 .word sSyncManOutPar
 2486 0084 00000000 	 .word sSyncManInPar
 2487 0088 00000000 	 .word aPdInputData
 2488 008c 00000000 	 .word nEscAddrInputData
 2489 0090 00000000 	 .word nPdInputSize
 2490              	 .cfi_endproc
 2491              	.LFE179:
 2493              	 .section .text.PDO_OutputMapping,"ax",%progbits
 2494              	 .align 2
 2495              	 .global PDO_OutputMapping
 2496              	 .thumb
 2497              	 .thumb_func
 2499              	PDO_OutputMapping:
 2500              	.LFB180:
 295:../SSC/Src/ecatappl.c **** /////////////////////////////////////////////////////////////////////////////////////////
 296:../SSC/Src/ecatappl.c **** /**
 297:../SSC/Src/ecatappl.c **** \brief    This function will copies the outputs from the ESC memory to the local memory.
 298:../SSC/Src/ecatappl.c ****         This function is only called in case of an SM2 (output process data) event.
 299:../SSC/Src/ecatappl.c **** *////////////////////////////////////////////////////////////////////////////////////////
 300:../SSC/Src/ecatappl.c **** void PDO_OutputMapping(void)
 301:../SSC/Src/ecatappl.c **** {
 2501              	 .loc 3 301 0
 2502              	 .cfi_startproc
 2503              	 
 2504              	 
 2505 0000 80B5     	 push {r7,lr}
 2506              	.LCFI33:
 2507              	 .cfi_def_cfa_offset 8
 2508              	 .cfi_offset 7,-8
 2509              	 .cfi_offset 14,-4
 2510 0002 82B0     	 sub sp,sp,#8
 2511              	.LCFI34:
 2512              	 .cfi_def_cfa_offset 16
 2513 0004 00AF     	 add r7,sp,#0
 2514              	.LCFI35:
 2515              	 .cfi_def_cfa_register 7
 302:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT1*/
 303:../SSC/Src/ecatappl.c ****    UINT32 u32TimeValue = 0;
 2516              	 .loc 3 303 0
 2517 0006 0023     	 movs r3,#0
 2518 0008 7B60     	 str r3,[r7,#4]
 304:../SSC/Src/ecatappl.c ****    if (MEASUREMENT_ACTIVE)
 2519              	 .loc 3 304 0
 2520 000a 214B     	 ldr r3,.L25
 2521 000c 9B8B     	 ldrh r3,[r3,#28]
 2522 000e 03F00103 	 and r3,r3,#1
 2523 0012 002B     	 cmp r3,#0
 2524 0014 05D1     	 bne .L21
 2525              	 .loc 3 304 0 is_stmt 0 discriminator 1
 2526 0016 1F4B     	 ldr r3,.L25+4
 2527 0018 9B8B     	 ldrh r3,[r3,#28]
 2528 001a 03F00103 	 and r3,r3,#1
 2529 001e 002B     	 cmp r3,#0
 2530 0020 0ED0     	 beq .L22
 2531              	.L21:
 305:../SSC/Src/ecatappl.c ****    {
 306:../SSC/Src/ecatappl.c **** #if ((MIN_PD_CYCLE_TIME == 0) || (PD_OUTPUT_CALC_AND_COPY_TIME == 0))
 307:../SSC/Src/ecatappl.c ****       u32TimeValue = GetSystemTimeDelay(0);
 2532              	 .loc 3 307 0 is_stmt 1
 2533 0022 0020     	 movs r0,#0
 2534 0024 FFF7FEFF 	 bl GetSystemTimeDelay
 2535 0028 7860     	 str r0,[r7,#4]
 308:../SSC/Src/ecatappl.c ****       u32MinCycleTimeStartValue = u32TimeValue;
 2536              	 .loc 3 308 0
 2537 002a 1B4A     	 ldr r2,.L25+8
 2538 002c 7B68     	 ldr r3,[r7,#4]
 2539 002e 1360     	 str r3,[r2]
 309:../SSC/Src/ecatappl.c **** 
 310:../SSC/Src/ecatappl.c ****       bMinCycleTimeMeasurementStarted = TRUE;
 2540              	 .loc 3 310 0
 2541 0030 1A4B     	 ldr r3,.L25+12
 2542 0032 0122     	 movs r2,#1
 2543 0034 1A70     	 strb r2,[r3]
 311:../SSC/Src/ecatappl.c ****       u32MinCycleTimeValue = 0;
 2544              	 .loc 3 311 0
 2545 0036 1A4B     	 ldr r3,.L25+16
 2546 0038 0022     	 movs r2,#0
 2547 003a 1A60     	 str r2,[r3]
 312:../SSC/Src/ecatappl.c **** 
 313:../SSC/Src/ecatappl.c **** #endif /* ((MIN_PD_CYCLE_TIME == 0) || (PD_OUTPUT_CALC_AND_COPY_TIME == 0)) */
 314:../SSC/Src/ecatappl.c **** 
 315:../SSC/Src/ecatappl.c ****       HandleCycleTimeMeasurement();
 2548              	 .loc 3 315 0
 2549 003c FFF7FEFF 	 bl HandleCycleTimeMeasurement
 2550              	.L22:
 316:../SSC/Src/ecatappl.c **** 
 317:../SSC/Src/ecatappl.c ****    }
 318:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT1*/
 319:../SSC/Src/ecatappl.c **** 
 320:../SSC/Src/ecatappl.c ****     HW_EscReadIsr(((MEM_ADDR *)aPdOutputData), nEscAddrOutputData, nPdOutputSize );
 2551              	 .loc 3 320 0
 2552 0040 184B     	 ldr r3,.L25+20
 2553 0042 1A88     	 ldrh r2,[r3]
 2554 0044 184B     	 ldr r3,.L25+24
 2555 0046 1B88     	 ldrh r3,[r3]
 2556 0048 1848     	 ldr r0,.L25+28
 2557 004a 1146     	 mov r1,r2
 2558 004c 1A46     	 mov r2,r3
 2559 004e FFF7FEFF 	 bl HW_EscReadIsr
 321:../SSC/Src/ecatappl.c ****     APPL_OutputMapping((UINT32*) aPdOutputData);
 2560              	 .loc 3 321 0
 2561 0052 1648     	 ldr r0,.L25+28
 2562 0054 FFF7FEFF 	 bl APPL_OutputMapping
 322:../SSC/Src/ecatappl.c **** 
 323:../SSC/Src/ecatappl.c **** 
 324:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT1*/
 325:../SSC/Src/ecatappl.c **** #if ((MIN_PD_CYCLE_TIME == 0) || (PD_OUTPUT_CALC_AND_COPY_TIME == 0))
 326:../SSC/Src/ecatappl.c ****     if (MEASUREMENT_ACTIVE)
 2563              	 .loc 3 326 0
 2564 0058 0D4B     	 ldr r3,.L25
 2565 005a 9B8B     	 ldrh r3,[r3,#28]
 2566 005c 03F00103 	 and r3,r3,#1
 2567 0060 002B     	 cmp r3,#0
 2568 0062 05D1     	 bne .L23
 2569              	 .loc 3 326 0 is_stmt 0 discriminator 1
 2570 0064 0B4B     	 ldr r3,.L25+4
 2571 0066 9B8B     	 ldrh r3,[r3,#28]
 2572 0068 03F00103 	 and r3,r3,#1
 2573 006c 002B     	 cmp r3,#0
 2574 006e 0BD0     	 beq .L20
 2575              	.L23:
 327:../SSC/Src/ecatappl.c ****     {
 328:../SSC/Src/ecatappl.c ****        u32TimeValue = GetSystemTimeDelay(u32TimeValue);
 2576              	 .loc 3 328 0 is_stmt 1
 2577 0070 7868     	 ldr r0,[r7,#4]
 2578 0072 FFF7FEFF 	 bl GetSystemTimeDelay
 2579 0076 7860     	 str r0,[r7,#4]
 329:../SSC/Src/ecatappl.c **** 
 330:../SSC/Src/ecatappl.c **** #if (PD_OUTPUT_CALC_AND_COPY_TIME == 0)
 331:../SSC/Src/ecatappl.c ****        if (sSyncManOutPar.u32CalcAndCopyTime < u32TimeValue)
 2580              	 .loc 3 331 0
 2581 0078 054B     	 ldr r3,.L25
 2582 007a 5A69     	 ldr r2,[r3,#20]
 2583 007c 7B68     	 ldr r3,[r7,#4]
 2584 007e 9A42     	 cmp r2,r3
 2585 0080 02D2     	 bcs .L20
 332:../SSC/Src/ecatappl.c ****        {
 333:../SSC/Src/ecatappl.c ****           sSyncManOutPar.u32CalcAndCopyTime = u32TimeValue;
 2586              	 .loc 3 333 0
 2587 0082 034A     	 ldr r2,.L25
 2588 0084 7B68     	 ldr r3,[r7,#4]
 2589 0086 5361     	 str r3,[r2,#20]
 2590              	.L20:
 334:../SSC/Src/ecatappl.c ****        }
 335:../SSC/Src/ecatappl.c **** #endif
 336:../SSC/Src/ecatappl.c **** 
 337:../SSC/Src/ecatappl.c **** #if (MIN_PD_CYCLE_TIME == 0)
 338:../SSC/Src/ecatappl.c ****        /* add the first part of the min cycle time */
 339:../SSC/Src/ecatappl.c ****        u32MinCycleTimeValue = u32TimeValue;
 340:../SSC/Src/ecatappl.c **** #endif
 341:../SSC/Src/ecatappl.c ****     }
 342:../SSC/Src/ecatappl.c **** #endif /* #if ((MIN_PD_CYCLE_TIME == 0) || (PD_OUTPUT_CALC_AND_COPY_TIME == 0)) */
 343:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT1*/
 344:../SSC/Src/ecatappl.c **** }
 2591              	 .loc 3 344 0
 2592 0088 0837     	 adds r7,r7,#8
 2593              	.LCFI36:
 2594              	 .cfi_def_cfa_offset 8
 2595 008a BD46     	 mov sp,r7
 2596              	.LCFI37:
 2597              	 .cfi_def_cfa_register 13
 2598              	 
 2599 008c 80BD     	 pop {r7,pc}
 2600              	.L26:
 2601 008e 00BF     	 .align 2
 2602              	.L25:
 2603 0090 00000000 	 .word sSyncManOutPar
 2604 0094 00000000 	 .word sSyncManInPar
 2605 0098 00000000 	 .word u32MinCycleTimeStartValue
 2606 009c 00000000 	 .word bMinCycleTimeMeasurementStarted
 2607 00a0 00000000 	 .word u32MinCycleTimeValue
 2608 00a4 00000000 	 .word nEscAddrOutputData
 2609 00a8 00000000 	 .word nPdOutputSize
 2610 00ac 00000000 	 .word aPdOutputData
 2611              	 .cfi_endproc
 2612              	.LFE180:
 2614              	 .section .text.ECAT_CheckTimer,"ax",%progbits
 2615              	 .align 2
 2616              	 .global ECAT_CheckTimer
 2617              	 .thumb
 2618              	 .thumb_func
 2620              	ECAT_CheckTimer:
 2621              	.LFB181:
 345:../SSC/Src/ecatappl.c **** 
 346:../SSC/Src/ecatappl.c **** /////////////////////////////////////////////////////////////////////////////////////////
 347:../SSC/Src/ecatappl.c **** /**
 348:../SSC/Src/ecatappl.c ****  \brief    This function shall be called every 1ms.
 349:../SSC/Src/ecatappl.c ****  \brief If the switch ECAT_TIMER_INT is 0, the watchdog control is implemented without using
 350:../SSC/Src/ecatappl.c ****  \brief interrupts. In this case a local timer register is checked every ECAT_Main cycle
 351:../SSC/Src/ecatappl.c ****  \brief and the function is triggered if 1 ms is elapsed
 352:../SSC/Src/ecatappl.c ****  *////////////////////////////////////////////////////////////////////////////////////////
 353:../SSC/Src/ecatappl.c **** 
 354:../SSC/Src/ecatappl.c **** void ECAT_CheckTimer(void)
 355:../SSC/Src/ecatappl.c **** {
 2622              	 .loc 3 355 0
 2623              	 .cfi_startproc
 2624              	 
 2625              	 
 2626 0000 80B5     	 push {r7,lr}
 2627              	.LCFI38:
 2628              	 .cfi_def_cfa_offset 8
 2629              	 .cfi_offset 7,-8
 2630              	 .cfi_offset 14,-4
 2631 0002 00AF     	 add r7,sp,#0
 2632              	.LCFI39:
 2633              	 .cfi_def_cfa_register 7
 356:../SSC/Src/ecatappl.c **** 
 357:../SSC/Src/ecatappl.c ****     /*decrement the state transition timeout counter*/
 358:../SSC/Src/ecatappl.c ****     if(bEcatWaitForAlControlRes &&  (EsmTimeoutCounter > 0))
 2634              	 .loc 3 358 0
 2635 0004 324B     	 ldr r3,.L33
 2636 0006 1B78     	 ldrb r3,[r3]
 2637 0008 002B     	 cmp r3,#0
 2638 000a 0DD0     	 beq .L28
 2639              	 .loc 3 358 0 is_stmt 0 discriminator 1
 2640 000c 314B     	 ldr r3,.L33+4
 2641 000e 1B88     	 ldrh r3,[r3]
 2642 0010 1BB2     	 sxth r3,r3
 2643 0012 002B     	 cmp r3,#0
 2644 0014 08DD     	 ble .L28
 359:../SSC/Src/ecatappl.c ****     {
 360:../SSC/Src/ecatappl.c ****         EsmTimeoutCounter--;
 2645              	 .loc 3 360 0 is_stmt 1
 2646 0016 2F4B     	 ldr r3,.L33+4
 2647 0018 1B88     	 ldrh r3,[r3]
 2648 001a 9BB2     	 uxth r3,r3
 2649 001c 9BB2     	 uxth r3,r3
 2650 001e 013B     	 subs r3,r3,#1
 2651 0020 9BB2     	 uxth r3,r3
 2652 0022 9AB2     	 uxth r2,r3
 2653 0024 2B4B     	 ldr r3,.L33+4
 2654 0026 1A80     	 strh r2,[r3]
 2655              	.L28:
 361:../SSC/Src/ecatappl.c ****     }
 362:../SSC/Src/ecatappl.c **** 
 363:../SSC/Src/ecatappl.c **** 
 364:../SSC/Src/ecatappl.c **** 
 365:../SSC/Src/ecatappl.c ****     DC_CheckWatchdog();
 2656              	 .loc 3 365 0
 2657 0028 FFF7FEFF 	 bl DC_CheckWatchdog
 366:../SSC/Src/ecatappl.c **** 
 367:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) EEPROM3*/
 368:../SSC/Src/ecatappl.c **** 
 369:../SSC/Src/ecatappl.c ****     if (u16EepromStoreTimeoutValue > 0)
 2658              	 .loc 3 369 0
 2659 002c 2A4B     	 ldr r3,.L33+8
 2660 002e 1B88     	 ldrh r3,[r3]
 2661 0030 002B     	 cmp r3,#0
 2662 0032 18D0     	 beq .L29
 370:../SSC/Src/ecatappl.c ****     {
 371:../SSC/Src/ecatappl.c ****         u16EepromStoreTimeoutCounter++;
 2663              	 .loc 3 371 0
 2664 0034 294B     	 ldr r3,.L33+12
 2665 0036 1B88     	 ldrh r3,[r3]
 2666 0038 0133     	 adds r3,r3,#1
 2667 003a 9AB2     	 uxth r2,r3
 2668 003c 274B     	 ldr r3,.L33+12
 2669 003e 1A80     	 strh r2,[r3]
 372:../SSC/Src/ecatappl.c **** 
 373:../SSC/Src/ecatappl.c ****         if (u16EepromStoreTimeoutValue <= u16EepromStoreTimeoutCounter)
 2670              	 .loc 3 373 0
 2671 0040 254B     	 ldr r3,.L33+8
 2672 0042 1A88     	 ldrh r2,[r3]
 2673 0044 254B     	 ldr r3,.L33+12
 2674 0046 1B88     	 ldrh r3,[r3]
 2675 0048 9A42     	 cmp r2,r3
 2676 004a 0CD8     	 bhi .L29
 374:../SSC/Src/ecatappl.c ****         {
 375:../SSC/Src/ecatappl.c ****             u16EepromStoreTimeoutValue = 0;
 2677              	 .loc 3 375 0
 2678 004c 224B     	 ldr r3,.L33+8
 2679 004e 0022     	 movs r2,#0
 2680 0050 1A80     	 strh r2,[r3]
 376:../SSC/Src/ecatappl.c ****             u16EepromStoreTimeoutCounter = 0;
 2681              	 .loc 3 376 0
 2682 0052 224B     	 ldr r3,.L33+12
 2683 0054 0022     	 movs r2,#0
 2684 0056 1A80     	 strh r2,[r3]
 377:../SSC/Src/ecatappl.c **** 
 378:../SSC/Src/ecatappl.c ****             if (pAPPL_EEPROM_Store != NULL)
 2685              	 .loc 3 378 0
 2686 0058 214B     	 ldr r3,.L33+16
 2687 005a 1B68     	 ldr r3,[r3]
 2688 005c 002B     	 cmp r3,#0
 2689 005e 02D0     	 beq .L29
 379:../SSC/Src/ecatappl.c ****             {
 380:../SSC/Src/ecatappl.c ****                 pAPPL_EEPROM_Store();
 2690              	 .loc 3 380 0
 2691 0060 1F4B     	 ldr r3,.L33+16
 2692 0062 1B68     	 ldr r3,[r3]
 2693 0064 9847     	 blx r3
 2694              	.L29:
 381:../SSC/Src/ecatappl.c ****             }
 382:../SSC/Src/ecatappl.c **** 
 383:../SSC/Src/ecatappl.c ****         }
 384:../SSC/Src/ecatappl.c ****     }
 385:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) EEPROM3*/
 386:../SSC/Src/ecatappl.c **** 
 387:../SSC/Src/ecatappl.c **** 
 388:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) COE4*/
 389:../SSC/Src/ecatappl.c **** 
 390:../SSC/Src/ecatappl.c ****     /* Increment the counter every ms between two updates based on the system time (32Bit overrun i
 391:../SSC/Src/ecatappl.c ****     if (!b32BitDc || ((u64Timestamp & 0xFFFFFFFF) <= 4293000000))
 2695              	 .loc 3 391 0
 2696 0066 1F4B     	 ldr r3,.L33+20
 2697 0068 1B78     	 ldrb r3,[r3]
 2698 006a 83F00103 	 eor r3,r3,#1
 2699 006e DBB2     	 uxtb r3,r3
 2700 0070 002B     	 cmp r3,#0
 2701 0072 11D1     	 bne .L30
 2702              	 .loc 3 391 0 is_stmt 0 discriminator 1
 2703 0074 1C4B     	 ldr r3,.L33+24
 2704 0076 D3E90023 	 ldrd r2,[r3]
 2705 007a 4FF0FF30 	 mov r0,#-1
 2706 007e 4FF00001 	 mov r1,#0
 2707 0082 02EA0002 	 and r2,r2,r0
 2708 0086 03EA0103 	 and r3,r3,r1
 2709 008a 1848     	 ldr r0,.L33+28
 2710 008c 4FF00001 	 mov r1,#0
 2711 0090 9942     	 cmp r1,r3
 2712 0092 08BF     	 it eq
 2713 0094 9042     	 cmpeq r0,r2
 2714 0096 0CD3     	 bcc .L31
 2715              	.L30:
 392:../SSC/Src/ecatappl.c ****     {
 393:../SSC/Src/ecatappl.c **** 
 394:../SSC/Src/ecatappl.c ****         /* the timestamp is stored in ns */
 395:../SSC/Src/ecatappl.c ****         u64Timestamp = u64Timestamp + 1000000;
 2716              	 .loc 3 395 0 is_stmt 1
 2717 0098 134B     	 ldr r3,.L33+24
 2718 009a D3E90023 	 ldrd r2,[r3]
 2719 009e 1448     	 ldr r0,.L33+32
 2720 00a0 4FF00001 	 mov r1,#0
 2721 00a4 1218     	 adds r2,r2,r0
 2722 00a6 43EB0103 	 adc r3,r3,r1
 2723 00aa 0F49     	 ldr r1,.L33+24
 2724 00ac C1E90023 	 strd r2,[r1]
 2725 00b0 07E0     	 b .L32
 2726              	.L31:
 396:../SSC/Src/ecatappl.c **** 
 397:../SSC/Src/ecatappl.c ****     }
 398:../SSC/Src/ecatappl.c ****     else if(b32BitDc)
 2727              	 .loc 3 398 0
 2728 00b2 0C4B     	 ldr r3,.L33+20
 2729 00b4 1B78     	 ldrb r3,[r3]
 2730 00b6 002B     	 cmp r3,#0
 2731 00b8 03D0     	 beq .L32
 399:../SSC/Src/ecatappl.c ****     {
 400:../SSC/Src/ecatappl.c ****         /* in case of a 32Bit DC and almost expired time stamp check for a DC overrun*/
 401:../SSC/Src/ecatappl.c ****         u32CheckForDcOverrunCnt = CHECK_DC_OVERRUN_IN_MS;
 2732              	 .loc 3 401 0
 2733 00ba 0E4B     	 ldr r3,.L33+36
 2734 00bc 4FF47A62 	 mov r2,#4000
 2735 00c0 1A60     	 str r2,[r3]
 2736              	.L32:
 402:../SSC/Src/ecatappl.c ****     }
 403:../SSC/Src/ecatappl.c **** 
 404:../SSC/Src/ecatappl.c ****     u32CheckForDcOverrunCnt++;
 2737              	 .loc 3 404 0
 2738 00c2 0C4B     	 ldr r3,.L33+36
 2739 00c4 1B68     	 ldr r3,[r3]
 2740 00c6 0133     	 adds r3,r3,#1
 2741 00c8 0A4A     	 ldr r2,.L33+36
 2742 00ca 1360     	 str r3,[r2]
 405:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) COE4*/
 406:../SSC/Src/ecatappl.c **** }
 2743              	 .loc 3 406 0
 2744 00cc 80BD     	 pop {r7,pc}
 2745              	.L34:
 2746 00ce 00BF     	 .align 2
 2747              	.L33:
 2748 00d0 00000000 	 .word bEcatWaitForAlControlRes
 2749 00d4 00000000 	 .word EsmTimeoutCounter
 2750 00d8 00000000 	 .word u16EepromStoreTimeoutValue
 2751 00dc 00000000 	 .word u16EepromStoreTimeoutCounter
 2752 00e0 00000000 	 .word pAPPL_EEPROM_Store
 2753 00e4 00000000 	 .word b32BitDc
 2754 00e8 00000000 	 .word u64Timestamp
 2755 00ec 40FBE1FF 	 .word -1967296
 2756 00f0 40420F00 	 .word 1000000
 2757 00f4 00000000 	 .word u32CheckForDcOverrunCnt
 2758              	 .cfi_endproc
 2759              	.LFE181:
 2761              	 .section .text.HandleCycleTimeMeasurement,"ax",%progbits
 2762              	 .align 2
 2763              	 .global HandleCycleTimeMeasurement
 2764              	 .thumb
 2765              	 .thumb_func
 2767              	HandleCycleTimeMeasurement:
 2768              	.LFB182:
 407:../SSC/Src/ecatappl.c **** 
 408:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT1*/
 409:../SSC/Src/ecatappl.c **** /////////////////////////////////////////////////////////////////////////////////////////
 410:../SSC/Src/ecatappl.c **** /**
 411:../SSC/Src/ecatappl.c **** \brief    In case of non DC synchronization the cycle time measurement is started and 0x1C3.2 (Cycl
 412:../SSC/Src/ecatappl.c **** *////////////////////////////////////////////////////////////////////////////////////////
 413:../SSC/Src/ecatappl.c **** void HandleCycleTimeMeasurement(void)
 414:../SSC/Src/ecatappl.c **** {
 2769              	 .loc 3 414 0
 2770              	 .cfi_startproc
 2771              	 
 2772              	 
 2773 0000 80B5     	 push {r7,lr}
 2774              	.LCFI40:
 2775              	 .cfi_def_cfa_offset 8
 2776              	 .cfi_offset 7,-8
 2777              	 .cfi_offset 14,-4
 2778 0002 00AF     	 add r7,sp,#0
 2779              	.LCFI41:
 2780              	 .cfi_def_cfa_register 7
 415:../SSC/Src/ecatappl.c ****     if (!bDcSyncActive) //no DC sync configured (cycle time measurement 0x1C3x.2 is only available 
 2781              	 .loc 3 415 0
 2782 0004 1A4B     	 ldr r3,.L41
 2783 0006 1B78     	 ldrb r3,[r3]
 2784 0008 83F00103 	 eor r3,r3,#1
 2785 000c DBB2     	 uxtb r3,r3
 2786 000e 002B     	 cmp r3,#0
 2787 0010 2DD0     	 beq .L35
 416:../SSC/Src/ecatappl.c ****     {
 417:../SSC/Src/ecatappl.c ****         if (u32CycleTimeStartValue > 0)
 2788              	 .loc 3 417 0
 2789 0012 184B     	 ldr r3,.L41+4
 2790 0014 1B68     	 ldr r3,[r3]
 2791 0016 002B     	 cmp r3,#0
 2792 0018 23D0     	 beq .L37
 418:../SSC/Src/ecatappl.c ****         {
 419:../SSC/Src/ecatappl.c ****             /* bus cycle completed*/
 420:../SSC/Src/ecatappl.c ****             u32CycleTimeStartValue = GetSystemTimeDelay(u32CycleTimeStartValue);
 2793              	 .loc 3 420 0
 2794 001a 164B     	 ldr r3,.L41+4
 2795 001c 1B68     	 ldr r3,[r3]
 2796 001e 1846     	 mov r0,r3
 2797 0020 FFF7FEFF 	 bl GetSystemTimeDelay
 2798 0024 0246     	 mov r2,r0
 2799 0026 134B     	 ldr r3,.L41+4
 2800 0028 1A60     	 str r2,[r3]
 421:../SSC/Src/ecatappl.c **** 
 422:../SSC/Src/ecatappl.c ****             if ((sSyncManOutPar.u32CycleTime == 0) || (sSyncManOutPar.u32CycleTime > u32CycleTimeSt
 2801              	 .loc 3 422 0
 2802 002a 134B     	 ldr r3,.L41+8
 2803 002c 5B68     	 ldr r3,[r3,#4]
 2804 002e 002B     	 cmp r3,#0
 2805 0030 05D0     	 beq .L38
 2806              	 .loc 3 422 0 is_stmt 0 discriminator 1
 2807 0032 114B     	 ldr r3,.L41+8
 2808 0034 5A68     	 ldr r2,[r3,#4]
 2809 0036 0F4B     	 ldr r3,.L41+4
 2810 0038 1B68     	 ldr r3,[r3]
 2811 003a 9A42     	 cmp r2,r3
 2812 003c 03D9     	 bls .L39
 2813              	.L38:
 423:../SSC/Src/ecatappl.c ****             {
 424:../SSC/Src/ecatappl.c ****                     sSyncManOutPar.u32CycleTime = u32CycleTimeStartValue;
 2814              	 .loc 3 424 0 is_stmt 1
 2815 003e 0D4B     	 ldr r3,.L41+4
 2816 0040 1B68     	 ldr r3,[r3]
 2817 0042 0D4A     	 ldr r2,.L41+8
 2818 0044 5360     	 str r3,[r2,#4]
 2819              	.L39:
 425:../SSC/Src/ecatappl.c ****             }
 426:../SSC/Src/ecatappl.c **** 
 427:../SSC/Src/ecatappl.c ****             if ((sSyncManInPar.u32CycleTime == 0) || (sSyncManInPar.u32CycleTime > u32CycleTimeStar
 2820              	 .loc 3 427 0
 2821 0046 0D4B     	 ldr r3,.L41+12
 2822 0048 5B68     	 ldr r3,[r3,#4]
 2823 004a 002B     	 cmp r3,#0
 2824 004c 05D0     	 beq .L40
 2825              	 .loc 3 427 0 is_stmt 0 discriminator 1
 2826 004e 0B4B     	 ldr r3,.L41+12
 2827 0050 5A68     	 ldr r2,[r3,#4]
 2828 0052 084B     	 ldr r3,.L41+4
 2829 0054 1B68     	 ldr r3,[r3]
 2830 0056 9A42     	 cmp r2,r3
 2831 0058 03D9     	 bls .L37
 2832              	.L40:
 428:../SSC/Src/ecatappl.c ****             {
 429:../SSC/Src/ecatappl.c ****                     sSyncManInPar.u32CycleTime = u32CycleTimeStartValue;
 2833              	 .loc 3 429 0 is_stmt 1
 2834 005a 064B     	 ldr r3,.L41+4
 2835 005c 1B68     	 ldr r3,[r3]
 2836 005e 074A     	 ldr r2,.L41+12
 2837 0060 5360     	 str r3,[r2,#4]
 2838              	.L37:
 430:../SSC/Src/ecatappl.c ****             }
 431:../SSC/Src/ecatappl.c ****         }
 432:../SSC/Src/ecatappl.c ****         /* get next start value */
 433:../SSC/Src/ecatappl.c ****         u32CycleTimeStartValue = GetSystemTimeDelay(0);
 2839              	 .loc 3 433 0
 2840 0062 0020     	 movs r0,#0
 2841 0064 FFF7FEFF 	 bl GetSystemTimeDelay
 2842 0068 0246     	 mov r2,r0
 2843 006a 024B     	 ldr r3,.L41+4
 2844 006c 1A60     	 str r2,[r3]
 2845              	.L35:
 434:../SSC/Src/ecatappl.c ****         
 435:../SSC/Src/ecatappl.c ****     }/* No DC sync configured */
 436:../SSC/Src/ecatappl.c **** }
 2846              	 .loc 3 436 0
 2847 006e 80BD     	 pop {r7,pc}
 2848              	.L42:
 2849              	 .align 2
 2850              	.L41:
 2851 0070 00000000 	 .word bDcSyncActive
 2852 0074 00000000 	 .word u32CycleTimeStartValue
 2853 0078 00000000 	 .word sSyncManOutPar
 2854 007c 00000000 	 .word sSyncManInPar
 2855              	 .cfi_endproc
 2856              	.LFE182:
 2858              	 .section .text.GetSystemTimeDelay,"ax",%progbits
 2859              	 .align 2
 2860              	 .global GetSystemTimeDelay
 2861              	 .thumb
 2862              	 .thumb_func
 2864              	GetSystemTimeDelay:
 2865              	.LFB183:
 437:../SSC/Src/ecatappl.c **** 
 438:../SSC/Src/ecatappl.c **** /////////////////////////////////////////////////////////////////////////////////////////
 439:../SSC/Src/ecatappl.c **** /**
 440:../SSC/Src/ecatappl.c **** \param    u32StartTime  Old system time (0x910:0x913) value 
 441:../SSC/Src/ecatappl.c **** 
 442:../SSC/Src/ecatappl.c **** \return   System time delta in ns
 443:../SSC/Src/ecatappl.c **** 
 444:../SSC/Src/ecatappl.c **** \brief    Calculates the difference between the old and current system time value in ns.
 445:../SSC/Src/ecatappl.c ****           NOTE: This function only handles a 32Bit system time values (therefore the maximum delay 
 446:../SSC/Src/ecatappl.c **** *////////////////////////////////////////////////////////////////////////////////////////
 447:../SSC/Src/ecatappl.c **** 
 448:../SSC/Src/ecatappl.c **** UINT32 GetSystemTimeDelay(UINT32 u32StartTime)
 449:../SSC/Src/ecatappl.c **** {
 2866              	 .loc 3 449 0
 2867              	 .cfi_startproc
 2868              	 
 2869              	 
 2870              	 
 2871 0000 80B4     	 push {r7}
 2872              	.LCFI42:
 2873              	 .cfi_def_cfa_offset 4
 2874              	 .cfi_offset 7,-4
 2875 0002 85B0     	 sub sp,sp,#20
 2876              	.LCFI43:
 2877              	 .cfi_def_cfa_offset 24
 2878 0004 00AF     	 add r7,sp,#0
 2879              	.LCFI44:
 2880              	 .cfi_def_cfa_register 7
 2881 0006 7860     	 str r0,[r7,#4]
 450:../SSC/Src/ecatappl.c ****    UINT32 u32CurValue = 0;
 2882              	 .loc 3 450 0
 2883 0008 0023     	 movs r3,#0
 2884 000a BB60     	 str r3,[r7,#8]
 451:../SSC/Src/ecatappl.c ****    UINT32 u32Delta = 0;
 2885              	 .loc 3 451 0
 2886 000c 0023     	 movs r3,#0
 2887 000e FB60     	 str r3,[r7,#12]
 452:../SSC/Src/ecatappl.c **** 
 453:../SSC/Src/ecatappl.c ****    
 454:../SSC/Src/ecatappl.c ****    HW_EscReadDWordIsr(u32CurValue, ESC_SYSTEMTIME_OFFSET);
 2888              	 .loc 3 454 0
 2889 0010 154B     	 ldr r3,.L49
 2890 0012 1B68     	 ldr r3,[r3]
 2891 0014 BB60     	 str r3,[r7,#8]
 455:../SSC/Src/ecatappl.c **** 
 456:../SSC/Src/ecatappl.c ****    if (u32CurValue > 0)
 2892              	 .loc 3 456 0
 2893 0016 BB68     	 ldr r3,[r7,#8]
 2894 0018 002B     	 cmp r3,#0
 2895 001a 0DD0     	 beq .L44
 457:../SSC/Src/ecatappl.c ****    {
 458:../SSC/Src/ecatappl.c ****       if (u32StartTime <= u32CurValue)
 2896              	 .loc 3 458 0
 2897 001c 7A68     	 ldr r2,[r7,#4]
 2898 001e BB68     	 ldr r3,[r7,#8]
 2899 0020 9A42     	 cmp r2,r3
 2900 0022 04D8     	 bhi .L45
 459:../SSC/Src/ecatappl.c ****       {
 460:../SSC/Src/ecatappl.c ****          u32Delta = u32CurValue - u32StartTime;
 2901              	 .loc 3 460 0
 2902 0024 BA68     	 ldr r2,[r7,#8]
 2903 0026 7B68     	 ldr r3,[r7,#4]
 2904 0028 D31A     	 subs r3,r2,r3
 2905 002a FB60     	 str r3,[r7,#12]
 2906 002c 04E0     	 b .L44
 2907              	.L45:
 461:../SSC/Src/ecatappl.c ****       }
 462:../SSC/Src/ecatappl.c ****       else
 463:../SSC/Src/ecatappl.c ****       {
 464:../SSC/Src/ecatappl.c ****          //The 32Bit timer is wrapped around
 465:../SSC/Src/ecatappl.c ****          u32Delta = u32CurValue + (0xFFFFFFFF - u32StartTime);
 2908              	 .loc 3 465 0
 2909 002e BA68     	 ldr r2,[r7,#8]
 2910 0030 7B68     	 ldr r3,[r7,#4]
 2911 0032 D31A     	 subs r3,r2,r3
 2912 0034 013B     	 subs r3,r3,#1
 2913 0036 FB60     	 str r3,[r7,#12]
 2914              	.L44:
 466:../SSC/Src/ecatappl.c ****       }
 467:../SSC/Src/ecatappl.c ****    }// current value successfully read out
 468:../SSC/Src/ecatappl.c **** 
 469:../SSC/Src/ecatappl.c ****    if (u32StartTime > 0)
 2915              	 .loc 3 469 0
 2916 0038 7B68     	 ldr r3,[r7,#4]
 2917 003a 002B     	 cmp r3,#0
 2918 003c 0CD0     	 beq .L46
 470:../SSC/Src/ecatappl.c ****    {
 471:../SSC/Src/ecatappl.c **** 
 472:../SSC/Src/ecatappl.c ****        /*the difference between two timestamps are calculated => subtract measurement failure*/
 473:../SSC/Src/ecatappl.c ****        if (u32SystemTimeReadFailure < u32Delta)
 2919              	 .loc 3 473 0
 2920 003e 0B4B     	 ldr r3,.L49+4
 2921 0040 1A68     	 ldr r2,[r3]
 2922 0042 FB68     	 ldr r3,[r7,#12]
 2923 0044 9A42     	 cmp r2,r3
 2924 0046 05D2     	 bcs .L47
 474:../SSC/Src/ecatappl.c ****        {
 475:../SSC/Src/ecatappl.c ****            u32Delta = u32Delta - u32SystemTimeReadFailure;
 2925              	 .loc 3 475 0
 2926 0048 084B     	 ldr r3,.L49+4
 2927 004a 1B68     	 ldr r3,[r3]
 2928 004c FA68     	 ldr r2,[r7,#12]
 2929 004e D31A     	 subs r3,r2,r3
 2930 0050 FB60     	 str r3,[r7,#12]
 2931 0052 01E0     	 b .L46
 2932              	.L47:
 476:../SSC/Src/ecatappl.c ****        }
 477:../SSC/Src/ecatappl.c ****        else
 478:../SSC/Src/ecatappl.c ****        {
 479:../SSC/Src/ecatappl.c ****            /*set the delta to 0 if the measurement failure is greater than the calculated differenc
 480:../SSC/Src/ecatappl.c ****            u32Delta = 0;
 2933              	 .loc 3 480 0
 2934 0054 0023     	 movs r3,#0
 2935 0056 FB60     	 str r3,[r7,#12]
 2936              	.L46:
 481:../SSC/Src/ecatappl.c ****        }
 482:../SSC/Src/ecatappl.c ****    }
 483:../SSC/Src/ecatappl.c ****    return u32Delta;
 2937              	 .loc 3 483 0
 2938 0058 FB68     	 ldr r3,[r7,#12]
 484:../SSC/Src/ecatappl.c **** }
 2939              	 .loc 3 484 0
 2940 005a 1846     	 mov r0,r3
 2941 005c 1437     	 adds r7,r7,#20
 2942              	.LCFI45:
 2943              	 .cfi_def_cfa_offset 4
 2944 005e BD46     	 mov sp,r7
 2945              	.LCFI46:
 2946              	 .cfi_def_cfa_register 13
 2947              	 
 2948 0060 5DF8047B 	 ldr r7,[sp],#4
 2949              	.LCFI47:
 2950              	 .cfi_restore 7
 2951              	 .cfi_def_cfa_offset 0
 2952 0064 7047     	 bx lr
 2953              	.L50:
 2954 0066 00BF     	 .align 2
 2955              	.L49:
 2956 0068 10090154 	 .word 1409354000
 2957 006c 00000000 	 .word u32SystemTimeReadFailure
 2958              	 .cfi_endproc
 2959              	.LFE183:
 2961              	 .section .text.PDI_Isr,"ax",%progbits
 2962              	 .align 2
 2963              	 .global PDI_Isr
 2964              	 .thumb
 2965              	 .thumb_func
 2967              	PDI_Isr:
 2968              	.LFB184:
 485:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT1*/
 486:../SSC/Src/ecatappl.c **** 
 487:../SSC/Src/ecatappl.c **** void PDI_Isr(void)
 488:../SSC/Src/ecatappl.c **** {
 2969              	 .loc 3 488 0
 2970              	 .cfi_startproc
 2971              	 
 2972              	 
 2973 0000 80B5     	 push {r7,lr}
 2974              	.LCFI48:
 2975              	 .cfi_def_cfa_offset 8
 2976              	 .cfi_offset 7,-8
 2977              	 .cfi_offset 14,-4
 2978 0002 82B0     	 sub sp,sp,#8
 2979              	.LCFI49:
 2980              	 .cfi_def_cfa_offset 16
 2981 0004 00AF     	 add r7,sp,#0
 2982              	.LCFI50:
 2983              	 .cfi_def_cfa_register 7
 489:../SSC/Src/ecatappl.c ****     if(bEscIntEnabled)
 2984              	 .loc 3 489 0
 2985 0006 454B     	 ldr r3,.L60
 2986 0008 1B78     	 ldrb r3,[r3]
 2987 000a 002B     	 cmp r3,#0
 2988 000c 00F08180 	 beq .L52
 2989              	.LBB2:
 490:../SSC/Src/ecatappl.c ****     {
 491:../SSC/Src/ecatappl.c ****         /* get the AL event register */
 492:../SSC/Src/ecatappl.c ****         UINT16  ALEvent = HW_GetALEventRegister_Isr();
 2990              	 .loc 3 492 0
 2991 0010 FFF7FEFF 	 bl HW_GetALEventRegister_Isr
 2992 0014 0346     	 mov r3,r0
 2993 0016 FB80     	 strh r3,[r7,#6]
 493:../SSC/Src/ecatappl.c ****         ALEvent = SWAPWORD(ALEvent);
 494:../SSC/Src/ecatappl.c **** 
 495:../SSC/Src/ecatappl.c ****         if ( ALEvent & PROCESS_OUTPUT_EVENT )
 2994              	 .loc 3 495 0
 2995 0018 FB88     	 ldrh r3,[r7,#6]
 2996 001a 03F48063 	 and r3,r3,#1024
 2997 001e 002B     	 cmp r3,#0
 2998 0020 39D0     	 beq .L53
 496:../SSC/Src/ecatappl.c ****         {
 497:../SSC/Src/ecatappl.c ****             if(bDcRunning && bDcSyncActive)
 2999              	 .loc 3 497 0
 3000 0022 3F4B     	 ldr r3,.L60+4
 3001 0024 1B78     	 ldrb r3,[r3]
 3002 0026 002B     	 cmp r3,#0
 3003 0028 06D0     	 beq .L54
 3004              	 .loc 3 497 0 is_stmt 0 discriminator 1
 3005 002a 3E4B     	 ldr r3,.L60+8
 3006 002c 1B78     	 ldrb r3,[r3]
 3007 002e 002B     	 cmp r3,#0
 3008 0030 02D0     	 beq .L54
 498:../SSC/Src/ecatappl.c ****             {
 499:../SSC/Src/ecatappl.c ****                 /* Reset SM/Sync0 counter. Will be incremented on every Sync0 event*/
 500:../SSC/Src/ecatappl.c ****                 u16SmSync0Counter = 0;
 3009              	 .loc 3 500 0 is_stmt 1
 3010 0032 3D4B     	 ldr r3,.L60+12
 3011 0034 0022     	 movs r2,#0
 3012 0036 1A80     	 strh r2,[r3]
 3013              	.L54:
 501:../SSC/Src/ecatappl.c ****             }
 502:../SSC/Src/ecatappl.c ****             if(sSyncManOutPar.u16SmEventMissedCounter > 0)
 3014              	 .loc 3 502 0
 3015 0038 3C4B     	 ldr r3,.L60+16
 3016 003a 1B8D     	 ldrh r3,[r3,#40]
 3017 003c 002B     	 cmp r3,#0
 3018 003e 05D0     	 beq .L55
 503:../SSC/Src/ecatappl.c ****             {
 504:../SSC/Src/ecatappl.c ****                 sSyncManOutPar.u16SmEventMissedCounter--;
 3019              	 .loc 3 504 0
 3020 0040 3A4B     	 ldr r3,.L60+16
 3021 0042 1B8D     	 ldrh r3,[r3,#40]
 3022 0044 013B     	 subs r3,r3,#1
 3023 0046 9AB2     	 uxth r2,r3
 3024 0048 384B     	 ldr r3,.L60+16
 3025 004a 1A85     	 strh r2,[r3,#40]
 3026              	.L55:
 505:../SSC/Src/ecatappl.c ****             }
 506:../SSC/Src/ecatappl.c **** 
 507:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT5*/
 508:../SSC/Src/ecatappl.c ****             sSyncManInPar.u16SmEventMissedCounter = sSyncManOutPar.u16SmEventMissedCounter;
 3027              	 .loc 3 508 0
 3028 004c 374B     	 ldr r3,.L60+16
 3029 004e 1A8D     	 ldrh r2,[r3,#40]
 3030 0050 374B     	 ldr r3,.L60+20
 3031 0052 1A85     	 strh r2,[r3,#40]
 509:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT5*/
 510:../SSC/Src/ecatappl.c **** 
 511:../SSC/Src/ecatappl.c **** 
 512:../SSC/Src/ecatappl.c **** 
 513:../SSC/Src/ecatappl.c ****         /* Outputs were updated, set flag for watchdog monitoring */
 514:../SSC/Src/ecatappl.c ****         bEcatFirstOutputsReceived = TRUE;
 3032              	 .loc 3 514 0
 3033 0054 374B     	 ldr r3,.L60+24
 3034 0056 0122     	 movs r2,#1
 3035 0058 1A70     	 strb r2,[r3]
 515:../SSC/Src/ecatappl.c **** 
 516:../SSC/Src/ecatappl.c **** 
 517:../SSC/Src/ecatappl.c ****         /*
 518:../SSC/Src/ecatappl.c ****             handle output process data event
 519:../SSC/Src/ecatappl.c ****         */
 520:../SSC/Src/ecatappl.c ****         if ( bEcatOutputUpdateRunning )
 3036              	 .loc 3 520 0
 3037 005a 374B     	 ldr r3,.L60+28
 3038 005c 1B78     	 ldrb r3,[r3]
 3039 005e 002B     	 cmp r3,#0
 3040 0060 02D0     	 beq .L56
 521:../SSC/Src/ecatappl.c ****         {
 522:../SSC/Src/ecatappl.c ****             /* slave is in OP, update the outputs */
 523:../SSC/Src/ecatappl.c ****             PDO_OutputMapping();
 3041              	 .loc 3 523 0
 3042 0062 FFF7FEFF 	 bl PDO_OutputMapping
 3043 0066 16E0     	 b .L53
 3044              	.L56:
 524:../SSC/Src/ecatappl.c ****         }
 525:../SSC/Src/ecatappl.c ****         else
 526:../SSC/Src/ecatappl.c ****         {
 527:../SSC/Src/ecatappl.c ****             /* Just acknowledge the process data event in the INIT,PreOP and SafeOP state */
 528:../SSC/Src/ecatappl.c ****             HW_EscReadByteIsr(u8dummy,nEscAddrOutputData);
 3045              	 .loc 3 528 0
 3046 0068 344B     	 ldr r3,.L60+32
 3047 006a 1B88     	 ldrh r3,[r3]
 3048 006c 03F1A843 	 add r3,r3,#1409286144
 3049 0070 03F58033 	 add r3,r3,#65536
 3050 0074 1B78     	 ldrb r3,[r3]
 3051 0076 DAB2     	 uxtb r2,r3
 3052 0078 314B     	 ldr r3,.L60+36
 3053 007a 1A70     	 strb r2,[r3]
 529:../SSC/Src/ecatappl.c ****             HW_EscReadByteIsr(u8dummy,(nEscAddrOutputData+nPdOutputSize-1));
 3054              	 .loc 3 529 0
 3055 007c 2F4B     	 ldr r3,.L60+32
 3056 007e 1B88     	 ldrh r3,[r3]
 3057 0080 1A46     	 mov r2,r3
 3058 0082 304B     	 ldr r3,.L60+40
 3059 0084 1B88     	 ldrh r3,[r3]
 3060 0086 1344     	 add r3,r3,r2
 3061 0088 1A46     	 mov r2,r3
 3062 008a 2F4B     	 ldr r3,.L60+44
 3063 008c 1344     	 add r3,r3,r2
 3064 008e 1B78     	 ldrb r3,[r3]
 3065 0090 DAB2     	 uxtb r2,r3
 3066 0092 2B4B     	 ldr r3,.L60+36
 3067 0094 1A70     	 strb r2,[r3]
 3068              	.L53:
 530:../SSC/Src/ecatappl.c ****         }
 531:../SSC/Src/ecatappl.c ****         }
 532:../SSC/Src/ecatappl.c **** 
 533:../SSC/Src/ecatappl.c ****         /*
 534:../SSC/Src/ecatappl.c ****             Call ECAT_Application() in SM Sync mode
 535:../SSC/Src/ecatappl.c ****         */
 536:../SSC/Src/ecatappl.c ****         if (sSyncManOutPar.u16SyncType == SYNCTYPE_SM_SYNCHRON)
 3069              	 .loc 3 536 0
 3070 0096 254B     	 ldr r3,.L60+16
 3071 0098 5B88     	 ldrh r3,[r3,#2]
 3072 009a 012B     	 cmp r3,#1
 3073 009c 01D1     	 bne .L57
 537:../SSC/Src/ecatappl.c ****         {
 538:../SSC/Src/ecatappl.c ****             /* The Application is synchronized to process data Sync Manager event*/
 539:../SSC/Src/ecatappl.c ****             ECAT_Application();
 3074              	 .loc 3 539 0
 3075 009e FFF7FEFF 	 bl ECAT_Application
 3076              	.L57:
 540:../SSC/Src/ecatappl.c ****         }
 541:../SSC/Src/ecatappl.c **** 
 542:../SSC/Src/ecatappl.c ****     if ( bEcatInputUpdateRunning 
 3077              	 .loc 3 542 0
 3078 00a2 2A4B     	 ldr r3,.L60+48
 3079 00a4 1B78     	 ldrb r3,[r3]
 3080 00a6 002B     	 cmp r3,#0
 3081 00a8 09D0     	 beq .L58
 543:../SSC/Src/ecatappl.c ****        && ((sSyncManInPar.u16SyncType == SYNCTYPE_SM_SYNCHRON) || (sSyncManInPar.u16SyncType == SYN
 3082              	 .loc 3 543 0
 3083 00aa 214B     	 ldr r3,.L60+20
 3084 00ac 5B88     	 ldrh r3,[r3,#2]
 3085 00ae 012B     	 cmp r3,#1
 3086 00b0 03D0     	 beq .L59
 3087              	 .loc 3 543 0 is_stmt 0 discriminator 1
 3088 00b2 1F4B     	 ldr r3,.L60+20
 3089 00b4 5B88     	 ldrh r3,[r3,#2]
 3090 00b6 222B     	 cmp r3,#34
 3091 00b8 01D1     	 bne .L58
 3092              	.L59:
 544:../SSC/Src/ecatappl.c ****         )
 545:../SSC/Src/ecatappl.c ****     {
 546:../SSC/Src/ecatappl.c ****         /* EtherCAT slave is at least in SAFE-OPERATIONAL, update inputs */
 547:../SSC/Src/ecatappl.c ****         PDO_InputMapping();
 3093              	 .loc 3 547 0 is_stmt 1
 3094 00ba FFF7FEFF 	 bl PDO_InputMapping
 3095              	.L58:
 548:../SSC/Src/ecatappl.c ****     }
 549:../SSC/Src/ecatappl.c **** 
 550:../SSC/Src/ecatappl.c ****     /*
 551:../SSC/Src/ecatappl.c ****       Check if cycle exceed
 552:../SSC/Src/ecatappl.c ****     */
 553:../SSC/Src/ecatappl.c ****     /*if next SM event was triggered during runtime increment cycle exceed counter*/
 554:../SSC/Src/ecatappl.c ****     ALEvent = HW_GetALEventRegister_Isr();
 3096              	 .loc 3 554 0
 3097 00be FFF7FEFF 	 bl HW_GetALEventRegister_Isr
 3098 00c2 0346     	 mov r3,r0
 3099 00c4 FB80     	 strh r3,[r7,#6]
 555:../SSC/Src/ecatappl.c ****     ALEvent = SWAPWORD(ALEvent);
 556:../SSC/Src/ecatappl.c **** 
 557:../SSC/Src/ecatappl.c ****     if ( ALEvent & PROCESS_OUTPUT_EVENT )
 3100              	 .loc 3 557 0
 3101 00c6 FB88     	 ldrh r3,[r7,#6]
 3102 00c8 03F48063 	 and r3,r3,#1024
 3103 00cc 002B     	 cmp r3,#0
 3104 00ce 20D0     	 beq .L52
 558:../SSC/Src/ecatappl.c ****     {
 559:../SSC/Src/ecatappl.c ****         sSyncManOutPar.u16CycleExceededCounter++;
 3105              	 .loc 3 559 0
 3106 00d0 164B     	 ldr r3,.L60+16
 3107 00d2 5B8D     	 ldrh r3,[r3,#42]
 3108 00d4 0133     	 adds r3,r3,#1
 3109 00d6 9AB2     	 uxth r2,r3
 3110 00d8 144B     	 ldr r3,.L60+16
 3111 00da 5A85     	 strh r2,[r3,#42]
 560:../SSC/Src/ecatappl.c ****         sSyncManInPar.u16CycleExceededCounter = sSyncManOutPar.u16CycleExceededCounter;
 3112              	 .loc 3 560 0
 3113 00dc 134B     	 ldr r3,.L60+16
 3114 00de 5A8D     	 ldrh r2,[r3,#42]
 3115 00e0 134B     	 ldr r3,.L60+20
 3116 00e2 5A85     	 strh r2,[r3,#42]
 561:../SSC/Src/ecatappl.c **** 
 562:../SSC/Src/ecatappl.c ****       /* Acknowledge the process data event*/
 563:../SSC/Src/ecatappl.c ****             HW_EscReadByteIsr(u8dummy,nEscAddrOutputData);
 3117              	 .loc 3 563 0
 3118 00e4 154B     	 ldr r3,.L60+32
 3119 00e6 1B88     	 ldrh r3,[r3]
 3120 00e8 03F1A843 	 add r3,r3,#1409286144
 3121 00ec 03F58033 	 add r3,r3,#65536
 3122 00f0 1B78     	 ldrb r3,[r3]
 3123 00f2 DAB2     	 uxtb r2,r3
 3124 00f4 124B     	 ldr r3,.L60+36
 3125 00f6 1A70     	 strb r2,[r3]
 564:../SSC/Src/ecatappl.c ****             HW_EscReadByteIsr(u8dummy,(nEscAddrOutputData+nPdOutputSize-1));
 3126              	 .loc 3 564 0
 3127 00f8 104B     	 ldr r3,.L60+32
 3128 00fa 1B88     	 ldrh r3,[r3]
 3129 00fc 1A46     	 mov r2,r3
 3130 00fe 114B     	 ldr r3,.L60+40
 3131 0100 1B88     	 ldrh r3,[r3]
 3132 0102 1344     	 add r3,r3,r2
 3133 0104 1A46     	 mov r2,r3
 3134 0106 104B     	 ldr r3,.L60+44
 3135 0108 1344     	 add r3,r3,r2
 3136 010a 1B78     	 ldrb r3,[r3]
 3137 010c DAB2     	 uxtb r2,r3
 3138 010e 0C4B     	 ldr r3,.L60+36
 3139 0110 1A70     	 strb r2,[r3]
 3140              	.L52:
 3141              	.LBE2:
 565:../SSC/Src/ecatappl.c ****     }
 566:../SSC/Src/ecatappl.c ****     } //if(bEscIntEnabled)
 567:../SSC/Src/ecatappl.c **** 
 568:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT5*/
 569:../SSC/Src/ecatappl.c ****     COE_UpdateSyncErrorStatus();
 3142              	 .loc 3 569 0
 3143 0112 FFF7FEFF 	 bl COE_UpdateSyncErrorStatus
 570:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT5*/
 571:../SSC/Src/ecatappl.c **** 
 572:../SSC/Src/ecatappl.c **** }
 3144              	 .loc 3 572 0
 3145 0116 0837     	 adds r7,r7,#8
 3146              	.LCFI51:
 3147              	 .cfi_def_cfa_offset 8
 3148 0118 BD46     	 mov sp,r7
 3149              	.LCFI52:
 3150              	 .cfi_def_cfa_register 13
 3151              	 
 3152 011a 80BD     	 pop {r7,pc}
 3153              	.L61:
 3154              	 .align 2
 3155              	.L60:
 3156 011c 00000000 	 .word bEscIntEnabled
 3157 0120 00000000 	 .word bDcRunning
 3158 0124 00000000 	 .word bDcSyncActive
 3159 0128 00000000 	 .word u16SmSync0Counter
 3160 012c 00000000 	 .word sSyncManOutPar
 3161 0130 00000000 	 .word sSyncManInPar
 3162 0134 00000000 	 .word bEcatFirstOutputsReceived
 3163 0138 00000000 	 .word bEcatOutputUpdateRunning
 3164 013c 00000000 	 .word nEscAddrOutputData
 3165 0140 00000000 	 .word u8dummy
 3166 0144 00000000 	 .word nPdOutputSize
 3167 0148 FFFF0054 	 .word 1409351679
 3168 014c 00000000 	 .word bEcatInputUpdateRunning
 3169              	 .cfi_endproc
 3170              	.LFE184:
 3172              	 .section .text.Sync0_Isr,"ax",%progbits
 3173              	 .align 2
 3174              	 .global Sync0_Isr
 3175              	 .thumb
 3176              	 .thumb_func
 3178              	Sync0_Isr:
 3179              	.LFB185:
 573:../SSC/Src/ecatappl.c **** 
 574:../SSC/Src/ecatappl.c **** void Sync0_Isr(void)
 575:../SSC/Src/ecatappl.c **** {
 3180              	 .loc 3 575 0
 3181              	 .cfi_startproc
 3182              	 
 3183              	 
 3184 0000 80B5     	 push {r7,lr}
 3185              	.LCFI53:
 3186              	 .cfi_def_cfa_offset 8
 3187              	 .cfi_offset 7,-8
 3188              	 .cfi_offset 14,-4
 3189 0002 82B0     	 sub sp,sp,#8
 3190              	.LCFI54:
 3191              	 .cfi_def_cfa_offset 16
 3192 0004 00AF     	 add r7,sp,#0
 3193              	.LCFI55:
 3194              	 .cfi_def_cfa_register 7
 576:../SSC/Src/ecatappl.c ****      Sync0WdCounter = 0;
 3195              	 .loc 3 576 0
 3196 0006 484B     	 ldr r3,.L72
 3197 0008 0022     	 movs r2,#0
 3198 000a 1A80     	 strh r2,[r3]
 577:../SSC/Src/ecatappl.c **** 
 578:../SSC/Src/ecatappl.c ****     if(bDcSyncActive)
 3199              	 .loc 3 578 0
 3200 000c 474B     	 ldr r3,.L72+4
 3201 000e 1B78     	 ldrb r3,[r3]
 3202 0010 002B     	 cmp r3,#0
 3203 0012 00F08380 	 beq .L63
 579:../SSC/Src/ecatappl.c ****     {
 580:../SSC/Src/ecatappl.c **** 
 581:../SSC/Src/ecatappl.c ****         if ( bEcatInputUpdateRunning )
 3204              	 .loc 3 581 0
 3205 0016 464B     	 ldr r3,.L72+8
 3206 0018 1B78     	 ldrb r3,[r3]
 3207 001a 002B     	 cmp r3,#0
 3208 001c 05D0     	 beq .L64
 582:../SSC/Src/ecatappl.c ****         {
 583:../SSC/Src/ecatappl.c ****             LatchInputSync0Counter++;
 3209              	 .loc 3 583 0
 3210 001e 454B     	 ldr r3,.L72+12
 3211 0020 1B88     	 ldrh r3,[r3]
 3212 0022 0133     	 adds r3,r3,#1
 3213 0024 9AB2     	 uxth r2,r3
 3214 0026 434B     	 ldr r3,.L72+12
 3215 0028 1A80     	 strh r2,[r3]
 3216              	.L64:
 584:../SSC/Src/ecatappl.c ****         }
 585:../SSC/Src/ecatappl.c **** 
 586:../SSC/Src/ecatappl.c ****         if(u16SmSync0Value > 0)
 3217              	 .loc 3 586 0
 3218 002a 434B     	 ldr r3,.L72+16
 3219 002c 1B88     	 ldrh r3,[r3]
 3220 002e 002B     	 cmp r3,#0
 3221 0030 5BD0     	 beq .L65
 587:../SSC/Src/ecatappl.c ****         {
 588:../SSC/Src/ecatappl.c ****            /* Check if Sm-Sync sequence is invalid */
 589:../SSC/Src/ecatappl.c ****            if (u16SmSync0Counter > u16SmSync0Value)
 3222              	 .loc 3 589 0
 3223 0032 424B     	 ldr r3,.L72+20
 3224 0034 1A88     	 ldrh r2,[r3]
 3225 0036 404B     	 ldr r3,.L72+16
 3226 0038 1B88     	 ldrh r3,[r3]
 3227 003a 9A42     	 cmp r2,r3
 3228 003c 23D9     	 bls .L66
 590:../SSC/Src/ecatappl.c ****            {
 591:../SSC/Src/ecatappl.c ****               if ((nPdOutputSize > 0) && (sSyncManOutPar.u16SmEventMissedCounter <= sErrorSettings.
 3229              	 .loc 3 591 0
 3230 003e 404B     	 ldr r3,.L72+24
 3231 0040 1B88     	 ldrh r3,[r3]
 3232 0042 002B     	 cmp r3,#0
 3233 0044 0BD0     	 beq .L67
 3234              	 .loc 3 591 0 is_stmt 0 discriminator 1
 3235 0046 3F4B     	 ldr r3,.L72+28
 3236 0048 1A8D     	 ldrh r2,[r3,#40]
 3237 004a 3F4B     	 ldr r3,.L72+32
 3238 004c 1B89     	 ldrh r3,[r3,#8]
 3239 004e 9A42     	 cmp r2,r3
 3240 0050 05D8     	 bhi .L67
 592:../SSC/Src/ecatappl.c ****               {
 593:../SSC/Src/ecatappl.c ****                  sSyncManOutPar.u16SmEventMissedCounter = sSyncManOutPar.u16SmEventMissedCounter + 
 3241              	 .loc 3 593 0 is_stmt 1
 3242 0052 3C4B     	 ldr r3,.L72+28
 3243 0054 1B8D     	 ldrh r3,[r3,#40]
 3244 0056 0333     	 adds r3,r3,#3
 3245 0058 9AB2     	 uxth r2,r3
 3246 005a 3A4B     	 ldr r3,.L72+28
 3247 005c 1A85     	 strh r2,[r3,#40]
 3248              	.L67:
 594:../SSC/Src/ecatappl.c ****               }
 595:../SSC/Src/ecatappl.c **** 
 596:../SSC/Src/ecatappl.c ****            if ((nPdInputSize > 0) && (nPdOutputSize == 0) && (sSyncManInPar.u16SmEventMissedCounter
 3249              	 .loc 3 596 0
 3250 005e 3B4B     	 ldr r3,.L72+36
 3251 0060 1B88     	 ldrh r3,[r3]
 3252 0062 002B     	 cmp r3,#0
 3253 0064 0FD0     	 beq .L66
 3254              	 .loc 3 596 0 is_stmt 0 discriminator 1
 3255 0066 364B     	 ldr r3,.L72+24
 3256 0068 1B88     	 ldrh r3,[r3]
 3257 006a 002B     	 cmp r3,#0
 3258 006c 0BD1     	 bne .L66
 3259              	 .loc 3 596 0 discriminator 2
 3260 006e 384B     	 ldr r3,.L72+40
 3261 0070 1A8D     	 ldrh r2,[r3,#40]
 3262 0072 354B     	 ldr r3,.L72+32
 3263 0074 1B89     	 ldrh r3,[r3,#8]
 3264 0076 9A42     	 cmp r2,r3
 3265 0078 05D8     	 bhi .L66
 597:../SSC/Src/ecatappl.c ****            {
 598:../SSC/Src/ecatappl.c ****                sSyncManInPar.u16SmEventMissedCounter = sSyncManInPar.u16SmEventMissedCounter + 3;
 3266              	 .loc 3 598 0 is_stmt 1
 3267 007a 354B     	 ldr r3,.L72+40
 3268 007c 1B8D     	 ldrh r3,[r3,#40]
 3269 007e 0333     	 adds r3,r3,#3
 3270 0080 9AB2     	 uxth r2,r3
 3271 0082 334B     	 ldr r3,.L72+40
 3272 0084 1A85     	 strh r2,[r3,#40]
 3273              	.L66:
 599:../SSC/Src/ecatappl.c ****            }
 600:../SSC/Src/ecatappl.c **** 
 601:../SSC/Src/ecatappl.c ****            } // if (u16SmSync0Counter > u16SmSync0Value)
 602:../SSC/Src/ecatappl.c **** 
 603:../SSC/Src/ecatappl.c ****            
 604:../SSC/Src/ecatappl.c ****            if ((nPdOutputSize == 0) && (nPdInputSize > 0))
 3274              	 .loc 3 604 0
 3275 0086 2E4B     	 ldr r3,.L72+24
 3276 0088 1B88     	 ldrh r3,[r3]
 3277 008a 002B     	 cmp r3,#0
 3278 008c 21D1     	 bne .L68
 3279              	 .loc 3 604 0 is_stmt 0 discriminator 1
 3280 008e 2F4B     	 ldr r3,.L72+36
 3281 0090 1B88     	 ldrh r3,[r3]
 3282 0092 002B     	 cmp r3,#0
 3283 0094 1DD0     	 beq .L68
 3284              	.LBB3:
 605:../SSC/Src/ecatappl.c ****            {
 606:../SSC/Src/ecatappl.c ****               /* Input only with DC, check if the last input data was read*/
 607:../SSC/Src/ecatappl.c ****               UINT16  ALEvent = HW_GetALEventRegister_Isr();
 3285              	 .loc 3 607 0 is_stmt 1
 3286 0096 FFF7FEFF 	 bl HW_GetALEventRegister_Isr
 3287 009a 0346     	 mov r3,r0
 3288 009c FB80     	 strh r3,[r7,#6]
 608:../SSC/Src/ecatappl.c ****               ALEvent = SWAPWORD(ALEvent);
 609:../SSC/Src/ecatappl.c **** 
 610:../SSC/Src/ecatappl.c ****               if ((ALEvent & PROCESS_INPUT_EVENT) == 0)
 3289              	 .loc 3 610 0
 3290 009e FB88     	 ldrh r3,[r7,#6]
 3291 00a0 03F40063 	 and r3,r3,#2048
 3292 00a4 002B     	 cmp r3,#0
 3293 00a6 0CD1     	 bne .L69
 611:../SSC/Src/ecatappl.c ****               {
 612:../SSC/Src/ecatappl.c **** 
 613:../SSC/Src/ecatappl.c ****                  /* no input data was read by the master, increment the sm missed counter*/
 614:../SSC/Src/ecatappl.c ****                 if (u16SmSync0Counter <= u16SmSync0Value)
 3294              	 .loc 3 614 0
 3295 00a8 244B     	 ldr r3,.L72+20
 3296 00aa 1A88     	 ldrh r2,[r3]
 3297 00ac 224B     	 ldr r3,.L72+16
 3298 00ae 1B88     	 ldrh r3,[r3]
 3299 00b0 9A42     	 cmp r2,r3
 3300 00b2 0DD8     	 bhi .L71
 615:../SSC/Src/ecatappl.c ****                 {
 616:../SSC/Src/ecatappl.c ****                     u16SmSync0Counter++;
 3301              	 .loc 3 616 0
 3302 00b4 214B     	 ldr r3,.L72+20
 3303 00b6 1B88     	 ldrh r3,[r3]
 3304 00b8 0133     	 adds r3,r3,#1
 3305 00ba 9AB2     	 uxth r2,r3
 3306 00bc 1F4B     	 ldr r3,.L72+20
 3307 00be 1A80     	 strh r2,[r3]
 3308              	.LBE3:
 605:../SSC/Src/ecatappl.c ****               /* Input only with DC, check if the last input data was read*/
 3309              	 .loc 3 605 0
 3310 00c0 13E0     	 b .L65
 3311              	.L69:
 3312              	.LBB4:
 617:../SSC/Src/ecatappl.c ****                 }
 618:../SSC/Src/ecatappl.c ****               }
 619:../SSC/Src/ecatappl.c ****               else
 620:../SSC/Src/ecatappl.c ****               {
 621:../SSC/Src/ecatappl.c ****                  /* Reset SM/Sync0 counter*/
 622:../SSC/Src/ecatappl.c ****                  u16SmSync0Counter = 0;
 3313              	 .loc 3 622 0
 3314 00c2 1E4B     	 ldr r3,.L72+20
 3315 00c4 0022     	 movs r2,#0
 3316 00c6 1A80     	 strh r2,[r3]
 623:../SSC/Src/ecatappl.c **** 
 624:../SSC/Src/ecatappl.c ****                  sSyncManInPar.u16SmEventMissedCounter = 0;
 3317              	 .loc 3 624 0
 3318 00c8 214B     	 ldr r3,.L72+40
 3319 00ca 0022     	 movs r2,#0
 3320 00cc 1A85     	 strh r2,[r3,#40]
 3321              	.LBE4:
 605:../SSC/Src/ecatappl.c ****               /* Input only with DC, check if the last input data was read*/
 3322              	 .loc 3 605 0
 3323 00ce 0CE0     	 b .L65
 3324              	.L71:
 605:../SSC/Src/ecatappl.c ****               /* Input only with DC, check if the last input data was read*/
 3325              	 .loc 3 605 0 is_stmt 0 discriminator 1
 3326 00d0 0BE0     	 b .L65
 3327              	.L68:
 625:../SSC/Src/ecatappl.c **** 
 626:../SSC/Src/ecatappl.c ****               }
 627:../SSC/Src/ecatappl.c ****            }
 628:../SSC/Src/ecatappl.c ****            else if (u16SmSync0Counter <= u16SmSync0Value)
 3328              	 .loc 3 628 0 is_stmt 1
 3329 00d2 1A4B     	 ldr r3,.L72+20
 3330 00d4 1A88     	 ldrh r2,[r3]
 3331 00d6 184B     	 ldr r3,.L72+16
 3332 00d8 1B88     	 ldrh r3,[r3]
 3333 00da 9A42     	 cmp r2,r3
 3334 00dc 05D8     	 bhi .L65
 629:../SSC/Src/ecatappl.c ****            {
 630:../SSC/Src/ecatappl.c **** 
 631:../SSC/Src/ecatappl.c ****                u16SmSync0Counter++;
 3335              	 .loc 3 631 0
 3336 00de 174B     	 ldr r3,.L72+20
 3337 00e0 1B88     	 ldrh r3,[r3]
 3338 00e2 0133     	 adds r3,r3,#1
 3339 00e4 9AB2     	 uxth r2,r3
 3340 00e6 154B     	 ldr r3,.L72+20
 3341 00e8 1A80     	 strh r2,[r3]
 3342              	.L65:
 632:../SSC/Src/ecatappl.c ****            }
 633:../SSC/Src/ecatappl.c ****         }//SM -Sync monitoring enabled
 634:../SSC/Src/ecatappl.c **** 
 635:../SSC/Src/ecatappl.c **** 
 636:../SSC/Src/ecatappl.c ****         /* Application is synchronized to SYNC0 event*/
 637:../SSC/Src/ecatappl.c ****         ECAT_Application();
 3343              	 .loc 3 637 0
 3344 00ea FFF7FEFF 	 bl ECAT_Application
 638:../SSC/Src/ecatappl.c **** 
 639:../SSC/Src/ecatappl.c ****         if ( bEcatInputUpdateRunning 
 3345              	 .loc 3 639 0
 3346 00ee 104B     	 ldr r3,.L72+8
 3347 00f0 1B78     	 ldrb r3,[r3]
 3348 00f2 002B     	 cmp r3,#0
 3349 00f4 12D0     	 beq .L63
 640:../SSC/Src/ecatappl.c ****            && (LatchInputSync0Value > 0) && (LatchInputSync0Value == LatchInputSync0Counter) ) /* I
 3350              	 .loc 3 640 0
 3351 00f6 174B     	 ldr r3,.L72+44
 3352 00f8 1B88     	 ldrh r3,[r3]
 3353 00fa 002B     	 cmp r3,#0
 3354 00fc 0ED0     	 beq .L63
 3355              	 .loc 3 640 0 is_stmt 0 discriminator 1
 3356 00fe 154B     	 ldr r3,.L72+44
 3357 0100 1A88     	 ldrh r2,[r3]
 3358 0102 0C4B     	 ldr r3,.L72+12
 3359 0104 1B88     	 ldrh r3,[r3]
 3360 0106 9A42     	 cmp r2,r3
 3361 0108 08D1     	 bne .L63
 641:../SSC/Src/ecatappl.c ****         {
 642:../SSC/Src/ecatappl.c ****             /* EtherCAT slave is at least in SAFE-OPERATIONAL, update inputs */
 643:../SSC/Src/ecatappl.c ****             PDO_InputMapping();
 3362              	 .loc 3 643 0 is_stmt 1
 3363 010a FFF7FEFF 	 bl PDO_InputMapping
 644:../SSC/Src/ecatappl.c **** 
 645:../SSC/Src/ecatappl.c ****             if(LatchInputSync0Value == 1)
 3364              	 .loc 3 645 0
 3365 010e 114B     	 ldr r3,.L72+44
 3366 0110 1B88     	 ldrh r3,[r3]
 3367 0112 012B     	 cmp r3,#1
 3368 0114 02D1     	 bne .L63
 646:../SSC/Src/ecatappl.c ****             {
 647:../SSC/Src/ecatappl.c ****                 /* if inputs are latched on every Sync0 event (otherwise the counter is reset on th
 648:../SSC/Src/ecatappl.c ****                 LatchInputSync0Counter = 0;
 3369              	 .loc 3 648 0
 3370 0116 074B     	 ldr r3,.L72+12
 3371 0118 0022     	 movs r2,#0
 3372 011a 1A80     	 strh r2,[r3]
 3373              	.L63:
 649:../SSC/Src/ecatappl.c ****             }
 650:../SSC/Src/ecatappl.c ****         }
 651:../SSC/Src/ecatappl.c **** 
 652:../SSC/Src/ecatappl.c ****     }
 653:../SSC/Src/ecatappl.c **** 
 654:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT5*/
 655:../SSC/Src/ecatappl.c ****     COE_UpdateSyncErrorStatus();
 3374              	 .loc 3 655 0
 3375 011c FFF7FEFF 	 bl COE_UpdateSyncErrorStatus
 656:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT5*/
 657:../SSC/Src/ecatappl.c **** 
 658:../SSC/Src/ecatappl.c **** }
 3376              	 .loc 3 658 0
 3377 0120 0837     	 adds r7,r7,#8
 3378              	.LCFI56:
 3379              	 .cfi_def_cfa_offset 8
 3380 0122 BD46     	 mov sp,r7
 3381              	.LCFI57:
 3382              	 .cfi_def_cfa_register 13
 3383              	 
 3384 0124 80BD     	 pop {r7,pc}
 3385              	.L73:
 3386 0126 00BF     	 .align 2
 3387              	.L72:
 3388 0128 00000000 	 .word Sync0WdCounter
 3389 012c 00000000 	 .word bDcSyncActive
 3390 0130 00000000 	 .word bEcatInputUpdateRunning
 3391 0134 00000000 	 .word LatchInputSync0Counter
 3392 0138 00000000 	 .word u16SmSync0Value
 3393 013c 00000000 	 .word u16SmSync0Counter
 3394 0140 00000000 	 .word nPdOutputSize
 3395 0144 00000000 	 .word sSyncManOutPar
 3396 0148 00000000 	 .word sErrorSettings
 3397 014c 00000000 	 .word nPdInputSize
 3398 0150 00000000 	 .word sSyncManInPar
 3399 0154 00000000 	 .word LatchInputSync0Value
 3400              	 .cfi_endproc
 3401              	.LFE185:
 3403              	 .section .text.Sync1_Isr,"ax",%progbits
 3404              	 .align 2
 3405              	 .global Sync1_Isr
 3406              	 .thumb
 3407              	 .thumb_func
 3409              	Sync1_Isr:
 3410              	.LFB186:
 659:../SSC/Src/ecatappl.c **** 
 660:../SSC/Src/ecatappl.c **** void Sync1_Isr(void)
 661:../SSC/Src/ecatappl.c **** {
 3411              	 .loc 3 661 0
 3412              	 .cfi_startproc
 3413              	 
 3414              	 
 3415 0000 80B5     	 push {r7,lr}
 3416              	.LCFI58:
 3417              	 .cfi_def_cfa_offset 8
 3418              	 .cfi_offset 7,-8
 3419              	 .cfi_offset 14,-4
 3420 0002 00AF     	 add r7,sp,#0
 3421              	.LCFI59:
 3422              	 .cfi_def_cfa_register 7
 662:../SSC/Src/ecatappl.c ****     Sync1WdCounter = 0;
 3423              	 .loc 3 662 0
 3424 0004 0A4B     	 ldr r3,.L76
 3425 0006 0022     	 movs r2,#0
 3426 0008 1A80     	 strh r2,[r3]
 663:../SSC/Src/ecatappl.c **** 
 664:../SSC/Src/ecatappl.c ****         if ( bEcatInputUpdateRunning 
 3427              	 .loc 3 664 0
 3428 000a 0A4B     	 ldr r3,.L76+4
 3429 000c 1B78     	 ldrb r3,[r3]
 3430 000e 002B     	 cmp r3,#0
 3431 0010 09D0     	 beq .L75
 665:../SSC/Src/ecatappl.c ****             && (sSyncManInPar.u16SyncType == SYNCTYPE_DCSYNC1)
 3432              	 .loc 3 665 0
 3433 0012 094B     	 ldr r3,.L76+8
 3434 0014 5B88     	 ldrh r3,[r3,#2]
 3435 0016 032B     	 cmp r3,#3
 3436 0018 05D1     	 bne .L75
 666:../SSC/Src/ecatappl.c ****             && (LatchInputSync0Value == 0)) /* Inputs are latched on Sync1 (LatchInputSync0Value ==
 3437              	 .loc 3 666 0
 3438 001a 084B     	 ldr r3,.L76+12
 3439 001c 1B88     	 ldrh r3,[r3]
 3440 001e 002B     	 cmp r3,#0
 3441 0020 01D1     	 bne .L75
 667:../SSC/Src/ecatappl.c ****         {
 668:../SSC/Src/ecatappl.c ****             /* EtherCAT slave is at least in SAFE-OPERATIONAL, update inputs */
 669:../SSC/Src/ecatappl.c ****             PDO_InputMapping();
 3442              	 .loc 3 669 0
 3443 0022 FFF7FEFF 	 bl PDO_InputMapping
 3444              	.L75:
 670:../SSC/Src/ecatappl.c ****         }
 671:../SSC/Src/ecatappl.c **** 
 672:../SSC/Src/ecatappl.c ****         /* Reset Sync0 latch counter (to start next Sync0 latch cycle) */
 673:../SSC/Src/ecatappl.c ****         LatchInputSync0Counter = 0;
 3445              	 .loc 3 673 0
 3446 0026 064B     	 ldr r3,.L76+16
 3447 0028 0022     	 movs r2,#0
 3448 002a 1A80     	 strh r2,[r3]
 674:../SSC/Src/ecatappl.c **** }
 3449              	 .loc 3 674 0
 3450 002c 80BD     	 pop {r7,pc}
 3451              	.L77:
 3452 002e 00BF     	 .align 2
 3453              	.L76:
 3454 0030 00000000 	 .word Sync1WdCounter
 3455 0034 00000000 	 .word bEcatInputUpdateRunning
 3456 0038 00000000 	 .word sSyncManInPar
 3457 003c 00000000 	 .word LatchInputSync0Value
 3458 0040 00000000 	 .word LatchInputSync0Counter
 3459              	 .cfi_endproc
 3460              	.LFE186:
 3462              	 .section .text.MainInit,"ax",%progbits
 3463              	 .align 2
 3464              	 .global MainInit
 3465              	 .thumb
 3466              	 .thumb_func
 3468              	MainInit:
 3469              	.LFB187:
 675:../SSC/Src/ecatappl.c **** /////////////////////////////////////////////////////////////////////////////////////////
 676:../SSC/Src/ecatappl.c **** /**
 677:../SSC/Src/ecatappl.c **** 
 678:../SSC/Src/ecatappl.c ****  \brief    This function shall called within a 1ms cycle.
 679:../SSC/Src/ecatappl.c ****         Set Run and Error Led depending on the Led state
 680:../SSC/Src/ecatappl.c **** 
 681:../SSC/Src/ecatappl.c **** *////////////////////////////////////////////////////////////////////////////////////////
 682:../SSC/Src/ecatappl.c **** /////////////////////////////////////////////////////////////////////////////////////////
 683:../SSC/Src/ecatappl.c **** /**
 684:../SSC/Src/ecatappl.c ****  \param     pObjectDictionary   Pointer to application specific object dictionary.
 685:../SSC/Src/ecatappl.c ****                                 NULL if no specific object are available.
 686:../SSC/Src/ecatappl.c **** \return     0 if initialization was successful
 687:../SSC/Src/ecatappl.c **** 
 688:../SSC/Src/ecatappl.c ****  \brief    This function initialize the EtherCAT Sample Code
 689:../SSC/Src/ecatappl.c **** 
 690:../SSC/Src/ecatappl.c **** *////////////////////////////////////////////////////////////////////////////////////////
 691:../SSC/Src/ecatappl.c **** 
 692:../SSC/Src/ecatappl.c **** UINT16 MainInit(void)
 693:../SSC/Src/ecatappl.c **** {
 3470              	 .loc 3 693 0
 3471              	 .cfi_startproc
 3472              	 
 3473              	 
 3474 0000 80B5     	 push {r7,lr}
 3475              	.LCFI60:
 3476              	 .cfi_def_cfa_offset 8
 3477              	 .cfi_offset 7,-8
 3478              	 .cfi_offset 14,-4
 3479 0002 86B0     	 sub sp,sp,#24
 3480              	.LCFI61:
 3481              	 .cfi_def_cfa_offset 32
 3482 0004 00AF     	 add r7,sp,#0
 3483              	.LCFI62:
 3484              	 .cfi_def_cfa_register 7
 694:../SSC/Src/ecatappl.c ****     UINT16 Error = 0;
 3485              	 .loc 3 694 0
 3486 0006 0023     	 movs r3,#0
 3487 0008 FB81     	 strh r3,[r7,#14]
 695:../SSC/Src/ecatappl.c **** /*Hardware init function need to be called from the application layer*/
 696:../SSC/Src/ecatappl.c **** 
 697:../SSC/Src/ecatappl.c **** #ifdef SET_EEPROM_PTR
 698:../SSC/Src/ecatappl.c ****     SET_EEPROM_PTR
 3488              	 .loc 3 698 0
 3489 000a 364B     	 ldr r3,.L88
 3490 000c 364A     	 ldr r2,.L88+4
 3491 000e 1A60     	 str r2,[r3]
 699:../SSC/Src/ecatappl.c **** #endif
 700:../SSC/Src/ecatappl.c **** 
 701:../SSC/Src/ecatappl.c **** 
 702:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT8*/
 703:../SSC/Src/ecatappl.c **** /* Reset application function pointer*/
 704:../SSC/Src/ecatappl.c **** pAPPL_EEPROM_Read = NULL;
 3492              	 .loc 3 704 0
 3493 0010 364B     	 ldr r3,.L88+8
 3494 0012 0022     	 movs r2,#0
 3495 0014 1A60     	 str r2,[r3]
 705:../SSC/Src/ecatappl.c ****     pAPPL_EEPROM_Write = NULL;
 3496              	 .loc 3 705 0
 3497 0016 364B     	 ldr r3,.L88+12
 3498 0018 0022     	 movs r2,#0
 3499 001a 1A60     	 str r2,[r3]
 706:../SSC/Src/ecatappl.c ****     pAPPL_EEPROM_Reload = NULL;
 3500              	 .loc 3 706 0
 3501 001c 354B     	 ldr r3,.L88+16
 3502 001e 0022     	 movs r2,#0
 3503 0020 1A60     	 str r2,[r3]
 707:../SSC/Src/ecatappl.c ****     pAPPL_EEPROM_Store = NULL;
 3504              	 .loc 3 707 0
 3505 0022 354B     	 ldr r3,.L88+20
 3506 0024 0022     	 movs r2,#0
 3507 0026 1A60     	 str r2,[r3]
 708:../SSC/Src/ecatappl.c **** 
 709:../SSC/Src/ecatappl.c **** 
 710:../SSC/Src/ecatappl.c **** 
 711:../SSC/Src/ecatappl.c **** 
 712:../SSC/Src/ecatappl.c ****     pAPPL_MainLoop = NULL;
 3508              	 .loc 3 712 0
 3509 0028 344B     	 ldr r3,.L88+24
 3510 002a 0022     	 movs r2,#0
 3511 002c 1A60     	 str r2,[r3]
 713:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT8*/
 714:../SSC/Src/ecatappl.c **** 
 715:../SSC/Src/ecatappl.c ****     /* initialize the EtherCAT Slave Interface */
 716:../SSC/Src/ecatappl.c ****     ECAT_Init();
 3512              	 .loc 3 716 0
 3513 002e FFF7FEFF 	 bl ECAT_Init
 717:../SSC/Src/ecatappl.c ****     /* initialize the objects */
 718:../SSC/Src/ecatappl.c ****     COE_ObjInit();
 3514              	 .loc 3 718 0
 3515 0032 FFF7FEFF 	 bl COE_ObjInit
 719:../SSC/Src/ecatappl.c **** 
 720:../SSC/Src/ecatappl.c **** 
 721:../SSC/Src/ecatappl.c ****     /*indicate that the slave stack initialization finished*/
 722:../SSC/Src/ecatappl.c ****     bInitFinished = TRUE;
 3516              	 .loc 3 722 0
 3517 0036 324B     	 ldr r3,.L88+28
 3518 0038 0122     	 movs r2,#1
 3519 003a 1A70     	 strb r2,[r3]
 723:../SSC/Src/ecatappl.c **** 
 724:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT1*/
 725:../SSC/Src/ecatappl.c **** 
 726:../SSC/Src/ecatappl.c ****     bMinCycleTimeMeasurementStarted = FALSE;
 3520              	 .loc 3 726 0
 3521 003c 314B     	 ldr r3,.L88+32
 3522 003e 0022     	 movs r2,#0
 3523 0040 1A70     	 strb r2,[r3]
 727:../SSC/Src/ecatappl.c ****     u32CycleTimeStartValue = 0;
 3524              	 .loc 3 727 0
 3525 0042 314B     	 ldr r3,.L88+36
 3526 0044 0022     	 movs r2,#0
 3527 0046 1A60     	 str r2,[r3]
 728:../SSC/Src/ecatappl.c ****     u32MinCycleTimeStartValue = 0;
 3528              	 .loc 3 728 0
 3529 0048 304B     	 ldr r3,.L88+40
 3530 004a 0022     	 movs r2,#0
 3531 004c 1A60     	 str r2,[r3]
 729:../SSC/Src/ecatappl.c **** 
 730:../SSC/Src/ecatappl.c ****     u32SystemTimeReadFailure = 0;
 3532              	 .loc 3 730 0
 3533 004e 304B     	 ldr r3,.L88+44
 3534 0050 0022     	 movs r2,#0
 3535 0052 1A60     	 str r2,[r3]
 3536              	.LBB5:
 731:../SSC/Src/ecatappl.c **** 
 732:../SSC/Src/ecatappl.c ****     /* Get the System Time read failure */
 733:../SSC/Src/ecatappl.c ****     {
 734:../SSC/Src/ecatappl.c ****        UINT32 u32TimeValue = 0;
 3537              	 .loc 3 734 0
 3538 0054 0023     	 movs r3,#0
 3539 0056 BB60     	 str r3,[r7,#8]
 735:../SSC/Src/ecatappl.c ****        UINT32 u32Cnt = 0;
 3540              	 .loc 3 735 0
 3541 0058 0023     	 movs r3,#0
 3542 005a 7B61     	 str r3,[r7,#20]
 736:../SSC/Src/ecatappl.c ****        UINT32 u32Delta = 0;
 3543              	 .loc 3 736 0
 3544 005c 0023     	 movs r3,#0
 3545 005e 3B61     	 str r3,[r7,#16]
 737:../SSC/Src/ecatappl.c **** 
 738:../SSC/Src/ecatappl.c ****        while (u32Cnt < 1000)
 3546              	 .loc 3 738 0
 3547 0060 26E0     	 b .L79
 3548              	.L84:
 739:../SSC/Src/ecatappl.c ****        {
 740:../SSC/Src/ecatappl.c ****            HW_EscReadDWordIsr(u32TimeValue, ESC_SYSTEMTIME_OFFSET);
 3549              	 .loc 3 740 0
 3550 0062 2C4B     	 ldr r3,.L88+48
 3551 0064 1B68     	 ldr r3,[r3]
 3552 0066 BB60     	 str r3,[r7,#8]
 741:../SSC/Src/ecatappl.c ****            HW_EscReadDWordIsr(u32Delta, ESC_SYSTEMTIME_OFFSET);
 3553              	 .loc 3 741 0
 3554 0068 2A4B     	 ldr r3,.L88+48
 3555 006a 1B68     	 ldr r3,[r3]
 3556 006c 3B61     	 str r3,[r7,#16]
 742:../SSC/Src/ecatappl.c **** 
 743:../SSC/Src/ecatappl.c ****             if (u32TimeValue <= u32Delta)
 3557              	 .loc 3 743 0
 3558 006e BA68     	 ldr r2,[r7,#8]
 3559 0070 3B69     	 ldr r3,[r7,#16]
 3560 0072 9A42     	 cmp r2,r3
 3561 0074 04D8     	 bhi .L80
 744:../SSC/Src/ecatappl.c ****             {
 745:../SSC/Src/ecatappl.c ****                     u32Delta = u32Delta - u32TimeValue;
 3562              	 .loc 3 745 0
 3563 0076 3A69     	 ldr r2,[r7,#16]
 3564 0078 BB68     	 ldr r3,[r7,#8]
 3565 007a D31A     	 subs r3,r2,r3
 3566 007c 3B61     	 str r3,[r7,#16]
 3567 007e 04E0     	 b .L81
 3568              	.L80:
 746:../SSC/Src/ecatappl.c ****             }
 747:../SSC/Src/ecatappl.c ****             else
 748:../SSC/Src/ecatappl.c ****             {
 749:../SSC/Src/ecatappl.c ****                 //The 32Bit timer is wrapped around
 750:../SSC/Src/ecatappl.c ****                 u32Delta = u32Delta + (0xFFFFFFFF - u32TimeValue);
 3569              	 .loc 3 750 0
 3570 0080 3A69     	 ldr r2,[r7,#16]
 3571 0082 BB68     	 ldr r3,[r7,#8]
 3572 0084 D31A     	 subs r3,r2,r3
 3573 0086 013B     	 subs r3,r3,#1
 3574 0088 3B61     	 str r3,[r7,#16]
 3575              	.L81:
 751:../SSC/Src/ecatappl.c ****             }
 752:../SSC/Src/ecatappl.c **** 
 753:../SSC/Src/ecatappl.c **** 
 754:../SSC/Src/ecatappl.c ****             if (u32SystemTimeReadFailure == 0)
 3576              	 .loc 3 754 0
 3577 008a 214B     	 ldr r3,.L88+44
 3578 008c 1B68     	 ldr r3,[r3]
 3579 008e 002B     	 cmp r3,#0
 3580 0090 03D1     	 bne .L82
 755:../SSC/Src/ecatappl.c ****             {
 756:../SSC/Src/ecatappl.c ****                 u32SystemTimeReadFailure = u32Delta;
 3581              	 .loc 3 756 0
 3582 0092 1F4A     	 ldr r2,.L88+44
 3583 0094 3B69     	 ldr r3,[r7,#16]
 3584 0096 1360     	 str r3,[r2]
 3585 0098 07E0     	 b .L83
 3586              	.L82:
 757:../SSC/Src/ecatappl.c ****             }
 758:../SSC/Src/ecatappl.c ****             else if (u32SystemTimeReadFailure > u32Delta)
 3587              	 .loc 3 758 0
 3588 009a 1D4B     	 ldr r3,.L88+44
 3589 009c 1A68     	 ldr r2,[r3]
 3590 009e 3B69     	 ldr r3,[r7,#16]
 3591 00a0 9A42     	 cmp r2,r3
 3592 00a2 02D9     	 bls .L83
 759:../SSC/Src/ecatappl.c ****             {
 760:../SSC/Src/ecatappl.c ****                 u32SystemTimeReadFailure = u32Delta;
 3593              	 .loc 3 760 0
 3594 00a4 1A4A     	 ldr r2,.L88+44
 3595 00a6 3B69     	 ldr r3,[r7,#16]
 3596 00a8 1360     	 str r3,[r2]
 3597              	.L83:
 761:../SSC/Src/ecatappl.c ****             }
 762:../SSC/Src/ecatappl.c **** 
 763:../SSC/Src/ecatappl.c ****           u32Cnt++;
 3598              	 .loc 3 763 0
 3599 00aa 7B69     	 ldr r3,[r7,#20]
 3600 00ac 0133     	 adds r3,r3,#1
 3601 00ae 7B61     	 str r3,[r7,#20]
 3602              	.L79:
 738:../SSC/Src/ecatappl.c ****        {
 3603              	 .loc 3 738 0
 3604 00b0 7B69     	 ldr r3,[r7,#20]
 3605 00b2 B3F57A7F 	 cmp r3,#1000
 3606 00b6 D4D3     	 bcc .L84
 3607              	.LBE5:
 3608              	.LBB6:
 764:../SSC/Src/ecatappl.c ****        }
 765:../SSC/Src/ecatappl.c ****     
 766:../SSC/Src/ecatappl.c ****     }
 767:../SSC/Src/ecatappl.c **** 
 768:../SSC/Src/ecatappl.c **** 
 769:../SSC/Src/ecatappl.c ****     /*ECATCHANGE_END(V5.12) ECAT1*/
 770:../SSC/Src/ecatappl.c **** 
 771:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) EEPROM1*/
 772:../SSC/Src/ecatappl.c ****     {
 773:../SSC/Src/ecatappl.c ****         UINT16 TmpData = 0;
 3609              	 .loc 3 773 0
 3610 00b8 0023     	 movs r3,#0
 3611 00ba FB80     	 strh r3,[r7,#6]
 774:../SSC/Src/ecatappl.c ****         HW_EscReadWord(TmpData, ESC_EEPROM_CONTROL_OFFSET);
 3612              	 .loc 3 774 0
 3613 00bc 164B     	 ldr r3,.L88+52
 3614 00be 1B88     	 ldrh r3,[r3]
 3615 00c0 FB80     	 strh r3,[r7,#6]
 775:../SSC/Src/ecatappl.c ****         TmpData = SWAPDWORD(TmpData);
 776:../SSC/Src/ecatappl.c ****         //get bit6 of register 0x502
 777:../SSC/Src/ecatappl.c ****         if ((TmpData & ESC_EEPROM_SUPPORTED_READBYTES_MASK) > 0)
 3616              	 .loc 3 777 0
 3617 00c2 FB88     	 ldrh r3,[r7,#6]
 3618 00c4 03F04003 	 and r3,r3,#64
 3619 00c8 002B     	 cmp r3,#0
 3620 00ca 03DD     	 ble .L85
 778:../SSC/Src/ecatappl.c ****         {
 779:../SSC/Src/ecatappl.c ****             //8Bytes EEPROM read access
 780:../SSC/Src/ecatappl.c ****             EepromReadSize = 8;
 3621              	 .loc 3 780 0
 3622 00cc 134B     	 ldr r3,.L88+56
 3623 00ce 0822     	 movs r2,#8
 3624 00d0 1A80     	 strh r2,[r3]
 3625 00d2 02E0     	 b .L86
 3626              	.L85:
 781:../SSC/Src/ecatappl.c ****         }
 782:../SSC/Src/ecatappl.c ****         else
 783:../SSC/Src/ecatappl.c ****         {
 784:../SSC/Src/ecatappl.c ****             //4Bytes EEPROM read access
 785:../SSC/Src/ecatappl.c ****             EepromReadSize = 4;
 3627              	 .loc 3 785 0
 3628 00d4 114B     	 ldr r3,.L88+56
 3629 00d6 0422     	 movs r2,#4
 3630 00d8 1A80     	 strh r2,[r3]
 3631              	.L86:
 3632              	.LBE6:
 786:../SSC/Src/ecatappl.c ****         }
 787:../SSC/Src/ecatappl.c ****     }
 788:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) EEPROM1*/
 789:../SSC/Src/ecatappl.c **** 
 790:../SSC/Src/ecatappl.c **** /*Application Init need to be called from the application layer*/
 791:../SSC/Src/ecatappl.c ****      return Error;
 3633              	 .loc 3 791 0
 3634 00da FB89     	 ldrh r3,[r7,#14]
 792:../SSC/Src/ecatappl.c **** }
 3635              	 .loc 3 792 0
 3636 00dc 1846     	 mov r0,r3
 3637 00de 1837     	 adds r7,r7,#24
 3638              	.LCFI63:
 3639              	 .cfi_def_cfa_offset 8
 3640 00e0 BD46     	 mov sp,r7
 3641              	.LCFI64:
 3642              	 .cfi_def_cfa_register 13
 3643              	 
 3644 00e2 80BD     	 pop {r7,pc}
 3645              	.L89:
 3646              	 .align 2
 3647              	.L88:
 3648 00e4 00000000 	 .word pEEPROM
 3649 00e8 00000000 	 .word aEepromData
 3650 00ec 00000000 	 .word pAPPL_EEPROM_Read
 3651 00f0 00000000 	 .word pAPPL_EEPROM_Write
 3652 00f4 00000000 	 .word pAPPL_EEPROM_Reload
 3653 00f8 00000000 	 .word pAPPL_EEPROM_Store
 3654 00fc 00000000 	 .word pAPPL_MainLoop
 3655 0100 00000000 	 .word bInitFinished
 3656 0104 00000000 	 .word bMinCycleTimeMeasurementStarted
 3657 0108 00000000 	 .word u32CycleTimeStartValue
 3658 010c 00000000 	 .word u32MinCycleTimeStartValue
 3659 0110 00000000 	 .word u32SystemTimeReadFailure
 3660 0114 10090154 	 .word 1409354000
 3661 0118 02050154 	 .word 1409352962
 3662 011c 00000000 	 .word EepromReadSize
 3663              	 .cfi_endproc
 3664              	.LFE187:
 3666              	 .section .text.MainLoop,"ax",%progbits
 3667              	 .align 2
 3668              	 .global MainLoop
 3669              	 .thumb
 3670              	 .thumb_func
 3672              	MainLoop:
 3673              	.LFB188:
 793:../SSC/Src/ecatappl.c **** 
 794:../SSC/Src/ecatappl.c **** 
 795:../SSC/Src/ecatappl.c **** /////////////////////////////////////////////////////////////////////////////////////////
 796:../SSC/Src/ecatappl.c **** /**
 797:../SSC/Src/ecatappl.c **** 
 798:../SSC/Src/ecatappl.c ****  \brief    This function shall be called cyclically from main
 799:../SSC/Src/ecatappl.c **** 
 800:../SSC/Src/ecatappl.c **** *////////////////////////////////////////////////////////////////////////////////////////
 801:../SSC/Src/ecatappl.c **** 
 802:../SSC/Src/ecatappl.c **** void MainLoop(void)
 803:../SSC/Src/ecatappl.c **** {
 3674              	 .loc 3 803 0
 3675              	 .cfi_startproc
 3676              	 
 3677              	 
 3678 0000 80B5     	 push {r7,lr}
 3679              	.LCFI65:
 3680              	 .cfi_def_cfa_offset 8
 3681              	 .cfi_offset 7,-8
 3682              	 .cfi_offset 14,-4
 3683 0002 82B0     	 sub sp,sp,#8
 3684              	.LCFI66:
 3685              	 .cfi_def_cfa_offset 16
 3686 0004 00AF     	 add r7,sp,#0
 3687              	.LCFI67:
 3688              	 .cfi_def_cfa_register 7
 804:../SSC/Src/ecatappl.c ****     
 805:../SSC/Src/ecatappl.c ****     /*return if initialization not finished */
 806:../SSC/Src/ecatappl.c ****     if(bInitFinished == FALSE)
 3689              	 .loc 3 806 0
 3690 0006 334B     	 ldr r3,.L100
 3691 0008 1B78     	 ldrb r3,[r3]
 3692 000a 83F00103 	 eor r3,r3,#1
 3693 000e DBB2     	 uxtb r3,r3
 3694 0010 002B     	 cmp r3,#0
 3695 0012 00D0     	 beq .L91
 807:../SSC/Src/ecatappl.c ****     {
 808:../SSC/Src/ecatappl.c ****         return;
 3696              	 .loc 3 808 0
 3697 0014 5AE0     	 b .L90
 3698              	.L91:
 809:../SSC/Src/ecatappl.c ****     }
 810:../SSC/Src/ecatappl.c **** 
 811:../SSC/Src/ecatappl.c **** 
 812:../SSC/Src/ecatappl.c **** 
 813:../SSC/Src/ecatappl.c ****         /* FreeRun-Mode:  bEscIntEnabled = FALSE, bDcSyncActive = FALSE
 814:../SSC/Src/ecatappl.c ****            Synchron-Mode: bEscIntEnabled = TRUE, bDcSyncActive = FALSE
 815:../SSC/Src/ecatappl.c ****            DC-Mode:       bEscIntEnabled = TRUE, bDcSyncActive = TRUE */
 816:../SSC/Src/ecatappl.c ****         if (
 817:../SSC/Src/ecatappl.c ****             (!bEscIntEnabled || !bEcatFirstOutputsReceived)     /* SM-Synchronous, but not SM-event
 3699              	 .loc 3 817 0
 3700 0016 304B     	 ldr r3,.L100+4
 3701 0018 1B78     	 ldrb r3,[r3]
 3702 001a 83F00103 	 eor r3,r3,#1
 3703 001e DBB2     	 uxtb r3,r3
 816:../SSC/Src/ecatappl.c ****             (!bEscIntEnabled || !bEcatFirstOutputsReceived)     /* SM-Synchronous, but not SM-event
 3704              	 .loc 3 816 0
 3705 0020 002B     	 cmp r3,#0
 3706 0022 06D1     	 bne .L93
 3707              	 .loc 3 817 0
 3708 0024 2D4B     	 ldr r3,.L100+8
 3709 0026 1B78     	 ldrb r3,[r3]
 3710 0028 83F00103 	 eor r3,r3,#1
 3711 002c DBB2     	 uxtb r3,r3
 3712 002e 002B     	 cmp r3,#0
 3713 0030 38D0     	 beq .L94
 3714              	.L93:
 818:../SSC/Src/ecatappl.c ****           && !bDcSyncActive                                               /* DC-Synchronous */
 3715              	 .loc 3 818 0
 3716 0032 2B4B     	 ldr r3,.L100+12
 3717 0034 1B78     	 ldrb r3,[r3]
 3718 0036 83F00103 	 eor r3,r3,#1
 3719 003a DBB2     	 uxtb r3,r3
 3720 003c 002B     	 cmp r3,#0
 3721 003e 31D0     	 beq .L94
 819:../SSC/Src/ecatappl.c ****             )
 820:../SSC/Src/ecatappl.c ****         {
 821:../SSC/Src/ecatappl.c ****             /* if the application is running in ECAT Synchron Mode the function ECAT_Application is
 822:../SSC/Src/ecatappl.c ****                from the ESC interrupt routine (in mcihw.c or spihw.c),
 823:../SSC/Src/ecatappl.c ****                in ECAT Synchron Mode it should be additionally checked, if the SM-event is received
 824:../SSC/Src/ecatappl.c ****                at least once (bEcatFirstOutputsReceived = 1), otherwise no interrupt is generated
 825:../SSC/Src/ecatappl.c ****                and the function ECAT_Application has to be called here (with interrupts disabled,
 826:../SSC/Src/ecatappl.c ****                because the SM-event could be generated while executing ECAT_Application) */
 827:../SSC/Src/ecatappl.c ****             if ( !bEscIntEnabled )
 3722              	 .loc 3 827 0
 3723 0040 254B     	 ldr r3,.L100+4
 3724 0042 1B78     	 ldrb r3,[r3]
 3725 0044 83F00103 	 eor r3,r3,#1
 3726 0048 DBB2     	 uxtb r3,r3
 3727 004a 002B     	 cmp r3,#0
 3728 004c 1ED0     	 beq .L95
 3729              	.LBB7:
 828:../SSC/Src/ecatappl.c ****             {
 829:../SSC/Src/ecatappl.c ****                 /* application is running in ECAT FreeRun Mode,
 830:../SSC/Src/ecatappl.c ****                    first we have to check, if outputs were received */
 831:../SSC/Src/ecatappl.c ****                 UINT16 ALEvent = HW_GetALEventRegister();
 3730              	 .loc 3 831 0
 3731 004e FFF7FEFF 	 bl HW_GetALEventRegister
 3732 0052 0346     	 mov r3,r0
 3733 0054 FB80     	 strh r3,[r7,#6]
 832:../SSC/Src/ecatappl.c ****                 ALEvent = SWAPWORD(ALEvent);
 833:../SSC/Src/ecatappl.c **** 
 834:../SSC/Src/ecatappl.c ****                 if ( ALEvent & PROCESS_OUTPUT_EVENT )
 3734              	 .loc 3 834 0
 3735 0056 FB88     	 ldrh r3,[r7,#6]
 3736 0058 03F48063 	 and r3,r3,#1024
 3737 005c 002B     	 cmp r3,#0
 3738 005e 09D0     	 beq .L96
 835:../SSC/Src/ecatappl.c ****                 {
 836:../SSC/Src/ecatappl.c ****                     /* set the flag for the state machine behavior */
 837:../SSC/Src/ecatappl.c ****                     bEcatFirstOutputsReceived = TRUE;
 3739              	 .loc 3 837 0
 3740 0060 1E4B     	 ldr r3,.L100+8
 3741 0062 0122     	 movs r2,#1
 3742 0064 1A70     	 strb r2,[r3]
 838:../SSC/Src/ecatappl.c ****                     if ( bEcatOutputUpdateRunning )
 3743              	 .loc 3 838 0
 3744 0066 1F4B     	 ldr r3,.L100+16
 3745 0068 1B78     	 ldrb r3,[r3]
 3746 006a 002B     	 cmp r3,#0
 3747 006c 0ED0     	 beq .L95
 839:../SSC/Src/ecatappl.c ****                     {
 840:../SSC/Src/ecatappl.c ****                         /* update the outputs */
 841:../SSC/Src/ecatappl.c ****                         PDO_OutputMapping();
 3748              	 .loc 3 841 0
 3749 006e FFF7FEFF 	 bl PDO_OutputMapping
 3750 0072 0BE0     	 b .L95
 3751              	.L96:
 842:../SSC/Src/ecatappl.c ****                     }
 843:../SSC/Src/ecatappl.c ****                 }
 844:../SSC/Src/ecatappl.c ****                 else if ( nPdOutputSize == 0 )
 3752              	 .loc 3 844 0
 3753 0074 1C4B     	 ldr r3,.L100+20
 3754 0076 1B88     	 ldrh r3,[r3]
 3755 0078 002B     	 cmp r3,#0
 3756 007a 07D1     	 bne .L95
 845:../SSC/Src/ecatappl.c ****                 {
 846:../SSC/Src/ecatappl.c ****                     /* if no outputs are transmitted, the watchdog must be reset, when the inputs w
 847:../SSC/Src/ecatappl.c ****                     if ( ALEvent & PROCESS_INPUT_EVENT )
 3757              	 .loc 3 847 0
 3758 007c FB88     	 ldrh r3,[r7,#6]
 3759 007e 03F40063 	 and r3,r3,#2048
 3760 0082 002B     	 cmp r3,#0
 3761 0084 02D0     	 beq .L95
 848:../SSC/Src/ecatappl.c ****                     {
 849:../SSC/Src/ecatappl.c ****                         /* Outputs were updated, set flag for watchdog monitoring */
 850:../SSC/Src/ecatappl.c ****                         bEcatFirstOutputsReceived = TRUE;
 3762              	 .loc 3 850 0
 3763 0086 154B     	 ldr r3,.L100+8
 3764 0088 0122     	 movs r2,#1
 3765 008a 1A70     	 strb r2,[r3]
 3766              	.L95:
 3767              	.LBE7:
 851:../SSC/Src/ecatappl.c ****                     }
 852:../SSC/Src/ecatappl.c ****                 }
 853:../SSC/Src/ecatappl.c ****             }
 854:../SSC/Src/ecatappl.c **** 
 855:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT3*/
 856:../SSC/Src/ecatappl.c ****             DISABLE_ESC_INT();
 3768              	 .loc 3 856 0
 3769 008c FFF7FEFF 	 bl DISABLE_ESC_INT
 857:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT3*/
 858:../SSC/Src/ecatappl.c ****              ECAT_Application();
 3770              	 .loc 3 858 0
 3771 0090 FFF7FEFF 	 bl ECAT_Application
 859:../SSC/Src/ecatappl.c **** 
 860:../SSC/Src/ecatappl.c ****             if ( bEcatInputUpdateRunning )
 3772              	 .loc 3 860 0
 3773 0094 154B     	 ldr r3,.L100+24
 3774 0096 1B78     	 ldrb r3,[r3]
 3775 0098 002B     	 cmp r3,#0
 3776 009a 01D0     	 beq .L98
 861:../SSC/Src/ecatappl.c ****             {
 862:../SSC/Src/ecatappl.c ****                 /* EtherCAT slave is at least in SAFE-OPERATIONAL, update inputs */
 863:../SSC/Src/ecatappl.c ****                 PDO_InputMapping();
 3777              	 .loc 3 863 0
 3778 009c FFF7FEFF 	 bl PDO_InputMapping
 3779              	.L98:
 864:../SSC/Src/ecatappl.c ****             }
 865:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT3*/
 866:../SSC/Src/ecatappl.c ****             ENABLE_ESC_INT();
 3780              	 .loc 3 866 0
 3781 00a0 FFF7FEFF 	 bl ENABLE_ESC_INT
 3782              	.L94:
 867:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT3*/
 868:../SSC/Src/ecatappl.c ****         }
 869:../SSC/Src/ecatappl.c **** 
 870:../SSC/Src/ecatappl.c **** 
 871:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) COE4*/
 872:../SSC/Src/ecatappl.c ****         if (u32CheckForDcOverrunCnt >= CHECK_DC_OVERRUN_IN_MS)
 3783              	 .loc 3 872 0
 3784 00a4 124B     	 ldr r3,.L100+28
 3785 00a6 1B68     	 ldr r3,[r3]
 3786 00a8 B3F57A6F 	 cmp r3,#4000
 3787 00ac 01D3     	 bcc .L99
 873:../SSC/Src/ecatappl.c ****         {
 874:../SSC/Src/ecatappl.c ****             COE_SyncTimeStamp();
 3788              	 .loc 3 874 0
 3789 00ae FFF7FEFF 	 bl COE_SyncTimeStamp
 3790              	.L99:
 875:../SSC/Src/ecatappl.c ****         }
 876:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) COE4*/
 877:../SSC/Src/ecatappl.c **** 
 878:../SSC/Src/ecatappl.c ****         /* call EtherCAT functions */
 879:../SSC/Src/ecatappl.c ****         ECAT_Main();
 3791              	 .loc 3 879 0
 3792 00b2 FFF7FEFF 	 bl ECAT_Main
 880:../SSC/Src/ecatappl.c **** 
 881:../SSC/Src/ecatappl.c ****         /* call lower prior application part */
 882:../SSC/Src/ecatappl.c ****        COE_Main();
 3793              	 .loc 3 882 0
 3794 00b6 FFF7FEFF 	 bl COE_Main
 883:../SSC/Src/ecatappl.c ****        CheckIfEcatError();
 3795              	 .loc 3 883 0
 3796 00ba FFF7FEFF 	 bl CheckIfEcatError
 884:../SSC/Src/ecatappl.c **** 
 885:../SSC/Src/ecatappl.c **** 
 886:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) APPL1*/
 887:../SSC/Src/ecatappl.c ****     if (pAPPL_MainLoop != NULL)
 3797              	 .loc 3 887 0
 3798 00be 0D4B     	 ldr r3,.L100+32
 3799 00c0 1B68     	 ldr r3,[r3]
 3800 00c2 002B     	 cmp r3,#0
 3801 00c4 02D0     	 beq .L90
 888:../SSC/Src/ecatappl.c ****     {
 889:../SSC/Src/ecatappl.c ****         pAPPL_MainLoop();
 3802              	 .loc 3 889 0
 3803 00c6 0B4B     	 ldr r3,.L100+32
 3804 00c8 1B68     	 ldr r3,[r3]
 3805 00ca 9847     	 blx r3
 3806              	.L90:
 890:../SSC/Src/ecatappl.c ****     }
 891:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) APPL1*/
 892:../SSC/Src/ecatappl.c **** }
 3807              	 .loc 3 892 0
 3808 00cc 0837     	 adds r7,r7,#8
 3809              	.LCFI68:
 3810              	 .cfi_def_cfa_offset 8
 3811 00ce BD46     	 mov sp,r7
 3812              	.LCFI69:
 3813              	 .cfi_def_cfa_register 13
 3814              	 
 3815 00d0 80BD     	 pop {r7,pc}
 3816              	.L101:
 3817 00d2 00BF     	 .align 2
 3818              	.L100:
 3819 00d4 00000000 	 .word bInitFinished
 3820 00d8 00000000 	 .word bEscIntEnabled
 3821 00dc 00000000 	 .word bEcatFirstOutputsReceived
 3822 00e0 00000000 	 .word bDcSyncActive
 3823 00e4 00000000 	 .word bEcatOutputUpdateRunning
 3824 00e8 00000000 	 .word nPdOutputSize
 3825 00ec 00000000 	 .word bEcatInputUpdateRunning
 3826 00f0 00000000 	 .word u32CheckForDcOverrunCnt
 3827 00f4 00000000 	 .word pAPPL_MainLoop
 3828              	 .cfi_endproc
 3829              	.LFE188:
 3831              	 .section .text.ECAT_Application,"ax",%progbits
 3832              	 .align 2
 3833              	 .global ECAT_Application
 3834              	 .thumb
 3835              	 .thumb_func
 3837              	ECAT_Application:
 3838              	.LFB189:
 893:../SSC/Src/ecatappl.c **** 
 894:../SSC/Src/ecatappl.c **** /*The main function was moved to the application files.*/
 895:../SSC/Src/ecatappl.c **** /////////////////////////////////////////////////////////////////////////////////////////
 896:../SSC/Src/ecatappl.c **** /**
 897:../SSC/Src/ecatappl.c ****  \brief    ECAT_Application (prev. SSC versions "COE_Application")
 898:../SSC/Src/ecatappl.c ****  this function calculates and the physical process signals and triggers the input mapping
 899:../SSC/Src/ecatappl.c **** *////////////////////////////////////////////////////////////////////////////////////////
 900:../SSC/Src/ecatappl.c **** void ECAT_Application(void)
 901:../SSC/Src/ecatappl.c **** {
 3839              	 .loc 3 901 0
 3840              	 .cfi_startproc
 3841              	 
 3842              	 
 3843 0000 80B5     	 push {r7,lr}
 3844              	.LCFI70:
 3845              	 .cfi_def_cfa_offset 8
 3846              	 .cfi_offset 7,-8
 3847              	 .cfi_offset 14,-4
 3848 0002 00AF     	 add r7,sp,#0
 3849              	.LCFI71:
 3850              	 .cfi_def_cfa_register 7
 902:../SSC/Src/ecatappl.c **** #if (MIN_PD_CYCLE_TIME == 0)
 903:../SSC/Src/ecatappl.c ****     /*ECATCHANGE_START(V5.12) ECAT1*/
 904:../SSC/Src/ecatappl.c ****     UINT32 u32TimeValue = 0;
 905:../SSC/Src/ecatappl.c **** 
 906:../SSC/Src/ecatappl.c ****     if (MEASUREMENT_ACTIVE)
 907:../SSC/Src/ecatappl.c ****     {
 908:../SSC/Src/ecatappl.c ****         u32TimeValue = GetSystemTimeDelay(0);
 909:../SSC/Src/ecatappl.c **** 
 910:../SSC/Src/ecatappl.c ****         if (nPdOutputSize == 0)
 911:../SSC/Src/ecatappl.c ****         {
 912:../SSC/Src/ecatappl.c ****             /* in case of an input only device the cycle starts with an ECAT_Application call*/
 913:../SSC/Src/ecatappl.c **** 
 914:../SSC/Src/ecatappl.c ****             u32MinCycleTimeStartValue = u32TimeValue;
 915:../SSC/Src/ecatappl.c ****             bMinCycleTimeMeasurementStarted = TRUE;
 916:../SSC/Src/ecatappl.c ****             u32MinCycleTimeValue = 0;
 917:../SSC/Src/ecatappl.c ****         }
 918:../SSC/Src/ecatappl.c ****     } /* measurement started*/
 919:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT1*/
 920:../SSC/Src/ecatappl.c **** #endif /* (MIN_PD_CYCLE_TIME == 0)*/
 921:../SSC/Src/ecatappl.c **** 
 922:../SSC/Src/ecatappl.c ****     if (MEASUREMENT_ACTIVE)
 3851              	 .loc 3 922 0
 3852 0004 0A4B     	 ldr r3,.L105
 3853 0006 9B8B     	 ldrh r3,[r3,#28]
 3854 0008 03F00103 	 and r3,r3,#1
 3855 000c 002B     	 cmp r3,#0
 3856 000e 05D1     	 bne .L103
 3857              	 .loc 3 922 0 is_stmt 0 discriminator 1
 3858 0010 084B     	 ldr r3,.L105+4
 3859 0012 9B8B     	 ldrh r3,[r3,#28]
 3860 0014 03F00103 	 and r3,r3,#1
 3861 0018 002B     	 cmp r3,#0
 3862 001a 05D0     	 beq .L104
 3863              	.L103:
 923:../SSC/Src/ecatappl.c ****     {
 924:../SSC/Src/ecatappl.c ****         if (nPdOutputSize == 0)
 3864              	 .loc 3 924 0 is_stmt 1
 3865 001c 064B     	 ldr r3,.L105+8
 3866 001e 1B88     	 ldrh r3,[r3]
 3867 0020 002B     	 cmp r3,#0
 3868 0022 01D1     	 bne .L104
 925:../SSC/Src/ecatappl.c ****         {
 926:../SSC/Src/ecatappl.c ****             /* in case of an input only device the cycle starts with an ECAT_Application call*/
 927:../SSC/Src/ecatappl.c ****             HandleCycleTimeMeasurement();
 3869              	 .loc 3 927 0
 3870 0024 FFF7FEFF 	 bl HandleCycleTimeMeasurement
 3871              	.L104:
 928:../SSC/Src/ecatappl.c ****         }
 929:../SSC/Src/ecatappl.c ****     }
 930:../SSC/Src/ecatappl.c **** 
 931:../SSC/Src/ecatappl.c ****     {
 932:../SSC/Src/ecatappl.c ****         APPL_Application();
 3872              	 .loc 3 932 0
 3873 0028 FFF7FEFF 	 bl APPL_Application
 933:../SSC/Src/ecatappl.c ****     }
 934:../SSC/Src/ecatappl.c **** /* PDO Input mapping is called from the specific trigger ISR */
 935:../SSC/Src/ecatappl.c **** 
 936:../SSC/Src/ecatappl.c **** #if (MIN_PD_CYCLE_TIME == 0)
 937:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT1*/
 938:../SSC/Src/ecatappl.c **** 
 939:../SSC/Src/ecatappl.c ****     if (MEASUREMENT_ACTIVE)
 940:../SSC/Src/ecatappl.c ****     {
 941:../SSC/Src/ecatappl.c ****         u32TimeValue = GetSystemTimeDelay(u32TimeValue);
 942:../SSC/Src/ecatappl.c **** 
 943:../SSC/Src/ecatappl.c **** 
 944:../SSC/Src/ecatappl.c ****         /* handle the min cycle time measurement only if a new cycle was started (prevent measureme
 945:../SSC/Src/ecatappl.c ****         if (bMinCycleTimeMeasurementStarted == TRUE)
 946:../SSC/Src/ecatappl.c ****         {
 947:../SSC/Src/ecatappl.c **** 
 948:../SSC/Src/ecatappl.c ****             /* add application execution time to the min cycle time*/
 949:../SSC/Src/ecatappl.c ****             u32MinCycleTimeValue = u32MinCycleTimeValue + u32TimeValue;
 950:../SSC/Src/ecatappl.c **** 
 951:../SSC/Src/ecatappl.c ****             if (nPdInputSize == 0)
 952:../SSC/Src/ecatappl.c ****             {
 953:../SSC/Src/ecatappl.c ****                 /* In case of an output only device the cycle ends with an ECAT_Application call*/
 954:../SSC/Src/ecatappl.c **** 
 955:../SSC/Src/ecatappl.c **** 
 956:../SSC/Src/ecatappl.c ****                 if (sSyncManOutPar.u32MinCycleTime < u32MinCycleTimeValue)
 957:../SSC/Src/ecatappl.c ****                 {
 958:../SSC/Src/ecatappl.c ****                         sSyncManOutPar.u32MinCycleTime = u32MinCycleTimeValue;
 959:../SSC/Src/ecatappl.c ****                 }
 960:../SSC/Src/ecatappl.c **** 
 961:../SSC/Src/ecatappl.c ****                 if (sSyncManInPar.u32MinCycleTime < u32MinCycleTimeValue)
 962:../SSC/Src/ecatappl.c ****                 {
 963:../SSC/Src/ecatappl.c ****                         sSyncManInPar.u32MinCycleTime = u32MinCycleTimeValue;
 964:../SSC/Src/ecatappl.c ****                 }
 965:../SSC/Src/ecatappl.c **** 
 966:../SSC/Src/ecatappl.c ****                 bMinCycleTimeMeasurementStarted = FALSE;
 967:../SSC/Src/ecatappl.c ****             }
 968:../SSC/Src/ecatappl.c ****         }
 969:../SSC/Src/ecatappl.c **** 
 970:../SSC/Src/ecatappl.c ****     }/* measurement started*/
 971:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT1*/
 972:../SSC/Src/ecatappl.c **** #endif /* #if MIN_PD_CYCLE_TIME == 0 */
 973:../SSC/Src/ecatappl.c **** }
 3874              	 .loc 3 973 0
 3875 002c 80BD     	 pop {r7,pc}
 3876              	.L106:
 3877 002e 00BF     	 .align 2
 3878              	.L105:
 3879 0030 00000000 	 .word sSyncManOutPar
 3880 0034 00000000 	 .word sSyncManInPar
 3881 0038 00000000 	 .word nPdOutputSize
 3882              	 .cfi_endproc
 3883              	.LFE189:
 3885              	 .section .text.EEPROM_CommandHandler,"ax",%progbits
 3886              	 .align 2
 3887              	 .global EEPROM_CommandHandler
 3888              	 .thumb
 3889              	 .thumb_func
 3891              	EEPROM_CommandHandler:
 3892              	.LFB190:
 974:../SSC/Src/ecatappl.c **** 
 975:../SSC/Src/ecatappl.c **** 
 976:../SSC/Src/ecatappl.c **** void EEPROM_CommandHandler(void)
 977:../SSC/Src/ecatappl.c **** {
 3893              	 .loc 3 977 0
 3894              	 .cfi_startproc
 3895              	 
 3896              	 
 3897 0000 80B5     	 push {r7,lr}
 3898              	.LCFI72:
 3899              	 .cfi_def_cfa_offset 8
 3900              	 .cfi_offset 7,-8
 3901              	 .cfi_offset 14,-4
 3902 0002 88B0     	 sub sp,sp,#32
 3903              	.LCFI73:
 3904              	 .cfi_def_cfa_offset 40
 3905 0004 00AF     	 add r7,sp,#0
 3906              	.LCFI74:
 3907              	 .cfi_def_cfa_register 7
 978:../SSC/Src/ecatappl.c ****    UINT16 Result = 0;
 3908              	 .loc 3 978 0
 3909 0006 0023     	 movs r3,#0
 3910 0008 FB82     	 strh r3,[r7,#22]
 979:../SSC/Src/ecatappl.c ****     UINT16 EEPROMReg = 0; //Regvalue 0x502 - 0x5003
 3911              	 .loc 3 979 0
 3912 000a 0023     	 movs r3,#0
 3913 000c FB83     	 strh r3,[r7,#30]
 980:../SSC/Src/ecatappl.c **** 
 981:../SSC/Src/ecatappl.c ****     HW_EscReadWord(EEPROMReg,ESC_EEPROM_CONTROL_OFFSET);
 3914              	 .loc 3 981 0
 3915 000e 8E4B     	 ldr r3,.L138
 3916 0010 1B88     	 ldrh r3,[r3]
 3917 0012 FB83     	 strh r3,[r7,#30]
 982:../SSC/Src/ecatappl.c ****     EEPROMReg = SWAPWORD(EEPROMReg);
 983:../SSC/Src/ecatappl.c **** 
 984:../SSC/Src/ecatappl.c ****     if (EEPROMReg & ESC_EEPROM_BUSY_MASK) 
 3918              	 .loc 3 984 0
 3919 0014 FB8B     	 ldrh r3,[r7,#30]
 3920 0016 1BB2     	 sxth r3,r3
 3921 0018 002B     	 cmp r3,#0
 3922 001a 80F21281 	 bge .L107
 3923              	.LBB8:
 985:../SSC/Src/ecatappl.c ****     {
 986:../SSC/Src/ecatappl.c ****         UINT32 cmd = EEPROMReg  & ESC_EEPROM_CMD_MASK;
 3924              	 .loc 3 986 0
 3925 001e FB8B     	 ldrh r3,[r7,#30]
 3926 0020 03F4E063 	 and r3,r3,#1792
 3927 0024 3B61     	 str r3,[r7,#16]
 987:../SSC/Src/ecatappl.c ****         UINT32 addr;
 988:../SSC/Src/ecatappl.c ****         
 989:../SSC/Src/ecatappl.c ****         
 990:../SSC/Src/ecatappl.c ****         HW_EscReadDWord(addr,ESC_EEPROM_ADDRESS_OFFSET);
 3928              	 .loc 3 990 0
 3929 0026 894B     	 ldr r3,.L138+4
 3930 0028 1B68     	 ldr r3,[r3]
 3931 002a BB61     	 str r3,[r7,#24]
 991:../SSC/Src/ecatappl.c ****         addr = SWAPDWORD(addr);
 992:../SSC/Src/ecatappl.c **** 
 993:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) EEPROM1*/
 994:../SSC/Src/ecatappl.c ****         //Clear error bits (except the eeprom crc error)
 995:../SSC/Src/ecatappl.c ****         EEPROMReg &= ~(ESC_EEPROM_ERROR_MASK & ~ESC_EEPROM_ERROR_CRC);
 3932              	 .loc 3 995 0
 3933 002c FB8B     	 ldrh r3,[r7,#30]
 3934 002e 23F4E043 	 bic r3,r3,#28672
 3935 0032 FB83     	 strh r3,[r7,#30]
 996:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) EEPROM1*/
 997:../SSC/Src/ecatappl.c ****         switch (cmd) {
 3936              	 .loc 3 997 0
 3937 0034 3B69     	 ldr r3,[r7,#16]
 3938 0036 B3F5807F 	 cmp r3,#256
 3939 003a 0DD0     	 beq .L110
 3940 003c B3F5807F 	 cmp r3,#256
 3941 0040 03D8     	 bhi .L111
 3942 0042 002B     	 cmp r3,#0
 3943 0044 00F0F480 	 beq .L137
 3944 0048 EDE0     	 b .L109
 3945              	.L111:
 3946 004a B3F5007F 	 cmp r3,#512
 3947 004e 33D0     	 beq .L113
 3948 0050 B3F5806F 	 cmp r3,#1024
 3949 0054 61D0     	 beq .L114
 3950 0056 E6E0     	 b .L109
 3951              	.L110:
 998:../SSC/Src/ecatappl.c ****         case 0x00: //IDLE
 999:../SSC/Src/ecatappl.c ****             break;
1000:../SSC/Src/ecatappl.c ****         case ESC_EEPROM_CMD_READ_MASK:
1001:../SSC/Src/ecatappl.c ****         {
1002:../SSC/Src/ecatappl.c ****            if (pAPPL_EEPROM_Read != NULL)
 3952              	 .loc 3 1002 0
 3953 0058 7D4B     	 ldr r3,.L138+8
 3954 005a 1B68     	 ldr r3,[r3]
 3955 005c 002B     	 cmp r3,#0
 3956 005e 0DD0     	 beq .L116
1003:../SSC/Src/ecatappl.c ****            {
1004:../SSC/Src/ecatappl.c ****               Result = pAPPL_EEPROM_Read(addr);
 3957              	 .loc 3 1004 0
 3958 0060 7B4B     	 ldr r3,.L138+8
 3959 0062 1B68     	 ldr r3,[r3]
 3960 0064 B869     	 ldr r0,[r7,#24]
 3961 0066 9847     	 blx r3
 3962 0068 0346     	 mov r3,r0
 3963 006a FB82     	 strh r3,[r7,#22]
1005:../SSC/Src/ecatappl.c ****               if (Result > 0)
 3964              	 .loc 3 1005 0
 3965 006c FB8A     	 ldrh r3,[r7,#22]
 3966 006e 002B     	 cmp r3,#0
 3967 0070 21D0     	 beq .L118
1006:../SSC/Src/ecatappl.c ****               {
1007:../SSC/Src/ecatappl.c ****                  //Set Error
1008:../SSC/Src/ecatappl.c ****                  EEPROMReg |= ESC_EEPROM_ERROR_CMD_ACK;
 3968              	 .loc 3 1008 0
 3969 0072 FB8B     	 ldrh r3,[r7,#30]
 3970 0074 43F40053 	 orr r3,r3,#8192
 3971 0078 FB83     	 strh r3,[r7,#30]
1009:../SSC/Src/ecatappl.c ****               }
1010:../SSC/Src/ecatappl.c ****            }
1011:../SSC/Src/ecatappl.c ****            else
1012:../SSC/Src/ecatappl.c ****            {
1013:../SSC/Src/ecatappl.c **** 
1014:../SSC/Src/ecatappl.c ****               if (addr <= ESC_EEPROM_SIZE && (pEEPROM != NULL))
1015:../SSC/Src/ecatappl.c ****               {
1016:../SSC/Src/ecatappl.c ****                  UINT16 *pData = (UINT16 *)pEEPROM;
1017:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) EEPROM1*/
1018:../SSC/Src/ecatappl.c ****                  HW_EscWrite((MEM_ADDR *)&pData[(addr)], ESC_EEPROM_DATA_OFFSET, EepromReadSize);
1019:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) EEPROM1*/
1020:../SSC/Src/ecatappl.c ****               }
1021:../SSC/Src/ecatappl.c ****               else
1022:../SSC/Src/ecatappl.c ****               {
1023:../SSC/Src/ecatappl.c ****                  //Set Error
1024:../SSC/Src/ecatappl.c ****                  EEPROMReg |= ESC_EEPROM_ERROR_CMD_ACK;
1025:../SSC/Src/ecatappl.c ****               }
1026:../SSC/Src/ecatappl.c ****            }
1027:../SSC/Src/ecatappl.c ****         }
1028:../SSC/Src/ecatappl.c ****         break;
 3972              	 .loc 3 1028 0
 3973 007a DAE0     	 b .L115
 3974              	.L116:
1014:../SSC/Src/ecatappl.c ****               {
 3975              	 .loc 3 1014 0
 3976 007c BB69     	 ldr r3,[r7,#24]
 3977 007e B3F5006F 	 cmp r3,#2048
 3978 0082 13D8     	 bhi .L119
1014:../SSC/Src/ecatappl.c ****               {
 3979              	 .loc 3 1014 0 is_stmt 0 discriminator 1
 3980 0084 734B     	 ldr r3,.L138+12
 3981 0086 1B68     	 ldr r3,[r3]
 3982 0088 002B     	 cmp r3,#0
 3983 008a 0FD0     	 beq .L119
 3984              	.LBB9:
1016:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) EEPROM1*/
 3985              	 .loc 3 1016 0 is_stmt 1
 3986 008c 714B     	 ldr r3,.L138+12
 3987 008e 1B68     	 ldr r3,[r3]
 3988 0090 FB60     	 str r3,[r7,#12]
1018:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) EEPROM1*/
 3989              	 .loc 3 1018 0
 3990 0092 BB69     	 ldr r3,[r7,#24]
 3991 0094 5B00     	 lsls r3,r3,#1
 3992 0096 FA68     	 ldr r2,[r7,#12]
 3993 0098 1A44     	 add r2,r2,r3
 3994 009a 6F4B     	 ldr r3,.L138+16
 3995 009c 1B88     	 ldrh r3,[r3]
 3996 009e 1046     	 mov r0,r2
 3997 00a0 4FF4A161 	 mov r1,#1288
 3998 00a4 1A46     	 mov r2,r3
 3999 00a6 FFF7FEFF 	 bl HW_EscWrite
 4000              	.LBE9:
1015:../SSC/Src/ecatappl.c ****                  UINT16 *pData = (UINT16 *)pEEPROM;
 4001              	 .loc 3 1015 0
 4002 00aa 04E0     	 b .L118
 4003              	.L119:
1024:../SSC/Src/ecatappl.c ****               }
 4004              	 .loc 3 1024 0
 4005 00ac FB8B     	 ldrh r3,[r7,#30]
 4006 00ae 43F40053 	 orr r3,r3,#8192
 4007 00b2 FB83     	 strh r3,[r7,#30]
 4008              	 .loc 3 1028 0
 4009 00b4 BDE0     	 b .L115
 4010              	.L118:
 4011              	 .loc 3 1028 0 is_stmt 0 discriminator 1
 4012 00b6 BCE0     	 b .L115
 4013              	.L113:
1029:../SSC/Src/ecatappl.c ****         case ESC_EEPROM_CMD_WRITE_MASK:
1030:../SSC/Src/ecatappl.c ****             {
1031:../SSC/Src/ecatappl.c ****                  if (pAPPL_EEPROM_Write != NULL)
 4014              	 .loc 3 1031 0 is_stmt 1
 4015 00b8 684B     	 ldr r3,.L138+20
 4016 00ba 1B68     	 ldr r3,[r3]
 4017 00bc 002B     	 cmp r3,#0
 4018 00be 0DD0     	 beq .L120
1032:../SSC/Src/ecatappl.c ****                  {
1033:../SSC/Src/ecatappl.c ****                     Result = pAPPL_EEPROM_Write(addr);
 4019              	 .loc 3 1033 0
 4020 00c0 664B     	 ldr r3,.L138+20
 4021 00c2 1B68     	 ldr r3,[r3]
 4022 00c4 B869     	 ldr r0,[r7,#24]
 4023 00c6 9847     	 blx r3
 4024 00c8 0346     	 mov r3,r0
 4025 00ca FB82     	 strh r3,[r7,#22]
1034:../SSC/Src/ecatappl.c ****                     if (Result > 0)
 4026              	 .loc 3 1034 0
 4027 00cc FB8A     	 ldrh r3,[r7,#22]
 4028 00ce 002B     	 cmp r3,#0
 4029 00d0 1ED0     	 beq .L122
1035:../SSC/Src/ecatappl.c ****                     {
1036:../SSC/Src/ecatappl.c ****                        //Set Error
1037:../SSC/Src/ecatappl.c ****                        EEPROMReg |= ESC_EEPROM_ERROR_CMD_ACK;
 4030              	 .loc 3 1037 0
 4031 00d2 FB8B     	 ldrh r3,[r7,#30]
 4032 00d4 43F40053 	 orr r3,r3,#8192
 4033 00d8 FB83     	 strh r3,[r7,#30]
 4034 00da 19E0     	 b .L122
 4035              	.L120:
1038:../SSC/Src/ecatappl.c ****                     }
1039:../SSC/Src/ecatappl.c ****                  }
1040:../SSC/Src/ecatappl.c ****                  else
1041:../SSC/Src/ecatappl.c ****                  {
1042:../SSC/Src/ecatappl.c **** 
1043:../SSC/Src/ecatappl.c ****                     if (addr <= ESC_EEPROM_SIZE && (pEEPROM != NULL))
 4036              	 .loc 3 1043 0
 4037 00dc BB69     	 ldr r3,[r7,#24]
 4038 00de B3F5006F 	 cmp r3,#2048
 4039 00e2 11D8     	 bhi .L123
 4040              	 .loc 3 1043 0 is_stmt 0 discriminator 1
 4041 00e4 5B4B     	 ldr r3,.L138+12
 4042 00e6 1B68     	 ldr r3,[r3]
 4043 00e8 002B     	 cmp r3,#0
 4044 00ea 0DD0     	 beq .L123
 4045              	.LBB10:
1044:../SSC/Src/ecatappl.c ****                     {
1045:../SSC/Src/ecatappl.c ****                        UINT16 *pData = (UINT16 *)pEEPROM;
 4046              	 .loc 3 1045 0 is_stmt 1
 4047 00ec 594B     	 ldr r3,.L138+12
 4048 00ee 1B68     	 ldr r3,[r3]
 4049 00f0 BB60     	 str r3,[r7,#8]
1046:../SSC/Src/ecatappl.c ****                        HW_EscRead((MEM_ADDR *)&pData[(addr)], ESC_EEPROM_DATA_OFFSET, EEPROM_WRITE_
 4050              	 .loc 3 1046 0
 4051 00f2 BB69     	 ldr r3,[r7,#24]
 4052 00f4 5B00     	 lsls r3,r3,#1
 4053 00f6 BA68     	 ldr r2,[r7,#8]
 4054 00f8 1344     	 add r3,r3,r2
 4055 00fa 1846     	 mov r0,r3
 4056 00fc 4FF4A161 	 mov r1,#1288
 4057 0100 0222     	 movs r2,#2
 4058 0102 FFF7FEFF 	 bl HW_EscRead
 4059              	.LBE10:
1044:../SSC/Src/ecatappl.c ****                     {
 4060              	 .loc 3 1044 0
 4061 0106 03E0     	 b .L122
 4062              	.L123:
1047:../SSC/Src/ecatappl.c ****                     }
1048:../SSC/Src/ecatappl.c ****                     else
1049:../SSC/Src/ecatappl.c ****                     {
1050:../SSC/Src/ecatappl.c ****                        //Set Error
1051:../SSC/Src/ecatappl.c ****                        EEPROMReg |= ESC_EEPROM_ERROR_CMD_ACK;
 4063              	 .loc 3 1051 0
 4064 0108 FB8B     	 ldrh r3,[r7,#30]
 4065 010a 43F40053 	 orr r3,r3,#8192
 4066 010e FB83     	 strh r3,[r7,#30]
 4067              	.L122:
1052:../SSC/Src/ecatappl.c ****                     }
1053:../SSC/Src/ecatappl.c ****                  }
1054:../SSC/Src/ecatappl.c **** 
1055:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) EEPROM3*/
1056:../SSC/Src/ecatappl.c ****                  /* init the Store EEPROM timeout value (will be reset after the timer has expired)
1057:../SSC/Src/ecatappl.c ****                  u16EepromStoreTimeoutValue = 1000;
 4068              	 .loc 3 1057 0
 4069 0110 534B     	 ldr r3,.L138+24
 4070 0112 4FF47A72 	 mov r2,#1000
 4071 0116 1A80     	 strh r2,[r3]
1058:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) EEPROM3*/
1059:../SSC/Src/ecatappl.c **** 
1060:../SSC/Src/ecatappl.c ****             }
1061:../SSC/Src/ecatappl.c ****             break;
 4072              	 .loc 3 1061 0
 4073 0118 8BE0     	 b .L115
 4074              	.L114:
1062:../SSC/Src/ecatappl.c ****         case ESC_EEPROM_CMD_RELOAD_MASK:
1063:../SSC/Src/ecatappl.c **** /* ECATCHANGE_START(V5.12) EEPROM2*/
1064:../SSC/Src/ecatappl.c ****             if (EepromReadSize == 8)
 4075              	 .loc 3 1064 0
 4076 011a 4F4B     	 ldr r3,.L138+16
 4077 011c 1B88     	 ldrh r3,[r3]
 4078 011e 082B     	 cmp r3,#8
 4079 0120 50D1     	 bne .L124
 4080              	.L130:
1065:../SSC/Src/ecatappl.c ****             {
1066:../SSC/Src/ecatappl.c ****                 /* "full" EEPROM emulation ( 8Bytes EEPROM data) */
1067:../SSC/Src/ecatappl.c ****                 do
1068:../SSC/Src/ecatappl.c ****                 {
1069:../SSC/Src/ecatappl.c ****                     if (addr > ESC_EEPROM_SIZE)
 4081              	 .loc 3 1069 0
 4082 0122 BB69     	 ldr r3,[r7,#24]
 4083 0124 B3F5006F 	 cmp r3,#2048
 4084 0128 04D9     	 bls .L125
1070:../SSC/Src/ecatappl.c ****                     {
1071:../SSC/Src/ecatappl.c ****                         //Set Error
1072:../SSC/Src/ecatappl.c ****                         EEPROMReg |= ESC_EEPROM_ERROR_CMD_ACK;
 4085              	 .loc 3 1072 0
 4086 012a FB8B     	 ldrh r3,[r7,#30]
 4087 012c 43F40053 	 orr r3,r3,#8192
 4088 0130 FB83     	 strh r3,[r7,#30]
1073:../SSC/Src/ecatappl.c ****                         break;
 4089              	 .loc 3 1073 0
 4090 0132 46E0     	 b .L126
 4091              	.L125:
 4092              	.LBB11:
1074:../SSC/Src/ecatappl.c ****                     }
1075:../SSC/Src/ecatappl.c ****                     else
1076:../SSC/Src/ecatappl.c ****                     {
1077:../SSC/Src/ecatappl.c ****                         if (pAPPL_EEPROM_Read != NULL)
 4093              	 .loc 3 1077 0
 4094 0134 464B     	 ldr r3,.L138+8
 4095 0136 1B68     	 ldr r3,[r3]
 4096 0138 002B     	 cmp r3,#0
 4097 013a 0DD0     	 beq .L127
1078:../SSC/Src/ecatappl.c ****                         {
1079:../SSC/Src/ecatappl.c ****                             Result = pAPPL_EEPROM_Read(addr);
 4098              	 .loc 3 1079 0
 4099 013c 444B     	 ldr r3,.L138+8
 4100 013e 1B68     	 ldr r3,[r3]
 4101 0140 B869     	 ldr r0,[r7,#24]
 4102 0142 9847     	 blx r3
 4103 0144 0346     	 mov r3,r0
 4104 0146 FB82     	 strh r3,[r7,#22]
1080:../SSC/Src/ecatappl.c ****                             if (Result > 0)
 4105              	 .loc 3 1080 0
 4106 0148 FB8A     	 ldrh r3,[r7,#22]
 4107 014a 002B     	 cmp r3,#0
 4108 014c 21D0     	 beq .L128
1081:../SSC/Src/ecatappl.c ****                             {
1082:../SSC/Src/ecatappl.c ****                                 //Set Error
1083:../SSC/Src/ecatappl.c ****                                 EEPROMReg |= ESC_EEPROM_ERROR_CMD_ACK;
 4109              	 .loc 3 1083 0
 4110 014e FB8B     	 ldrh r3,[r7,#30]
 4111 0150 43F40053 	 orr r3,r3,#8192
 4112 0154 FB83     	 strh r3,[r7,#30]
1084:../SSC/Src/ecatappl.c ****                                 break;
 4113              	 .loc 3 1084 0
 4114 0156 34E0     	 b .L126
 4115              	.L127:
1085:../SSC/Src/ecatappl.c ****                             }
1086:../SSC/Src/ecatappl.c ****                         }
1087:../SSC/Src/ecatappl.c ****                         else
1088:../SSC/Src/ecatappl.c ****                         {
1089:../SSC/Src/ecatappl.c ****                             if (addr <= ESC_EEPROM_SIZE && (pEEPROM != NULL))
 4116              	 .loc 3 1089 0
 4117 0158 BB69     	 ldr r3,[r7,#24]
 4118 015a B3F5006F 	 cmp r3,#2048
 4119 015e 13D8     	 bhi .L129
 4120              	 .loc 3 1089 0 is_stmt 0 discriminator 1
 4121 0160 3C4B     	 ldr r3,.L138+12
 4122 0162 1B68     	 ldr r3,[r3]
 4123 0164 002B     	 cmp r3,#0
 4124 0166 0FD0     	 beq .L129
 4125              	.LBB12:
1090:../SSC/Src/ecatappl.c ****                             {
1091:../SSC/Src/ecatappl.c ****                                 UINT16 *pData = (UINT16 *)pEEPROM;
 4126              	 .loc 3 1091 0 is_stmt 1
 4127 0168 3A4B     	 ldr r3,.L138+12
 4128 016a 1B68     	 ldr r3,[r3]
 4129 016c 7B60     	 str r3,[r7,#4]
1092:../SSC/Src/ecatappl.c ****                                 HW_EscWrite((MEM_ADDR *)&pData[(addr)], ESC_EEPROM_DATA_OFFSET, Eep
 4130              	 .loc 3 1092 0
 4131 016e BB69     	 ldr r3,[r7,#24]
 4132 0170 5B00     	 lsls r3,r3,#1
 4133 0172 7A68     	 ldr r2,[r7,#4]
 4134 0174 1A44     	 add r2,r2,r3
 4135 0176 384B     	 ldr r3,.L138+16
 4136 0178 1B88     	 ldrh r3,[r3]
 4137 017a 1046     	 mov r0,r2
 4138 017c 4FF4A161 	 mov r1,#1288
 4139 0180 1A46     	 mov r2,r3
 4140 0182 FFF7FEFF 	 bl HW_EscWrite
 4141              	.LBE12:
1090:../SSC/Src/ecatappl.c ****                             {
 4142              	 .loc 3 1090 0
 4143 0186 04E0     	 b .L128
 4144              	.L129:
1093:../SSC/Src/ecatappl.c ****                             }
1094:../SSC/Src/ecatappl.c ****                             else
1095:../SSC/Src/ecatappl.c ****                             {
1096:../SSC/Src/ecatappl.c ****                                 //Set Error
1097:../SSC/Src/ecatappl.c ****                                 EEPROMReg |= ESC_EEPROM_ERROR_CMD_ACK;
 4145              	 .loc 3 1097 0
 4146 0188 FB8B     	 ldrh r3,[r7,#30]
 4147 018a 43F40053 	 orr r3,r3,#8192
 4148 018e FB83     	 strh r3,[r7,#30]
1098:../SSC/Src/ecatappl.c ****                                 break;
 4149              	 .loc 3 1098 0
 4150 0190 17E0     	 b .L126
 4151              	.L128:
1099:../SSC/Src/ecatappl.c ****                             }
1100:../SSC/Src/ecatappl.c ****                         }
1101:../SSC/Src/ecatappl.c **** 
1102:../SSC/Src/ecatappl.c ****                         //Clear error bits
1103:../SSC/Src/ecatappl.c ****                         EEPROMReg &= ~(ESC_EEPROM_ERROR_MASK);
 4152              	 .loc 3 1103 0
 4153 0192 FB8B     	 ldrh r3,[r7,#30]
 4154 0194 23F4F043 	 bic r3,r3,#30720
 4155 0198 FB83     	 strh r3,[r7,#30]
1104:../SSC/Src/ecatappl.c **** 
1105:../SSC/Src/ecatappl.c ****                         //ack current reload segment
1106:../SSC/Src/ecatappl.c ****                         UINT16 TmpData = SWAPWORD(EEPROMReg);
 4156              	 .loc 3 1106 0
 4157 019a FB8B     	 ldrh r3,[r7,#30]
 4158 019c 7B80     	 strh r3,[r7,#2]
1107:../SSC/Src/ecatappl.c ****                         HW_EscWriteWord(TmpData, ESC_EEPROM_CONTROL_OFFSET);
 4159              	 .loc 3 1107 0
 4160 019e 2A4A     	 ldr r2,.L138
 4161 01a0 7B88     	 ldrh r3,[r7,#2]
 4162 01a2 1380     	 strh r3,[r2]
1108:../SSC/Src/ecatappl.c **** 
1109:../SSC/Src/ecatappl.c ****                         // read EEPROM control (to check if the reload is still pending)
1110:../SSC/Src/ecatappl.c ****                         HW_EscReadWord(EEPROMReg, ESC_EEPROM_CONTROL_OFFSET);
 4163              	 .loc 3 1110 0
 4164 01a4 284B     	 ldr r3,.L138
 4165 01a6 1B88     	 ldrh r3,[r3]
 4166 01a8 FB83     	 strh r3,[r7,#30]
1111:../SSC/Src/ecatappl.c ****                         EEPROMReg = SWAPWORD(EEPROMReg);
1112:../SSC/Src/ecatappl.c ****                         cmd = EEPROMReg  & ESC_EEPROM_CMD_MASK;
 4167              	 .loc 3 1112 0
 4168 01aa FB8B     	 ldrh r3,[r7,#30]
 4169 01ac 03F4E063 	 and r3,r3,#1792
 4170 01b0 3B61     	 str r3,[r7,#16]
1113:../SSC/Src/ecatappl.c **** 
1114:../SSC/Src/ecatappl.c ****                         HW_EscReadDWord(addr, ESC_EEPROM_ADDRESS_OFFSET);
 4171              	 .loc 3 1114 0
 4172 01b2 264B     	 ldr r3,.L138+4
 4173 01b4 1B68     	 ldr r3,[r3]
 4174 01b6 BB61     	 str r3,[r7,#24]
 4175              	.LBE11:
1115:../SSC/Src/ecatappl.c ****                         addr = SWAPDWORD(addr);
1116:../SSC/Src/ecatappl.c ****                     }
1117:../SSC/Src/ecatappl.c **** 
1118:../SSC/Src/ecatappl.c **** 
1119:../SSC/Src/ecatappl.c ****                 } while (cmd == ESC_EEPROM_CMD_RELOAD_MASK);
 4176              	 .loc 3 1119 0
 4177 01b8 3B69     	 ldr r3,[r7,#16]
 4178 01ba B3F5806F 	 cmp r3,#1024
 4179 01be B0D0     	 beq .L130
 4180 01c0 30E0     	 b .L131
 4181              	.L126:
 4182 01c2 2FE0     	 b .L131
 4183              	.L124:
1120:../SSC/Src/ecatappl.c ****             }
1121:../SSC/Src/ecatappl.c ****             else
1122:../SSC/Src/ecatappl.c ****             {
1123:../SSC/Src/ecatappl.c ****                 /* The case is only called if the "small" EEPROM emulation (4 read bytes) is config
1124:../SSC/Src/ecatappl.c ****     /* ECATCHANGE_END(V5.12) EEPROM2*/
1125:../SSC/Src/ecatappl.c **** 
1126:../SSC/Src/ecatappl.c ****     /* ECATCHANGE_START(V5.12) EEPROM2*/
1127:../SSC/Src/ecatappl.c ****                 if (pAPPL_EEPROM_Reload != NULL)
 4184              	 .loc 3 1127 0
 4185 01c4 274B     	 ldr r3,.L138+28
 4186 01c6 1B68     	 ldr r3,[r3]
 4187 01c8 002B     	 cmp r3,#0
 4188 01ca 11D0     	 beq .L132
1128:../SSC/Src/ecatappl.c ****                 {
1129:../SSC/Src/ecatappl.c ****                     Result = pAPPL_EEPROM_Reload();
 4189              	 .loc 3 1129 0
 4190 01cc 254B     	 ldr r3,.L138+28
 4191 01ce 1B68     	 ldr r3,[r3]
 4192 01d0 9847     	 blx r3
 4193 01d2 0346     	 mov r3,r0
 4194 01d4 FB82     	 strh r3,[r7,#22]
1130:../SSC/Src/ecatappl.c ****                     if (Result > 0)
 4195              	 .loc 3 1130 0
 4196 01d6 FB8A     	 ldrh r3,[r7,#22]
 4197 01d8 002B     	 cmp r3,#0
 4198 01da 04D0     	 beq .L133
1131:../SSC/Src/ecatappl.c ****                     {
1132:../SSC/Src/ecatappl.c ****                         //Set Error
1133:../SSC/Src/ecatappl.c ****                         EEPROMReg |= ESC_EEPROM_ERROR_CMD_ACK;
 4199              	 .loc 3 1133 0
 4200 01dc FB8B     	 ldrh r3,[r7,#30]
 4201 01de 43F40053 	 orr r3,r3,#8192
 4202 01e2 FB83     	 strh r3,[r7,#30]
 4203 01e4 1EE0     	 b .L131
 4204              	.L133:
1134:../SSC/Src/ecatappl.c ****                     }
1135:../SSC/Src/ecatappl.c ****                     else
1136:../SSC/Src/ecatappl.c ****                     {
1137:../SSC/Src/ecatappl.c ****                         EEPROMReg &= ~ESC_EEPROM_ERROR_CRC;
 4205              	 .loc 3 1137 0
 4206 01e6 FB8B     	 ldrh r3,[r7,#30]
 4207 01e8 23F40063 	 bic r3,r3,#2048
 4208 01ec FB83     	 strh r3,[r7,#30]
1138:../SSC/Src/ecatappl.c ****                     }
1139:../SSC/Src/ecatappl.c ****                 }
1140:../SSC/Src/ecatappl.c ****                 else
1141:../SSC/Src/ecatappl.c ****                 {
1142:../SSC/Src/ecatappl.c **** 
1143:../SSC/Src/ecatappl.c ****                     Result = HW_EepromReload();
1144:../SSC/Src/ecatappl.c ****                     if (Result != 0 || (pEEPROM == NULL))
1145:../SSC/Src/ecatappl.c ****                     {
1146:../SSC/Src/ecatappl.c ****                         EEPROMReg |= ESC_EEPROM_ERROR_CRC;
1147:../SSC/Src/ecatappl.c ****                     }
1148:../SSC/Src/ecatappl.c ****                     else
1149:../SSC/Src/ecatappl.c ****                     {
1150:../SSC/Src/ecatappl.c ****                         //copy the configured station alias
1151:../SSC/Src/ecatappl.c ****                         HW_EscWriteWord(((UINT16 *)pEEPROM)[0x4], ESC_EEPROM_DATA_OFFSET);
1152:../SSC/Src/ecatappl.c **** 
1153:../SSC/Src/ecatappl.c ****                         EEPROMReg &= ~ESC_EEPROM_ERROR_CRC;
1154:../SSC/Src/ecatappl.c ****                     }
1155:../SSC/Src/ecatappl.c **** /* ECATCHANGE_END(V5.12) EEPROM2*/
1156:../SSC/Src/ecatappl.c ****                 }
1157:../SSC/Src/ecatappl.c ****             }
1158:../SSC/Src/ecatappl.c ****          break;
 4209              	 .loc 3 1158 0
 4210 01ee 20E0     	 b .L115
 4211              	.L132:
1143:../SSC/Src/ecatappl.c ****                     if (Result != 0 || (pEEPROM == NULL))
 4212              	 .loc 3 1143 0
 4213 01f0 FFF7FEFF 	 bl HW_EepromReload
 4214 01f4 0346     	 mov r3,r0
 4215 01f6 FB82     	 strh r3,[r7,#22]
1144:../SSC/Src/ecatappl.c ****                     {
 4216              	 .loc 3 1144 0
 4217 01f8 FB8A     	 ldrh r3,[r7,#22]
 4218 01fa 002B     	 cmp r3,#0
 4219 01fc 03D1     	 bne .L135
1144:../SSC/Src/ecatappl.c ****                     {
 4220              	 .loc 3 1144 0 is_stmt 0 discriminator 1
 4221 01fe 154B     	 ldr r3,.L138+12
 4222 0200 1B68     	 ldr r3,[r3]
 4223 0202 002B     	 cmp r3,#0
 4224 0204 04D1     	 bne .L136
 4225              	.L135:
1146:../SSC/Src/ecatappl.c ****                     }
 4226              	 .loc 3 1146 0 is_stmt 1
 4227 0206 FB8B     	 ldrh r3,[r7,#30]
 4228 0208 43F40063 	 orr r3,r3,#2048
 4229 020c FB83     	 strh r3,[r7,#30]
 4230 020e 09E0     	 b .L131
 4231              	.L136:
1151:../SSC/Src/ecatappl.c **** 
 4232              	 .loc 3 1151 0
 4233 0210 154A     	 ldr r2,.L138+32
 4234 0212 104B     	 ldr r3,.L138+12
 4235 0214 1B68     	 ldr r3,[r3]
 4236 0216 1B89     	 ldrh r3,[r3,#8]
 4237 0218 1380     	 strh r3,[r2]
1153:../SSC/Src/ecatappl.c ****                     }
 4238              	 .loc 3 1153 0
 4239 021a FB8B     	 ldrh r3,[r7,#30]
 4240 021c 23F40063 	 bic r3,r3,#2048
 4241 0220 FB83     	 strh r3,[r7,#30]
 4242              	 .loc 3 1158 0
 4243 0222 06E0     	 b .L115
 4244              	.L131:
 4245              	 .loc 3 1158 0 is_stmt 0 discriminator 2
 4246 0224 05E0     	 b .L115
 4247              	.L109:
1159:../SSC/Src/ecatappl.c ****         default:
1160:../SSC/Src/ecatappl.c ****             EEPROMReg |= ESC_EEPROM_ERROR_CMD_ACK;
 4248              	 .loc 3 1160 0 is_stmt 1
 4249 0226 FB8B     	 ldrh r3,[r7,#30]
 4250 0228 43F40053 	 orr r3,r3,#8192
 4251 022c FB83     	 strh r3,[r7,#30]
1161:../SSC/Src/ecatappl.c ****             break;
 4252              	 .loc 3 1161 0
 4253 022e 00E0     	 b .L115
 4254              	.L137:
 999:../SSC/Src/ecatappl.c ****         case ESC_EEPROM_CMD_READ_MASK:
 4255              	 .loc 3 999 0
 4256 0230 00BF     	 nop
 4257              	.L115:
1162:../SSC/Src/ecatappl.c ****         }
1163:../SSC/Src/ecatappl.c **** 
1164:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) EEPROM3*/
1165:../SSC/Src/ecatappl.c ****         /* reset the store eeprom timeout counter*/
1166:../SSC/Src/ecatappl.c ****         u16EepromStoreTimeoutCounter = 0;
 4258              	 .loc 3 1166 0
 4259 0232 0E4B     	 ldr r3,.L138+36
 4260 0234 0022     	 movs r2,#0
 4261 0236 1A80     	 strh r2,[r3]
 4262              	.LBB13:
1167:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) EEPROM3*/
1168:../SSC/Src/ecatappl.c **** 
1169:../SSC/Src/ecatappl.c ****         {
1170:../SSC/Src/ecatappl.c ****         UINT16 TmpData = SWAPWORD(EEPROMReg);
 4263              	 .loc 3 1170 0
 4264 0238 FB8B     	 ldrh r3,[r7,#30]
 4265 023a 3B80     	 strh r3,[r7]
1171:../SSC/Src/ecatappl.c ****         HW_EscWriteWord(TmpData,ESC_EEPROM_CONTROL_OFFSET);
 4266              	 .loc 3 1171 0
 4267 023c 024A     	 ldr r2,.L138
 4268 023e 3B88     	 ldrh r3,[r7]
 4269 0240 1380     	 strh r3,[r2]
 4270              	.L107:
 4271              	.LBE13:
 4272              	.LBE8:
1172:../SSC/Src/ecatappl.c ****         }
1173:../SSC/Src/ecatappl.c ****     }
1174:../SSC/Src/ecatappl.c **** }
 4273              	 .loc 3 1174 0
 4274 0242 2037     	 adds r7,r7,#32
 4275              	.LCFI75:
 4276              	 .cfi_def_cfa_offset 8
 4277 0244 BD46     	 mov sp,r7
 4278              	.LCFI76:
 4279              	 .cfi_def_cfa_register 13
 4280              	 
 4281 0246 80BD     	 pop {r7,pc}
 4282              	.L139:
 4283              	 .align 2
 4284              	.L138:
 4285 0248 02050154 	 .word 1409352962
 4286 024c 04050154 	 .word 1409352964
 4287 0250 00000000 	 .word pAPPL_EEPROM_Read
 4288 0254 00000000 	 .word pEEPROM
 4289 0258 00000000 	 .word EepromReadSize
 4290 025c 00000000 	 .word pAPPL_EEPROM_Write
 4291 0260 00000000 	 .word u16EepromStoreTimeoutValue
 4292 0264 00000000 	 .word pAPPL_EEPROM_Reload
 4293 0268 08050154 	 .word 1409352968
 4294 026c 00000000 	 .word u16EepromStoreTimeoutCounter
 4295              	 .cfi_endproc
 4296              	.LFE190:
 4298              	 .text
 4299              	.Letext0:
 4300              	 .file 4 "c:\\tools\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 4301              	 .file 5 "c:\\tools\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 4302              	 .file 6 "C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/CMSIS/Infineon/XMC4300_series/Include/XMC4300.h"
 4303              	 .file 7 "../SSC/Src/objdef.h"
 4304              	 .file 8 "C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/CMSIS/Include/cmsis_gcc.h"
 4305              	 .file 9 "C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/CMSIS/Include/core_cm4.h"
 4306              	 .file 10 "../SSC/Src/eeprom.h"
 4307              	 .file 11 "../SSC/Src/ecatslv.h"
 4308              	 .file 12 "../SSC/Src/ecatappl.h"
 4309              	 .file 13 "../SSC/Src/coeappl.h"
 4310              	 .file 14 "../SSC/Src/applInterface.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ecatappl.c
    {standard input}:20     .text.XMC_ECAT_GetALEventRegister:00000000 $t
    {standard input}:24     .text.XMC_ECAT_GetALEventRegister:00000000 XMC_ECAT_GetALEventRegister
    {standard input}:57     .text.XMC_ECAT_GetALEventRegister:00000018 $d
    {standard input}:62     .text.HW_EscRead:00000000 $t
    {standard input}:66     .text.HW_EscRead:00000000 HW_EscRead
    {standard input}:110    .text.HW_EscReadIsr:00000000 $t
    {standard input}:114    .text.HW_EscReadIsr:00000000 HW_EscReadIsr
    {standard input}:156    .text.HW_EscWrite:00000000 $t
    {standard input}:160    .text.HW_EscWrite:00000000 HW_EscWrite
    {standard input}:203    .text.HW_EscWriteIsr:00000000 $t
    {standard input}:207    .text.HW_EscWriteIsr:00000000 HW_EscWriteIsr
    {standard input}:249    .text.HW_GetALEventRegister:00000000 $t
    {standard input}:253    .text.HW_GetALEventRegister:00000000 HW_GetALEventRegister
    {standard input}:277    .text.HW_GetALEventRegister_Isr:00000000 $t
    {standard input}:281    .text.HW_GetALEventRegister_Isr:00000000 HW_GetALEventRegister_Isr
                            *COM*:00000004 pEEPROM
                            *COM*:00000001 bEcatWaitForInputUpdate
                            *COM*:00000001 bEtherCATRunLed
                            *COM*:00000001 bEtherCATErrorLed
                            *COM*:00000001 bRunApplication
                            *COM*:00000002 EepromReadSize
                            *COM*:00000004 pAPPL_EEPROM_Read
                            *COM*:00000004 pAPPL_EEPROM_Write
                            *COM*:00000004 pAPPL_EEPROM_Reload
                            *COM*:00000004 pAPPL_EEPROM_Store
                            *COM*:00000004 pAPPL_MainLoop
    {standard input}:320    .data.aEepromData:00000000 aEepromData
    {standard input}:317    .data.aEepromData:00000000 $d
                            *COM*:00000004 u32CycleTimeStartValue
                            *COM*:00000004 u32MinCycleTimeStartValue
                            *COM*:00000004 u32SystemTimeReadFailure
                            *COM*:00000001 bMinCycleTimeMeasurementStarted
                            *COM*:00000004 u32MinCycleTimeValue
                            *COM*:00000002 u16EepromStoreTimeoutCounter
                            *COM*:00000002 u16EepromStoreTimeoutValue
                            *COM*:00000044 aPdOutputData
                            *COM*:00000044 aPdInputData
    {standard input}:2382   .bss.bInitFinished:00000000 bInitFinished
    {standard input}:2383   .bss.bInitFinished:00000000 $d
    {standard input}:2385   .text.PDO_InputMapping:00000000 $t
    {standard input}:2390   .text.PDO_InputMapping:00000000 PDO_InputMapping
    {standard input}:2864   .text.GetSystemTimeDelay:00000000 GetSystemTimeDelay
    {standard input}:2485   .text.PDO_InputMapping:00000080 $d
    {standard input}:2494   .text.PDO_OutputMapping:00000000 $t
    {standard input}:2499   .text.PDO_OutputMapping:00000000 PDO_OutputMapping
    {standard input}:2767   .text.HandleCycleTimeMeasurement:00000000 HandleCycleTimeMeasurement
    {standard input}:2603   .text.PDO_OutputMapping:00000090 $d
    {standard input}:2615   .text.ECAT_CheckTimer:00000000 $t
    {standard input}:2620   .text.ECAT_CheckTimer:00000000 ECAT_CheckTimer
    {standard input}:2748   .text.ECAT_CheckTimer:000000d0 $d
    {standard input}:2762   .text.HandleCycleTimeMeasurement:00000000 $t
    {standard input}:2851   .text.HandleCycleTimeMeasurement:00000070 $d
    {standard input}:2859   .text.GetSystemTimeDelay:00000000 $t
    {standard input}:2956   .text.GetSystemTimeDelay:00000068 $d
    {standard input}:2962   .text.PDI_Isr:00000000 $t
    {standard input}:2967   .text.PDI_Isr:00000000 PDI_Isr
    {standard input}:3837   .text.ECAT_Application:00000000 ECAT_Application
    {standard input}:3156   .text.PDI_Isr:0000011c $d
    {standard input}:3173   .text.Sync0_Isr:00000000 $t
    {standard input}:3178   .text.Sync0_Isr:00000000 Sync0_Isr
    {standard input}:3388   .text.Sync0_Isr:00000128 $d
    {standard input}:3404   .text.Sync1_Isr:00000000 $t
    {standard input}:3409   .text.Sync1_Isr:00000000 Sync1_Isr
    {standard input}:3454   .text.Sync1_Isr:00000030 $d
    {standard input}:3463   .text.MainInit:00000000 $t
    {standard input}:3468   .text.MainInit:00000000 MainInit
    {standard input}:3648   .text.MainInit:000000e4 $d
    {standard input}:3667   .text.MainLoop:00000000 $t
    {standard input}:3672   .text.MainLoop:00000000 MainLoop
    {standard input}:3819   .text.MainLoop:000000d4 $d
    {standard input}:3832   .text.ECAT_Application:00000000 $t
    {standard input}:3879   .text.ECAT_Application:00000030 $d
    {standard input}:3886   .text.EEPROM_CommandHandler:00000000 $t
    {standard input}:3891   .text.EEPROM_CommandHandler:00000000 EEPROM_CommandHandler
    {standard input}:4285   .text.EEPROM_CommandHandler:00000248 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memcpy
APPL_InputMapping
sSyncManOutPar
sSyncManInPar
nEscAddrInputData
nPdInputSize
APPL_OutputMapping
nEscAddrOutputData
nPdOutputSize
DC_CheckWatchdog
bEcatWaitForAlControlRes
EsmTimeoutCounter
b32BitDc
u64Timestamp
u32CheckForDcOverrunCnt
bDcSyncActive
COE_UpdateSyncErrorStatus
bEscIntEnabled
bDcRunning
u16SmSync0Counter
bEcatFirstOutputsReceived
bEcatOutputUpdateRunning
u8dummy
bEcatInputUpdateRunning
Sync0WdCounter
LatchInputSync0Counter
u16SmSync0Value
sErrorSettings
LatchInputSync0Value
Sync1WdCounter
ECAT_Init
COE_ObjInit
DISABLE_ESC_INT
ENABLE_ESC_INT
COE_SyncTimeStamp
ECAT_Main
COE_Main
CheckIfEcatError
APPL_Application
HW_EepromReload
