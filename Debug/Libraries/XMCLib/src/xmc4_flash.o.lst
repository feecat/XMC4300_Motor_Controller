   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc4_flash.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_FLASH_lEnterPageModeCommand,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_FLASH_lEnterPageModeCommand
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_FLASH_lEnterPageModeCommand:
  26              	.LFB151:
  27              	 .file 1 "../Libraries/XMCLib/src/xmc4_flash.c"
   1:../Libraries/XMCLib/src/xmc4_flash.c **** /**
   2:../Libraries/XMCLib/src/xmc4_flash.c ****  * @file xmc4_flash.c
   3:../Libraries/XMCLib/src/xmc4_flash.c ****  * @date 2016-01-08
   4:../Libraries/XMCLib/src/xmc4_flash.c ****  *
   5:../Libraries/XMCLib/src/xmc4_flash.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc4_flash.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc4_flash.c ****  *
   9:../Libraries/XMCLib/src/xmc4_flash.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc4_flash.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc4_flash.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc4_flash.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc4_flash.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc4_flash.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc4_flash.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc4_flash.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc4_flash.c ****  * 
  18:../Libraries/XMCLib/src/xmc4_flash.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc4_flash.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc4_flash.c ****  * 
  21:../Libraries/XMCLib/src/xmc4_flash.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc4_flash.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc4_flash.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc4_flash.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc4_flash.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc4_flash.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc4_flash.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc4_flash.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc4_flash.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc4_flash.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc4_flash.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc4_flash.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc4_flash.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  36:../Libraries/XMCLib/src/xmc4_flash.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc4_flash.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  39:../Libraries/XMCLib/src/xmc4_flash.c ****  * 2015-02-10:
  40:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  42:../Libraries/XMCLib/src/xmc4_flash.c ****  * 2015-06-20: 
  43:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Removed definition of GetDriverVersion API 
  44:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  45:../Libraries/XMCLib/src/xmc4_flash.c ****  * 2015-08-17: 
  46:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Added the below API's to the public interface.
  47:../Libraries/XMCLib/src/xmc4_flash.c ****  *       1. XMC_FLASH_Reset
  48:../Libraries/XMCLib/src/xmc4_flash.c ****  *       2. XMC_FLASH_ErasePhysicalSector
  49:../Libraries/XMCLib/src/xmc4_flash.c ****  *       3. XMC_FLASH_EraseUCB
  50:../Libraries/XMCLib/src/xmc4_flash.c ****  *       4. XMC_FLASH_ResumeProtection
  51:../Libraries/XMCLib/src/xmc4_flash.c ****  *       5. XMC_FLASH_RepairPhysicalSector
  52:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  53:../Libraries/XMCLib/src/xmc4_flash.c ****  * 2016-01-08: 
  54:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Wait until operation is finished for the next functions:
  55:../Libraries/XMCLib/src/xmc4_flash.c ****  *       1. XMC_FLASH_InstallProtection
  56:../Libraries/XMCLib/src/xmc4_flash.c ****  *       2. XMC_FLASH_ConfirmProtection
  57:../Libraries/XMCLib/src/xmc4_flash.c ****  *       3. XMC_FLASH_ProgramPage
  58:../Libraries/XMCLib/src/xmc4_flash.c ****  *       4. XMC_FLASH_EraseSector
  59:../Libraries/XMCLib/src/xmc4_flash.c ****  *       5. XMC_FLASH_ErasePhysicalSector
  60:../Libraries/XMCLib/src/xmc4_flash.c ****  *       6. XMC_FLASH_EraseUCB
  61:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Fix XMC_FLASH_VerifyReadProtection and XMC_FLASH_VerifyWriteProtection
  62:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  63:../Libraries/XMCLib/src/xmc4_flash.c ****  * 2018-02-08
  64:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Added implementation of XMC_FLASH_InstallBMI()
  65:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  66:../Libraries/XMCLib/src/xmc4_flash.c ****  * @endcond 
  67:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  68:../Libraries/XMCLib/src/xmc4_flash.c ****  */
  69:../Libraries/XMCLib/src/xmc4_flash.c **** 
  70:../Libraries/XMCLib/src/xmc4_flash.c **** #include "xmc_flash.h"
  71:../Libraries/XMCLib/src/xmc4_flash.c **** 
  72:../Libraries/XMCLib/src/xmc4_flash.c **** #if UC_FAMILY == XMC4
  73:../Libraries/XMCLib/src/xmc4_flash.c **** 
  74:../Libraries/XMCLib/src/xmc4_flash.c **** /**************************************************************************************************
  75:../Libraries/XMCLib/src/xmc4_flash.c ****  * MACROS
  76:../Libraries/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
  77:../Libraries/XMCLib/src/xmc4_flash.c **** 
  78:../Libraries/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROTECTION_CONFIGURATION_WORDS (8UL) /* Used to upadte the assembly buffer during
  79:../Libraries/XMCLib/src/xmc4_flash.c ****                                                           configuration */
  80:../Libraries/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_BMI_STRING_WORDS (10UL) /* Used to upadte the assembly buffer during BMI String
  81:../Libraries/XMCLib/src/xmc4_flash.c ****                                                           configuration */
  82:../Libraries/XMCLib/src/xmc4_flash.c **** 
  83:../Libraries/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROT_CONFIRM_OFFSET (512UL) /* Offset address for UCB page */
  84:../Libraries/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROT_CONFIRM_WORDS  (4UL)
  85:../Libraries/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROT_CONFIRM_CODE   (0x8AFE15C3UL)
  86:../Libraries/XMCLib/src/xmc4_flash.c **** 
  87:../Libraries/XMCLib/src/xmc4_flash.c **** /**************************************************************************************************
  88:../Libraries/XMCLib/src/xmc4_flash.c ****  * LOCAL FUNCTIONS
  89:../Libraries/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
  90:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lEnterPageModeCommand(void);
  91:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lLoadPageCommand(uint32_t low_word, uint32_t high_word);
  92:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lWritePageCommand(uint32_t *page_start_address);
  93:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lWriteUCBPageCommand(uint32_t *page_start_address);
  94:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lEraseSectorCommand(uint32_t *sector_start_address);
  95:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lDisableSectorWriteProtectionCommand(uint32_t user, uint32_t password_0, uint32_t pa
  96:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lDisableReadProtectionCommand(uint32_t password_0, uint32_t password_1);
  97:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lRepairPhysicalSectorCommand(void);
  98:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lErasePhysicalSectorCommand(uint32_t *sector_start_address);
  99:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lClearStatusCommand(void);
 100:../Libraries/XMCLib/src/xmc4_flash.c **** 
 101:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 102:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to program the PFLASH in to page mode, so that assembly buffer is used 
 103:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 104:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lEnterPageModeCommand(void)
 105:../Libraries/XMCLib/src/xmc4_flash.c **** {
  28              	 .loc 1 105 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 83B0     	 sub sp,sp,#12
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
 106:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 107:../Libraries/XMCLib/src/xmc4_flash.c **** 
 108:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
  43              	 .loc 1 108 0
  44 0006 054B     	 ldr r3,.L2
  45 0008 7B60     	 str r3,[r7,#4]
 109:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = (uint32_t)0x50U;
  46              	 .loc 1 109 0
  47 000a 7B68     	 ldr r3,[r7,#4]
  48 000c 5022     	 movs r2,#80
  49 000e 1A60     	 str r2,[r3]
 110:../Libraries/XMCLib/src/xmc4_flash.c **** }
  50              	 .loc 1 110 0
  51 0010 0C37     	 adds r7,r7,#12
  52              	.LCFI3:
  53              	 .cfi_def_cfa_offset 4
  54 0012 BD46     	 mov sp,r7
  55              	.LCFI4:
  56              	 .cfi_def_cfa_register 13
  57              	 
  58 0014 5DF8047B 	 ldr r7,[sp],#4
  59              	.LCFI5:
  60              	 .cfi_restore 7
  61              	 .cfi_def_cfa_offset 0
  62 0018 7047     	 bx lr
  63              	.L3:
  64 001a 00BF     	 .align 2
  65              	.L2:
  66 001c 5455000C 	 .word 201348436
  67              	 .cfi_endproc
  68              	.LFE151:
  70              	 .section .text.XMC_FLASH_lLoadPageCommand,"ax",%progbits
  71              	 .align 2
  72              	 .global XMC_FLASH_lLoadPageCommand
  73              	 .thumb
  74              	 .thumb_func
  76              	XMC_FLASH_lLoadPageCommand:
  77              	.LFB152:
 111:../Libraries/XMCLib/src/xmc4_flash.c **** 
 112:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 113:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to load the data into the page assembly buffer 
 114:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 115:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lLoadPageCommand(uint32_t low_word, uint32_t high_word)
 116:../Libraries/XMCLib/src/xmc4_flash.c **** {
  78              	 .loc 1 116 0
  79              	 .cfi_startproc
  80              	 
  81              	 
  82              	 
  83 0000 80B4     	 push {r7}
  84              	.LCFI6:
  85              	 .cfi_def_cfa_offset 4
  86              	 .cfi_offset 7,-4
  87 0002 85B0     	 sub sp,sp,#20
  88              	.LCFI7:
  89              	 .cfi_def_cfa_offset 24
  90 0004 00AF     	 add r7,sp,#0
  91              	.LCFI8:
  92              	 .cfi_def_cfa_register 7
  93 0006 7860     	 str r0,[r7,#4]
  94 0008 3960     	 str r1,[r7]
 117:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 118:../Libraries/XMCLib/src/xmc4_flash.c **** 
 119:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f0U);
  95              	 .loc 1 119 0
  96 000a 074B     	 ldr r3,.L5
  97 000c FB60     	 str r3,[r7,#12]
 120:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = low_word;
  98              	 .loc 1 120 0
  99 000e FB68     	 ldr r3,[r7,#12]
 100 0010 7A68     	 ldr r2,[r7,#4]
 101 0012 1A60     	 str r2,[r3]
 121:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 102              	 .loc 1 121 0
 103 0014 054B     	 ldr r3,.L5+4
 104 0016 FB60     	 str r3,[r7,#12]
 122:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = high_word;
 105              	 .loc 1 122 0
 106 0018 FB68     	 ldr r3,[r7,#12]
 107 001a 3A68     	 ldr r2,[r7]
 108 001c 1A60     	 str r2,[r3]
 123:../Libraries/XMCLib/src/xmc4_flash.c **** }
 109              	 .loc 1 123 0
 110 001e 1437     	 adds r7,r7,#20
 111              	.LCFI9:
 112              	 .cfi_def_cfa_offset 4
 113 0020 BD46     	 mov sp,r7
 114              	.LCFI10:
 115              	 .cfi_def_cfa_register 13
 116              	 
 117 0022 5DF8047B 	 ldr r7,[sp],#4
 118              	.LCFI11:
 119              	 .cfi_restore 7
 120              	 .cfi_def_cfa_offset 0
 121 0026 7047     	 bx lr
 122              	.L6:
 123              	 .align 2
 124              	.L5:
 125 0028 F055000C 	 .word 201348592
 126 002c F455000C 	 .word 201348596
 127              	 .cfi_endproc
 128              	.LFE152:
 130              	 .section .text.XMC_FLASH_lWritePageCommand,"ax",%progbits
 131              	 .align 2
 132              	 .global XMC_FLASH_lWritePageCommand
 133              	 .thumb
 134              	 .thumb_func
 136              	XMC_FLASH_lWritePageCommand:
 137              	.LFB153:
 124:../Libraries/XMCLib/src/xmc4_flash.c **** 
 125:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 126:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to start the programming of one page with data from the assembly buffer
 127:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 128:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lWritePageCommand(uint32_t *page_start_address)
 129:../Libraries/XMCLib/src/xmc4_flash.c **** {
 138              	 .loc 1 129 0
 139              	 .cfi_startproc
 140              	 
 141              	 
 142              	 
 143 0000 80B4     	 push {r7}
 144              	.LCFI12:
 145              	 .cfi_def_cfa_offset 4
 146              	 .cfi_offset 7,-4
 147 0002 85B0     	 sub sp,sp,#20
 148              	.LCFI13:
 149              	 .cfi_def_cfa_offset 24
 150 0004 00AF     	 add r7,sp,#0
 151              	.LCFI14:
 152              	 .cfi_def_cfa_register 7
 153 0006 7860     	 str r0,[r7,#4]
 130:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 131:../Libraries/XMCLib/src/xmc4_flash.c **** 
 132:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 154              	 .loc 1 132 0
 155 0008 0C4B     	 ldr r3,.L8
 156 000a FB60     	 str r3,[r7,#12]
 133:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 157              	 .loc 1 133 0
 158 000c FB68     	 ldr r3,[r7,#12]
 159 000e AA22     	 movs r2,#170
 160 0010 1A60     	 str r2,[r3]
 134:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 161              	 .loc 1 134 0
 162 0012 0B4B     	 ldr r3,.L8+4
 163 0014 FB60     	 str r3,[r7,#12]
 135:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 164              	 .loc 1 135 0
 165 0016 FB68     	 ldr r3,[r7,#12]
 166 0018 5522     	 movs r2,#85
 167 001a 1A60     	 str r2,[r3]
 136:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 168              	 .loc 1 136 0
 169 001c 074B     	 ldr r3,.L8
 170 001e FB60     	 str r3,[r7,#12]
 137:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xa0U;
 171              	 .loc 1 137 0
 172 0020 FB68     	 ldr r3,[r7,#12]
 173 0022 A022     	 movs r2,#160
 174 0024 1A60     	 str r2,[r3]
 138:../Libraries/XMCLib/src/xmc4_flash.c ****   address = page_start_address;
 175              	 .loc 1 138 0
 176 0026 7B68     	 ldr r3,[r7,#4]
 177 0028 FB60     	 str r3,[r7,#12]
 139:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 178              	 .loc 1 139 0
 179 002a FB68     	 ldr r3,[r7,#12]
 180 002c AA22     	 movs r2,#170
 181 002e 1A60     	 str r2,[r3]
 140:../Libraries/XMCLib/src/xmc4_flash.c **** }
 182              	 .loc 1 140 0
 183 0030 1437     	 adds r7,r7,#20
 184              	.LCFI15:
 185              	 .cfi_def_cfa_offset 4
 186 0032 BD46     	 mov sp,r7
 187              	.LCFI16:
 188              	 .cfi_def_cfa_register 13
 189              	 
 190 0034 5DF8047B 	 ldr r7,[sp],#4
 191              	.LCFI17:
 192              	 .cfi_restore 7
 193              	 .cfi_def_cfa_offset 0
 194 0038 7047     	 bx lr
 195              	.L9:
 196 003a 00BF     	 .align 2
 197              	.L8:
 198 003c 5455000C 	 .word 201348436
 199 0040 A8AA000C 	 .word 201370280
 200              	 .cfi_endproc
 201              	.LFE153:
 203              	 .section .text.XMC_FLASH_lWriteUCBPageCommand,"ax",%progbits
 204              	 .align 2
 205              	 .global XMC_FLASH_lWriteUCBPageCommand
 206              	 .thumb
 207              	 .thumb_func
 209              	XMC_FLASH_lWriteUCBPageCommand:
 210              	.LFB154:
 141:../Libraries/XMCLib/src/xmc4_flash.c **** 
 142:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 143:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to start the programming of UCB page with data from the assembly buffer
 144:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 145:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lWriteUCBPageCommand(uint32_t *page_start_address)
 146:../Libraries/XMCLib/src/xmc4_flash.c **** {
 211              	 .loc 1 146 0
 212              	 .cfi_startproc
 213              	 
 214              	 
 215              	 
 216 0000 80B4     	 push {r7}
 217              	.LCFI18:
 218              	 .cfi_def_cfa_offset 4
 219              	 .cfi_offset 7,-4
 220 0002 85B0     	 sub sp,sp,#20
 221              	.LCFI19:
 222              	 .cfi_def_cfa_offset 24
 223 0004 00AF     	 add r7,sp,#0
 224              	.LCFI20:
 225              	 .cfi_def_cfa_register 7
 226 0006 7860     	 str r0,[r7,#4]
 147:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 148:../Libraries/XMCLib/src/xmc4_flash.c **** 
 149:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 227              	 .loc 1 149 0
 228 0008 0C4B     	 ldr r3,.L11
 229 000a FB60     	 str r3,[r7,#12]
 150:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 230              	 .loc 1 150 0
 231 000c FB68     	 ldr r3,[r7,#12]
 232 000e AA22     	 movs r2,#170
 233 0010 1A60     	 str r2,[r3]
 151:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 234              	 .loc 1 151 0
 235 0012 0B4B     	 ldr r3,.L11+4
 236 0014 FB60     	 str r3,[r7,#12]
 152:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 237              	 .loc 1 152 0
 238 0016 FB68     	 ldr r3,[r7,#12]
 239 0018 5522     	 movs r2,#85
 240 001a 1A60     	 str r2,[r3]
 153:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 241              	 .loc 1 153 0
 242 001c 074B     	 ldr r3,.L11
 243 001e FB60     	 str r3,[r7,#12]
 154:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xc0U;
 244              	 .loc 1 154 0
 245 0020 FB68     	 ldr r3,[r7,#12]
 246 0022 C022     	 movs r2,#192
 247 0024 1A60     	 str r2,[r3]
 155:../Libraries/XMCLib/src/xmc4_flash.c ****   address = page_start_address;
 248              	 .loc 1 155 0
 249 0026 7B68     	 ldr r3,[r7,#4]
 250 0028 FB60     	 str r3,[r7,#12]
 156:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 251              	 .loc 1 156 0
 252 002a FB68     	 ldr r3,[r7,#12]
 253 002c AA22     	 movs r2,#170
 254 002e 1A60     	 str r2,[r3]
 157:../Libraries/XMCLib/src/xmc4_flash.c **** }
 255              	 .loc 1 157 0
 256 0030 1437     	 adds r7,r7,#20
 257              	.LCFI21:
 258              	 .cfi_def_cfa_offset 4
 259 0032 BD46     	 mov sp,r7
 260              	.LCFI22:
 261              	 .cfi_def_cfa_register 13
 262              	 
 263 0034 5DF8047B 	 ldr r7,[sp],#4
 264              	.LCFI23:
 265              	 .cfi_restore 7
 266              	 .cfi_def_cfa_offset 0
 267 0038 7047     	 bx lr
 268              	.L12:
 269 003a 00BF     	 .align 2
 270              	.L11:
 271 003c 5455000C 	 .word 201348436
 272 0040 A8AA000C 	 .word 201370280
 273              	 .cfi_endproc
 274              	.LFE154:
 276              	 .section .text.XMC_FLASH_lEraseSectorCommand,"ax",%progbits
 277              	 .align 2
 278              	 .global XMC_FLASH_lEraseSectorCommand
 279              	 .thumb
 280              	 .thumb_func
 282              	XMC_FLASH_lEraseSectorCommand:
 283              	.LFB155:
 158:../Libraries/XMCLib/src/xmc4_flash.c **** 
 159:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 160:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to erase sector which is starting with the specified address
 161:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 162:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lEraseSectorCommand(uint32_t *sector_start_address)
 163:../Libraries/XMCLib/src/xmc4_flash.c **** {
 284              	 .loc 1 163 0
 285              	 .cfi_startproc
 286              	 
 287              	 
 288              	 
 289 0000 80B4     	 push {r7}
 290              	.LCFI24:
 291              	 .cfi_def_cfa_offset 4
 292              	 .cfi_offset 7,-4
 293 0002 85B0     	 sub sp,sp,#20
 294              	.LCFI25:
 295              	 .cfi_def_cfa_offset 24
 296 0004 00AF     	 add r7,sp,#0
 297              	.LCFI26:
 298              	 .cfi_def_cfa_register 7
 299 0006 7860     	 str r0,[r7,#4]
 164:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 165:../Libraries/XMCLib/src/xmc4_flash.c **** 
 166:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 300              	 .loc 1 166 0
 301 0008 114B     	 ldr r3,.L14
 302 000a FB60     	 str r3,[r7,#12]
 167:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 303              	 .loc 1 167 0
 304 000c FB68     	 ldr r3,[r7,#12]
 305 000e AA22     	 movs r2,#170
 306 0010 1A60     	 str r2,[r3]
 168:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 307              	 .loc 1 168 0
 308 0012 104B     	 ldr r3,.L14+4
 309 0014 FB60     	 str r3,[r7,#12]
 169:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 310              	 .loc 1 169 0
 311 0016 FB68     	 ldr r3,[r7,#12]
 312 0018 5522     	 movs r2,#85
 313 001a 1A60     	 str r2,[r3]
 170:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 314              	 .loc 1 170 0
 315 001c 0C4B     	 ldr r3,.L14
 316 001e FB60     	 str r3,[r7,#12]
 171:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x80U;
 317              	 .loc 1 171 0
 318 0020 FB68     	 ldr r3,[r7,#12]
 319 0022 8022     	 movs r2,#128
 320 0024 1A60     	 str r2,[r3]
 172:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 321              	 .loc 1 172 0
 322 0026 0A4B     	 ldr r3,.L14
 323 0028 FB60     	 str r3,[r7,#12]
 173:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 324              	 .loc 1 173 0
 325 002a FB68     	 ldr r3,[r7,#12]
 326 002c AA22     	 movs r2,#170
 327 002e 1A60     	 str r2,[r3]
 174:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 328              	 .loc 1 174 0
 329 0030 084B     	 ldr r3,.L14+4
 330 0032 FB60     	 str r3,[r7,#12]
 175:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 331              	 .loc 1 175 0
 332 0034 FB68     	 ldr r3,[r7,#12]
 333 0036 5522     	 movs r2,#85
 334 0038 1A60     	 str r2,[r3]
 176:../Libraries/XMCLib/src/xmc4_flash.c ****   address = sector_start_address;
 335              	 .loc 1 176 0
 336 003a 7B68     	 ldr r3,[r7,#4]
 337 003c FB60     	 str r3,[r7,#12]
 177:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x30U;
 338              	 .loc 1 177 0
 339 003e FB68     	 ldr r3,[r7,#12]
 340 0040 3022     	 movs r2,#48
 341 0042 1A60     	 str r2,[r3]
 178:../Libraries/XMCLib/src/xmc4_flash.c **** }
 342              	 .loc 1 178 0
 343 0044 1437     	 adds r7,r7,#20
 344              	.LCFI27:
 345              	 .cfi_def_cfa_offset 4
 346 0046 BD46     	 mov sp,r7
 347              	.LCFI28:
 348              	 .cfi_def_cfa_register 13
 349              	 
 350 0048 5DF8047B 	 ldr r7,[sp],#4
 351              	.LCFI29:
 352              	 .cfi_restore 7
 353              	 .cfi_def_cfa_offset 0
 354 004c 7047     	 bx lr
 355              	.L15:
 356 004e 00BF     	 .align 2
 357              	.L14:
 358 0050 5455000C 	 .word 201348436
 359 0054 A8AA000C 	 .word 201370280
 360              	 .cfi_endproc
 361              	.LFE155:
 363              	 .section .text.XMC_FLASH_lDisableSectorWriteProtectionCommand,"ax",%progbits
 364              	 .align 2
 365              	 .global XMC_FLASH_lDisableSectorWriteProtectionCommand
 366              	 .thumb
 367              	 .thumb_func
 369              	XMC_FLASH_lDisableSectorWriteProtectionCommand:
 370              	.LFB156:
 179:../Libraries/XMCLib/src/xmc4_flash.c **** 
 180:../Libraries/XMCLib/src/xmc4_flash.c **** 
 181:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 182:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to temporarily disables the write protection belonging to the the USER specified, when p
 183:../Libraries/XMCLib/src/xmc4_flash.c ****  * configured values
 184:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 185:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lDisableSectorWriteProtectionCommand(uint32_t user, uint32_t password_0, uint32_t pa
 186:../Libraries/XMCLib/src/xmc4_flash.c **** {
 371              	 .loc 1 186 0
 372              	 .cfi_startproc
 373              	 
 374              	 
 375              	 
 376 0000 80B4     	 push {r7}
 377              	.LCFI30:
 378              	 .cfi_def_cfa_offset 4
 379              	 .cfi_offset 7,-4
 380 0002 87B0     	 sub sp,sp,#28
 381              	.LCFI31:
 382              	 .cfi_def_cfa_offset 32
 383 0004 00AF     	 add r7,sp,#0
 384              	.LCFI32:
 385              	 .cfi_def_cfa_register 7
 386 0006 F860     	 str r0,[r7,#12]
 387 0008 B960     	 str r1,[r7,#8]
 388 000a 7A60     	 str r2,[r7,#4]
 187:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 188:../Libraries/XMCLib/src/xmc4_flash.c **** 
 189:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 389              	 .loc 1 189 0
 390 000c 114B     	 ldr r3,.L17
 391 000e 7B61     	 str r3,[r7,#20]
 190:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 392              	 .loc 1 190 0
 393 0010 7B69     	 ldr r3,[r7,#20]
 394 0012 AA22     	 movs r2,#170
 395 0014 1A60     	 str r2,[r3]
 191:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 396              	 .loc 1 191 0
 397 0016 104B     	 ldr r3,.L17+4
 398 0018 7B61     	 str r3,[r7,#20]
 192:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 399              	 .loc 1 192 0
 400 001a 7B69     	 ldr r3,[r7,#20]
 401 001c 5522     	 movs r2,#85
 402 001e 1A60     	 str r2,[r3]
 193:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 403              	 .loc 1 193 0
 404 0020 0E4B     	 ldr r3,.L17+8
 405 0022 7B61     	 str r3,[r7,#20]
 194:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = user;
 406              	 .loc 1 194 0
 407 0024 7B69     	 ldr r3,[r7,#20]
 408 0026 FA68     	 ldr r2,[r7,#12]
 409 0028 1A60     	 str r2,[r3]
 195:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 410              	 .loc 1 195 0
 411 002a 0B4B     	 ldr r3,.L17+4
 412 002c 7B61     	 str r3,[r7,#20]
 196:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = password_0;
 413              	 .loc 1 196 0
 414 002e 7B69     	 ldr r3,[r7,#20]
 415 0030 BA68     	 ldr r2,[r7,#8]
 416 0032 1A60     	 str r2,[r3]
 197:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 417              	 .loc 1 197 0
 418 0034 084B     	 ldr r3,.L17+4
 419 0036 7B61     	 str r3,[r7,#20]
 198:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = password_1;
 420              	 .loc 1 198 0
 421 0038 7B69     	 ldr r3,[r7,#20]
 422 003a 7A68     	 ldr r2,[r7,#4]
 423 003c 1A60     	 str r2,[r3]
 199:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5558U);
 424              	 .loc 1 199 0
 425 003e 084B     	 ldr r3,.L17+12
 426 0040 7B61     	 str r3,[r7,#20]
 200:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x05U;
 427              	 .loc 1 200 0
 428 0042 7B69     	 ldr r3,[r7,#20]
 429 0044 0522     	 movs r2,#5
 430 0046 1A60     	 str r2,[r3]
 201:../Libraries/XMCLib/src/xmc4_flash.c **** }
 431              	 .loc 1 201 0
 432 0048 1C37     	 adds r7,r7,#28
 433              	.LCFI33:
 434              	 .cfi_def_cfa_offset 4
 435 004a BD46     	 mov sp,r7
 436              	.LCFI34:
 437              	 .cfi_def_cfa_register 13
 438              	 
 439 004c 5DF8047B 	 ldr r7,[sp],#4
 440              	.LCFI35:
 441              	 .cfi_restore 7
 442              	 .cfi_def_cfa_offset 0
 443 0050 7047     	 bx lr
 444              	.L18:
 445 0052 00BF     	 .align 2
 446              	.L17:
 447 0054 5455000C 	 .word 201348436
 448 0058 A8AA000C 	 .word 201370280
 449 005c 3C55000C 	 .word 201348412
 450 0060 5855000C 	 .word 201348440
 451              	 .cfi_endproc
 452              	.LFE156:
 454              	 .section .text.XMC_FLASH_lDisableReadProtectionCommand,"ax",%progbits
 455              	 .align 2
 456              	 .global XMC_FLASH_lDisableReadProtectionCommand
 457              	 .thumb
 458              	 .thumb_func
 460              	XMC_FLASH_lDisableReadProtectionCommand:
 461              	.LFB157:
 202:../Libraries/XMCLib/src/xmc4_flash.c **** 
 203:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 204:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to temporarily disables the read protection along with write protection, when passwords 
 205:../Libraries/XMCLib/src/xmc4_flash.c ****  * configured values
 206:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 207:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lDisableReadProtectionCommand(uint32_t password_0, uint32_t password_1)
 208:../Libraries/XMCLib/src/xmc4_flash.c **** {
 462              	 .loc 1 208 0
 463              	 .cfi_startproc
 464              	 
 465              	 
 466              	 
 467 0000 80B4     	 push {r7}
 468              	.LCFI36:
 469              	 .cfi_def_cfa_offset 4
 470              	 .cfi_offset 7,-4
 471 0002 85B0     	 sub sp,sp,#20
 472              	.LCFI37:
 473              	 .cfi_def_cfa_offset 24
 474 0004 00AF     	 add r7,sp,#0
 475              	.LCFI38:
 476              	 .cfi_def_cfa_register 7
 477 0006 7860     	 str r0,[r7,#4]
 478 0008 3960     	 str r1,[r7]
 209:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 210:../Libraries/XMCLib/src/xmc4_flash.c **** 
 211:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 479              	 .loc 1 211 0
 480 000a 114B     	 ldr r3,.L20
 481 000c FB60     	 str r3,[r7,#12]
 212:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 482              	 .loc 1 212 0
 483 000e FB68     	 ldr r3,[r7,#12]
 484 0010 AA22     	 movs r2,#170
 485 0012 1A60     	 str r2,[r3]
 213:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 486              	 .loc 1 213 0
 487 0014 0F4B     	 ldr r3,.L20+4
 488 0016 FB60     	 str r3,[r7,#12]
 214:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 489              	 .loc 1 214 0
 490 0018 FB68     	 ldr r3,[r7,#12]
 491 001a 5522     	 movs r2,#85
 492 001c 1A60     	 str r2,[r3]
 215:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 493              	 .loc 1 215 0
 494 001e 0E4B     	 ldr r3,.L20+8
 495 0020 FB60     	 str r3,[r7,#12]
 216:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x00U;
 496              	 .loc 1 216 0
 497 0022 FB68     	 ldr r3,[r7,#12]
 498 0024 0022     	 movs r2,#0
 499 0026 1A60     	 str r2,[r3]
 217:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 500              	 .loc 1 217 0
 501 0028 0A4B     	 ldr r3,.L20+4
 502 002a FB60     	 str r3,[r7,#12]
 218:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = password_0;
 503              	 .loc 1 218 0
 504 002c FB68     	 ldr r3,[r7,#12]
 505 002e 7A68     	 ldr r2,[r7,#4]
 506 0030 1A60     	 str r2,[r3]
 219:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 507              	 .loc 1 219 0
 508 0032 084B     	 ldr r3,.L20+4
 509 0034 FB60     	 str r3,[r7,#12]
 220:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = password_1;
 510              	 .loc 1 220 0
 511 0036 FB68     	 ldr r3,[r7,#12]
 512 0038 3A68     	 ldr r2,[r7]
 513 003a 1A60     	 str r2,[r3]
 221:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5558U);
 514              	 .loc 1 221 0
 515 003c 074B     	 ldr r3,.L20+12
 516 003e FB60     	 str r3,[r7,#12]
 222:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x08U;
 517              	 .loc 1 222 0
 518 0040 FB68     	 ldr r3,[r7,#12]
 519 0042 0822     	 movs r2,#8
 520 0044 1A60     	 str r2,[r3]
 223:../Libraries/XMCLib/src/xmc4_flash.c **** }
 521              	 .loc 1 223 0
 522 0046 1437     	 adds r7,r7,#20
 523              	.LCFI39:
 524              	 .cfi_def_cfa_offset 4
 525 0048 BD46     	 mov sp,r7
 526              	.LCFI40:
 527              	 .cfi_def_cfa_register 13
 528              	 
 529 004a 5DF8047B 	 ldr r7,[sp],#4
 530              	.LCFI41:
 531              	 .cfi_restore 7
 532              	 .cfi_def_cfa_offset 0
 533 004e 7047     	 bx lr
 534              	.L21:
 535              	 .align 2
 536              	.L20:
 537 0050 5455000C 	 .word 201348436
 538 0054 A8AA000C 	 .word 201370280
 539 0058 3C55000C 	 .word 201348412
 540 005c 5855000C 	 .word 201348440
 541              	 .cfi_endproc
 542              	.LFE157:
 544              	 .section .text.XMC_FLASH_lClearStatusCommand,"ax",%progbits
 545              	 .align 2
 546              	 .global XMC_FLASH_lClearStatusCommand
 547              	 .thumb
 548              	 .thumb_func
 550              	XMC_FLASH_lClearStatusCommand:
 551              	.LFB158:
 224:../Libraries/XMCLib/src/xmc4_flash.c **** 
 225:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 226:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to clear FSR.PROG and FSR.ERASE and the error flags in FSR such as PFOPER, SQER, PROER, 
 227:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 228:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lClearStatusCommand(void)
 229:../Libraries/XMCLib/src/xmc4_flash.c **** {
 552              	 .loc 1 229 0
 553              	 .cfi_startproc
 554              	 
 555              	 
 556              	 
 557 0000 80B4     	 push {r7}
 558              	.LCFI42:
 559              	 .cfi_def_cfa_offset 4
 560              	 .cfi_offset 7,-4
 561 0002 83B0     	 sub sp,sp,#12
 562              	.LCFI43:
 563              	 .cfi_def_cfa_offset 16
 564 0004 00AF     	 add r7,sp,#0
 565              	.LCFI44:
 566              	 .cfi_def_cfa_register 7
 230:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 231:../Libraries/XMCLib/src/xmc4_flash.c **** 
 232:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 567              	 .loc 1 232 0
 568 0006 054B     	 ldr r3,.L23
 569 0008 7B60     	 str r3,[r7,#4]
 233:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xf5U;
 570              	 .loc 1 233 0
 571 000a 7B68     	 ldr r3,[r7,#4]
 572 000c F522     	 movs r2,#245
 573 000e 1A60     	 str r2,[r3]
 234:../Libraries/XMCLib/src/xmc4_flash.c **** }
 574              	 .loc 1 234 0
 575 0010 0C37     	 adds r7,r7,#12
 576              	.LCFI45:
 577              	 .cfi_def_cfa_offset 4
 578 0012 BD46     	 mov sp,r7
 579              	.LCFI46:
 580              	 .cfi_def_cfa_register 13
 581              	 
 582 0014 5DF8047B 	 ldr r7,[sp],#4
 583              	.LCFI47:
 584              	 .cfi_restore 7
 585              	 .cfi_def_cfa_offset 0
 586 0018 7047     	 bx lr
 587              	.L24:
 588 001a 00BF     	 .align 2
 589              	.L23:
 590 001c 5455000C 	 .word 201348436
 591              	 .cfi_endproc
 592              	.LFE158:
 594              	 .section .text.XMC_FLASH_ClearStatus,"ax",%progbits
 595              	 .align 2
 596              	 .global XMC_FLASH_ClearStatus
 597              	 .thumb
 598              	 .thumb_func
 600              	XMC_FLASH_ClearStatus:
 601              	.LFB159:
 235:../Libraries/XMCLib/src/xmc4_flash.c **** 
 236:../Libraries/XMCLib/src/xmc4_flash.c **** /**************************************************************************************************
 237:../Libraries/XMCLib/src/xmc4_flash.c ****  * API IMPLEMENTATION
 238:../Libraries/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
 239:../Libraries/XMCLib/src/xmc4_flash.c **** 
 240:../Libraries/XMCLib/src/xmc4_flash.c ****  /*
 241:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API shall clear Program, erase and error flags(PFOPER, SQER, PROER, PFDBER, ORIER, VER) of 
 242:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 243:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ClearStatus(void)
 244:../Libraries/XMCLib/src/xmc4_flash.c **** {
 602              	 .loc 1 244 0
 603              	 .cfi_startproc
 604              	 
 605              	 
 606 0000 80B5     	 push {r7,lr}
 607              	.LCFI48:
 608              	 .cfi_def_cfa_offset 8
 609              	 .cfi_offset 7,-8
 610              	 .cfi_offset 14,-4
 611 0002 00AF     	 add r7,sp,#0
 612              	.LCFI49:
 613              	 .cfi_def_cfa_register 7
 245:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 614              	 .loc 1 245 0
 615 0004 FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 246:../Libraries/XMCLib/src/xmc4_flash.c **** }
 616              	 .loc 1 246 0
 617 0008 80BD     	 pop {r7,pc}
 618              	 .cfi_endproc
 619              	.LFE159:
 621 000a 00BF     	 .section .text.XMC_FLASH_GetStatus,"ax",%progbits
 622              	 .align 2
 623              	 .global XMC_FLASH_GetStatus
 624              	 .thumb
 625              	 .thumb_func
 627              	XMC_FLASH_GetStatus:
 628              	.LFB160:
 247:../Libraries/XMCLib/src/xmc4_flash.c **** 
 248:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 249:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API returns the FSR register value
 250:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 251:../Libraries/XMCLib/src/xmc4_flash.c **** uint32_t XMC_FLASH_GetStatus(void)
 252:../Libraries/XMCLib/src/xmc4_flash.c **** {
 629              	 .loc 1 252 0
 630              	 .cfi_startproc
 631              	 
 632              	 
 633              	 
 634 0000 80B4     	 push {r7}
 635              	.LCFI50:
 636              	 .cfi_def_cfa_offset 4
 637              	 .cfi_offset 7,-4
 638 0002 00AF     	 add r7,sp,#0
 639              	.LCFI51:
 640              	 .cfi_def_cfa_register 7
 253:../Libraries/XMCLib/src/xmc4_flash.c ****   return FLASH0->FSR;
 641              	 .loc 1 253 0
 642 0004 044B     	 ldr r3,.L28
 643 0006 03F58053 	 add r3,r3,#4096
 644 000a 1033     	 adds r3,r3,#16
 645 000c 1B68     	 ldr r3,[r3]
 254:../Libraries/XMCLib/src/xmc4_flash.c **** }
 646              	 .loc 1 254 0
 647 000e 1846     	 mov r0,r3
 648 0010 BD46     	 mov sp,r7
 649              	.LCFI52:
 650              	 .cfi_def_cfa_register 13
 651              	 
 652 0012 5DF8047B 	 ldr r7,[sp],#4
 653              	.LCFI53:
 654              	 .cfi_restore 7
 655              	 .cfi_def_cfa_offset 0
 656 0016 7047     	 bx lr
 657              	.L29:
 658              	 .align 2
 659              	.L28:
 660 0018 00100058 	 .word 1476399104
 661              	 .cfi_endproc
 662              	.LFE160:
 664              	 .section .text.XMC_FLASH_EnableEvent,"ax",%progbits
 665              	 .align 2
 666              	 .global XMC_FLASH_EnableEvent
 667              	 .thumb
 668              	 .thumb_func
 670              	XMC_FLASH_EnableEvent:
 671              	.LFB161:
 255:../Libraries/XMCLib/src/xmc4_flash.c **** 
 256:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 257:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API enables the events which required to trigger the ISR 
 258:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 259:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_EnableEvent(const uint32_t event_msk)
 260:../Libraries/XMCLib/src/xmc4_flash.c **** {
 672              	 .loc 1 260 0
 673              	 .cfi_startproc
 674              	 
 675              	 
 676              	 
 677 0000 80B4     	 push {r7}
 678              	.LCFI54:
 679              	 .cfi_def_cfa_offset 4
 680              	 .cfi_offset 7,-4
 681 0002 83B0     	 sub sp,sp,#12
 682              	.LCFI55:
 683              	 .cfi_def_cfa_offset 16
 684 0004 00AF     	 add r7,sp,#0
 685              	.LCFI56:
 686              	 .cfi_def_cfa_register 7
 687 0006 7860     	 str r0,[r7,#4]
 261:../Libraries/XMCLib/src/xmc4_flash.c ****   FLASH0->FCON |= event_msk;
 688              	 .loc 1 261 0
 689 0008 0849     	 ldr r1,.L31
 690 000a 084B     	 ldr r3,.L31
 691 000c 03F58053 	 add r3,r3,#4096
 692 0010 1433     	 adds r3,r3,#20
 693 0012 1A68     	 ldr r2,[r3]
 694 0014 7B68     	 ldr r3,[r7,#4]
 695 0016 1A43     	 orrs r2,r2,r3
 696 0018 01F58053 	 add r3,r1,#4096
 697 001c 1433     	 adds r3,r3,#20
 698 001e 1A60     	 str r2,[r3]
 262:../Libraries/XMCLib/src/xmc4_flash.c **** }
 699              	 .loc 1 262 0
 700 0020 0C37     	 adds r7,r7,#12
 701              	.LCFI57:
 702              	 .cfi_def_cfa_offset 4
 703 0022 BD46     	 mov sp,r7
 704              	.LCFI58:
 705              	 .cfi_def_cfa_register 13
 706              	 
 707 0024 5DF8047B 	 ldr r7,[sp],#4
 708              	.LCFI59:
 709              	 .cfi_restore 7
 710              	 .cfi_def_cfa_offset 0
 711 0028 7047     	 bx lr
 712              	.L32:
 713 002a 00BF     	 .align 2
 714              	.L31:
 715 002c 00100058 	 .word 1476399104
 716              	 .cfi_endproc
 717              	.LFE161:
 719              	 .section .text.XMC_FLASH_DisableEvent,"ax",%progbits
 720              	 .align 2
 721              	 .global XMC_FLASH_DisableEvent
 722              	 .thumb
 723              	 .thumb_func
 725              	XMC_FLASH_DisableEvent:
 726              	.LFB162:
 263:../Libraries/XMCLib/src/xmc4_flash.c **** 
 264:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 265:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API disables the event generation 
 266:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 267:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_DisableEvent(const uint32_t event_msk)
 268:../Libraries/XMCLib/src/xmc4_flash.c **** {
 727              	 .loc 1 268 0
 728              	 .cfi_startproc
 729              	 
 730              	 
 731              	 
 732 0000 80B4     	 push {r7}
 733              	.LCFI60:
 734              	 .cfi_def_cfa_offset 4
 735              	 .cfi_offset 7,-4
 736 0002 83B0     	 sub sp,sp,#12
 737              	.LCFI61:
 738              	 .cfi_def_cfa_offset 16
 739 0004 00AF     	 add r7,sp,#0
 740              	.LCFI62:
 741              	 .cfi_def_cfa_register 7
 742 0006 7860     	 str r0,[r7,#4]
 269:../Libraries/XMCLib/src/xmc4_flash.c ****   FLASH0->FCON &= ~event_msk;
 743              	 .loc 1 269 0
 744 0008 0849     	 ldr r1,.L34
 745 000a 084B     	 ldr r3,.L34
 746 000c 03F58053 	 add r3,r3,#4096
 747 0010 1433     	 adds r3,r3,#20
 748 0012 1A68     	 ldr r2,[r3]
 749 0014 7B68     	 ldr r3,[r7,#4]
 750 0016 DB43     	 mvns r3,r3
 751 0018 1A40     	 ands r2,r2,r3
 752 001a 01F58053 	 add r3,r1,#4096
 753 001e 1433     	 adds r3,r3,#20
 754 0020 1A60     	 str r2,[r3]
 270:../Libraries/XMCLib/src/xmc4_flash.c **** }
 755              	 .loc 1 270 0
 756 0022 0C37     	 adds r7,r7,#12
 757              	.LCFI63:
 758              	 .cfi_def_cfa_offset 4
 759 0024 BD46     	 mov sp,r7
 760              	.LCFI64:
 761              	 .cfi_def_cfa_register 13
 762              	 
 763 0026 5DF8047B 	 ldr r7,[sp],#4
 764              	.LCFI65:
 765              	 .cfi_restore 7
 766              	 .cfi_def_cfa_offset 0
 767 002a 7047     	 bx lr
 768              	.L35:
 769              	 .align 2
 770              	.L34:
 771 002c 00100058 	 .word 1476399104
 772              	 .cfi_endproc
 773              	.LFE162:
 775              	 .section .text.XMC_FLASH_ProgramPage,"ax",%progbits
 776              	 .align 2
 777              	 .global XMC_FLASH_ProgramPage
 778              	 .thumb
 779              	 .thumb_func
 781              	XMC_FLASH_ProgramPage:
 782              	.LFB163:
 271:../Libraries/XMCLib/src/xmc4_flash.c **** 
 272:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 273:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API write the PFLASH page
 274:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 275:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ProgramPage(uint32_t *address, const uint32_t *data)
 276:../Libraries/XMCLib/src/xmc4_flash.c **** {
 783              	 .loc 1 276 0
 784              	 .cfi_startproc
 785              	 
 786              	 
 787 0000 80B5     	 push {r7,lr}
 788              	.LCFI66:
 789              	 .cfi_def_cfa_offset 8
 790              	 .cfi_offset 7,-8
 791              	 .cfi_offset 14,-4
 792 0002 84B0     	 sub sp,sp,#16
 793              	.LCFI67:
 794              	 .cfi_def_cfa_offset 24
 795 0004 00AF     	 add r7,sp,#0
 796              	.LCFI68:
 797              	 .cfi_def_cfa_register 7
 798 0006 7860     	 str r0,[r7,#4]
 799 0008 3960     	 str r1,[r7]
 277:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t idx;
 278:../Libraries/XMCLib/src/xmc4_flash.c **** 
 279:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();  
 800              	 .loc 1 279 0
 801 000a FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 280:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 802              	 .loc 1 280 0
 803 000e FFF7FEFF 	 bl XMC_FLASH_lEnterPageModeCommand
 281:../Libraries/XMCLib/src/xmc4_flash.c **** 
 282:../Libraries/XMCLib/src/xmc4_flash.c ****   for (idx = 0U; idx < XMC_FLASH_WORDS_PER_PAGE; idx += 2U)
 804              	 .loc 1 282 0
 805 0012 0023     	 movs r3,#0
 806 0014 FB60     	 str r3,[r7,#12]
 807 0016 11E0     	 b .L37
 808              	.L38:
 283:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 284:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(data[idx], data[idx + 1U]);
 809              	 .loc 1 284 0 discriminator 3
 810 0018 FB68     	 ldr r3,[r7,#12]
 811 001a 9B00     	 lsls r3,r3,#2
 812 001c 3A68     	 ldr r2,[r7]
 813 001e 1344     	 add r3,r3,r2
 814 0020 1968     	 ldr r1,[r3]
 815 0022 FB68     	 ldr r3,[r7,#12]
 816 0024 0133     	 adds r3,r3,#1
 817 0026 9B00     	 lsls r3,r3,#2
 818 0028 3A68     	 ldr r2,[r7]
 819 002a 1344     	 add r3,r3,r2
 820 002c 1B68     	 ldr r3,[r3]
 821 002e 0846     	 mov r0,r1
 822 0030 1946     	 mov r1,r3
 823 0032 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 282:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 824              	 .loc 1 282 0 discriminator 3
 825 0036 FB68     	 ldr r3,[r7,#12]
 826 0038 0233     	 adds r3,r3,#2
 827 003a FB60     	 str r3,[r7,#12]
 828              	.L37:
 282:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 829              	 .loc 1 282 0 is_stmt 0 discriminator 1
 830 003c FB68     	 ldr r3,[r7,#12]
 831 003e 3F2B     	 cmp r3,#63
 832 0040 EAD9     	 bls .L38
 285:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 286:../Libraries/XMCLib/src/xmc4_flash.c **** 
 287:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lWritePageCommand(address);    
 833              	 .loc 1 287 0 is_stmt 1
 834 0042 7868     	 ldr r0,[r7,#4]
 835 0044 FFF7FEFF 	 bl XMC_FLASH_lWritePageCommand
 288:../Libraries/XMCLib/src/xmc4_flash.c **** 
 289:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 290:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 836              	 .loc 1 290 0
 837 0048 00BF     	 nop
 838              	.L39:
 839              	 .loc 1 290 0 is_stmt 0 discriminator 1
 840 004a 064B     	 ldr r3,.L40
 841 004c 03F58053 	 add r3,r3,#4096
 842 0050 1033     	 adds r3,r3,#16
 843 0052 1B68     	 ldr r3,[r3]
 844 0054 03F00103 	 and r3,r3,#1
 845 0058 002B     	 cmp r3,#0
 846 005a F6D1     	 bne .L39
 291:../Libraries/XMCLib/src/xmc4_flash.c **** }
 847              	 .loc 1 291 0 is_stmt 1
 848 005c 1037     	 adds r7,r7,#16
 849              	.LCFI69:
 850              	 .cfi_def_cfa_offset 8
 851 005e BD46     	 mov sp,r7
 852              	.LCFI70:
 853              	 .cfi_def_cfa_register 13
 854              	 
 855 0060 80BD     	 pop {r7,pc}
 856              	.L41:
 857 0062 00BF     	 .align 2
 858              	.L40:
 859 0064 00100058 	 .word 1476399104
 860              	 .cfi_endproc
 861              	.LFE163:
 863              	 .section .text.XMC_FLASH_EraseSector,"ax",%progbits
 864              	 .align 2
 865              	 .global XMC_FLASH_EraseSector
 866              	 .thumb
 867              	 .thumb_func
 869              	XMC_FLASH_EraseSector:
 870              	.LFB164:
 292:../Libraries/XMCLib/src/xmc4_flash.c **** 
 293:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 294:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API erase the logical sector
 295:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 296:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_EraseSector(uint32_t *address)
 297:../Libraries/XMCLib/src/xmc4_flash.c **** {
 871              	 .loc 1 297 0
 872              	 .cfi_startproc
 873              	 
 874              	 
 875 0000 80B5     	 push {r7,lr}
 876              	.LCFI71:
 877              	 .cfi_def_cfa_offset 8
 878              	 .cfi_offset 7,-8
 879              	 .cfi_offset 14,-4
 880 0002 82B0     	 sub sp,sp,#8
 881              	.LCFI72:
 882              	 .cfi_def_cfa_offset 16
 883 0004 00AF     	 add r7,sp,#0
 884              	.LCFI73:
 885              	 .cfi_def_cfa_register 7
 886 0006 7860     	 str r0,[r7,#4]
 298:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 887              	 .loc 1 298 0
 888 0008 FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 299:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEraseSectorCommand(address);
 889              	 .loc 1 299 0
 890 000c 7868     	 ldr r0,[r7,#4]
 891 000e FFF7FEFF 	 bl XMC_FLASH_lEraseSectorCommand
 300:../Libraries/XMCLib/src/xmc4_flash.c **** 
 301:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 302:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 892              	 .loc 1 302 0
 893 0012 00BF     	 nop
 894              	.L43:
 895              	 .loc 1 302 0 is_stmt 0 discriminator 1
 896 0014 054B     	 ldr r3,.L44
 897 0016 03F58053 	 add r3,r3,#4096
 898 001a 1033     	 adds r3,r3,#16
 899 001c 1B68     	 ldr r3,[r3]
 900 001e 03F00103 	 and r3,r3,#1
 901 0022 002B     	 cmp r3,#0
 902 0024 F6D1     	 bne .L43
 303:../Libraries/XMCLib/src/xmc4_flash.c **** }
 903              	 .loc 1 303 0 is_stmt 1
 904 0026 0837     	 adds r7,r7,#8
 905              	.LCFI74:
 906              	 .cfi_def_cfa_offset 8
 907 0028 BD46     	 mov sp,r7
 908              	.LCFI75:
 909              	 .cfi_def_cfa_register 13
 910              	 
 911 002a 80BD     	 pop {r7,pc}
 912              	.L45:
 913              	 .align 2
 914              	.L44:
 915 002c 00100058 	 .word 1476399104
 916              	 .cfi_endproc
 917              	.LFE164:
 919              	 .section .text.XMC_FLASH_lErasePhysicalSectorCommand,"ax",%progbits
 920              	 .align 2
 921              	 .global XMC_FLASH_lErasePhysicalSectorCommand
 922              	 .thumb
 923              	 .thumb_func
 925              	XMC_FLASH_lErasePhysicalSectorCommand:
 926              	.LFB165:
 304:../Libraries/XMCLib/src/xmc4_flash.c **** 
 305:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 306:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to erase physical sector which is starting with the specified address
 307:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 308:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lErasePhysicalSectorCommand(uint32_t *sector_start_address)
 309:../Libraries/XMCLib/src/xmc4_flash.c **** {
 927              	 .loc 1 309 0
 928              	 .cfi_startproc
 929              	 
 930              	 
 931              	 
 932 0000 80B4     	 push {r7}
 933              	.LCFI76:
 934              	 .cfi_def_cfa_offset 4
 935              	 .cfi_offset 7,-4
 936 0002 85B0     	 sub sp,sp,#20
 937              	.LCFI77:
 938              	 .cfi_def_cfa_offset 24
 939 0004 00AF     	 add r7,sp,#0
 940              	.LCFI78:
 941              	 .cfi_def_cfa_register 7
 942 0006 7860     	 str r0,[r7,#4]
 310:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 311:../Libraries/XMCLib/src/xmc4_flash.c **** 
 312:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 943              	 .loc 1 312 0
 944 0008 114B     	 ldr r3,.L47
 945 000a FB60     	 str r3,[r7,#12]
 313:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 946              	 .loc 1 313 0
 947 000c FB68     	 ldr r3,[r7,#12]
 948 000e AA22     	 movs r2,#170
 949 0010 1A60     	 str r2,[r3]
 314:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 950              	 .loc 1 314 0
 951 0012 104B     	 ldr r3,.L47+4
 952 0014 FB60     	 str r3,[r7,#12]
 315:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 953              	 .loc 1 315 0
 954 0016 FB68     	 ldr r3,[r7,#12]
 955 0018 5522     	 movs r2,#85
 956 001a 1A60     	 str r2,[r3]
 316:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 957              	 .loc 1 316 0
 958 001c 0C4B     	 ldr r3,.L47
 959 001e FB60     	 str r3,[r7,#12]
 317:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x80U;
 960              	 .loc 1 317 0
 961 0020 FB68     	 ldr r3,[r7,#12]
 962 0022 8022     	 movs r2,#128
 963 0024 1A60     	 str r2,[r3]
 318:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 964              	 .loc 1 318 0
 965 0026 0A4B     	 ldr r3,.L47
 966 0028 FB60     	 str r3,[r7,#12]
 319:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 967              	 .loc 1 319 0
 968 002a FB68     	 ldr r3,[r7,#12]
 969 002c AA22     	 movs r2,#170
 970 002e 1A60     	 str r2,[r3]
 320:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 971              	 .loc 1 320 0
 972 0030 084B     	 ldr r3,.L47+4
 973 0032 FB60     	 str r3,[r7,#12]
 321:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 974              	 .loc 1 321 0
 975 0034 FB68     	 ldr r3,[r7,#12]
 976 0036 5522     	 movs r2,#85
 977 0038 1A60     	 str r2,[r3]
 322:../Libraries/XMCLib/src/xmc4_flash.c ****   address = sector_start_address;
 978              	 .loc 1 322 0
 979 003a 7B68     	 ldr r3,[r7,#4]
 980 003c FB60     	 str r3,[r7,#12]
 323:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x40U;
 981              	 .loc 1 323 0
 982 003e FB68     	 ldr r3,[r7,#12]
 983 0040 4022     	 movs r2,#64
 984 0042 1A60     	 str r2,[r3]
 324:../Libraries/XMCLib/src/xmc4_flash.c **** }
 985              	 .loc 1 324 0
 986 0044 1437     	 adds r7,r7,#20
 987              	.LCFI79:
 988              	 .cfi_def_cfa_offset 4
 989 0046 BD46     	 mov sp,r7
 990              	.LCFI80:
 991              	 .cfi_def_cfa_register 13
 992              	 
 993 0048 5DF8047B 	 ldr r7,[sp],#4
 994              	.LCFI81:
 995              	 .cfi_restore 7
 996              	 .cfi_def_cfa_offset 0
 997 004c 7047     	 bx lr
 998              	.L48:
 999 004e 00BF     	 .align 2
 1000              	.L47:
 1001 0050 5455000C 	 .word 201348436
 1002 0054 A8AA000C 	 .word 201370280
 1003              	 .cfi_endproc
 1004              	.LFE165:
 1006              	 .section .text.XMC_FLASH_lRepairPhysicalSectorCommand,"ax",%progbits
 1007              	 .align 2
 1008              	 .global XMC_FLASH_lRepairPhysicalSectorCommand
 1009              	 .thumb
 1010              	 .thumb_func
 1012              	XMC_FLASH_lRepairPhysicalSectorCommand:
 1013              	.LFB166:
 325:../Libraries/XMCLib/src/xmc4_flash.c **** 
 326:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 327:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to erase physical sector-4 which is starting with the specified address
 328:../Libraries/XMCLib/src/xmc4_flash.c ****  * This command is only available if PROCON1.PRS = 1.
 329:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 330:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lRepairPhysicalSectorCommand(void)
 331:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1014              	 .loc 1 331 0
 1015              	 .cfi_startproc
 1016              	 
 1017              	 
 1018              	 
 1019 0000 80B4     	 push {r7}
 1020              	.LCFI82:
 1021              	 .cfi_def_cfa_offset 4
 1022              	 .cfi_offset 7,-4
 1023 0002 83B0     	 sub sp,sp,#12
 1024              	.LCFI83:
 1025              	 .cfi_def_cfa_offset 16
 1026 0004 00AF     	 add r7,sp,#0
 1027              	.LCFI84:
 1028              	 .cfi_def_cfa_register 7
 332:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 333:../Libraries/XMCLib/src/xmc4_flash.c **** 
 334:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1029              	 .loc 1 334 0
 1030 0006 114B     	 ldr r3,.L50
 1031 0008 7B60     	 str r3,[r7,#4]
 335:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 1032              	 .loc 1 335 0
 1033 000a 7B68     	 ldr r3,[r7,#4]
 1034 000c AA22     	 movs r2,#170
 1035 000e 1A60     	 str r2,[r3]
 336:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1036              	 .loc 1 336 0
 1037 0010 0F4B     	 ldr r3,.L50+4
 1038 0012 7B60     	 str r3,[r7,#4]
 337:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 1039              	 .loc 1 337 0
 1040 0014 7B68     	 ldr r3,[r7,#4]
 1041 0016 5522     	 movs r2,#85
 1042 0018 1A60     	 str r2,[r3]
 338:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1043              	 .loc 1 338 0
 1044 001a 0C4B     	 ldr r3,.L50
 1045 001c 7B60     	 str r3,[r7,#4]
 339:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x80U;
 1046              	 .loc 1 339 0
 1047 001e 7B68     	 ldr r3,[r7,#4]
 1048 0020 8022     	 movs r2,#128
 1049 0022 1A60     	 str r2,[r3]
 340:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1050              	 .loc 1 340 0
 1051 0024 094B     	 ldr r3,.L50
 1052 0026 7B60     	 str r3,[r7,#4]
 341:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 1053              	 .loc 1 341 0
 1054 0028 7B68     	 ldr r3,[r7,#4]
 1055 002a AA22     	 movs r2,#170
 1056 002c 1A60     	 str r2,[r3]
 342:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1057              	 .loc 1 342 0
 1058 002e 084B     	 ldr r3,.L50+4
 1059 0030 7B60     	 str r3,[r7,#4]
 343:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 1060              	 .loc 1 343 0
 1061 0032 7B68     	 ldr r3,[r7,#4]
 1062 0034 5522     	 movs r2,#85
 1063 0036 1A60     	 str r2,[r3]
 344:../Libraries/XMCLib/src/xmc4_flash.c ****   address = XMC_FLASH_PHY_SECTOR_4;
 1064              	 .loc 1 344 0
 1065 0038 064B     	 ldr r3,.L50+8
 1066 003a 7B60     	 str r3,[r7,#4]
 345:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x40U;
 1067              	 .loc 1 345 0
 1068 003c 7B68     	 ldr r3,[r7,#4]
 1069 003e 4022     	 movs r2,#64
 1070 0040 1A60     	 str r2,[r3]
 346:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1071              	 .loc 1 346 0
 1072 0042 0C37     	 adds r7,r7,#12
 1073              	.LCFI85:
 1074              	 .cfi_def_cfa_offset 4
 1075 0044 BD46     	 mov sp,r7
 1076              	.LCFI86:
 1077              	 .cfi_def_cfa_register 13
 1078              	 
 1079 0046 5DF8047B 	 ldr r7,[sp],#4
 1080              	.LCFI87:
 1081              	 .cfi_restore 7
 1082              	 .cfi_def_cfa_offset 0
 1083 004a 7047     	 bx lr
 1084              	.L51:
 1085              	 .align 2
 1086              	.L50:
 1087 004c 5455000C 	 .word 201348436
 1088 0050 A8AA000C 	 .word 201370280
 1089 0054 0000010C 	 .word 201392128
 1090              	 .cfi_endproc
 1091              	.LFE166:
 1093              	 .section .text.XMC_FLASH_ErasePhysicalSector,"ax",%progbits
 1094              	 .align 2
 1095              	 .global XMC_FLASH_ErasePhysicalSector
 1096              	 .thumb
 1097              	 .thumb_func
 1099              	XMC_FLASH_ErasePhysicalSector:
 1100              	.LFB167:
 347:../Libraries/XMCLib/src/xmc4_flash.c **** 
 348:../Libraries/XMCLib/src/xmc4_flash.c ****  /* 
 349:../Libraries/XMCLib/src/xmc4_flash.c ****   * This API erase the physical sector
 350:../Libraries/XMCLib/src/xmc4_flash.c ****   */
 351:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ErasePhysicalSector(uint32_t *address)
 352:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1101              	 .loc 1 352 0
 1102              	 .cfi_startproc
 1103              	 
 1104              	 
 1105 0000 80B5     	 push {r7,lr}
 1106              	.LCFI88:
 1107              	 .cfi_def_cfa_offset 8
 1108              	 .cfi_offset 7,-8
 1109              	 .cfi_offset 14,-4
 1110 0002 82B0     	 sub sp,sp,#8
 1111              	.LCFI89:
 1112              	 .cfi_def_cfa_offset 16
 1113 0004 00AF     	 add r7,sp,#0
 1114              	.LCFI90:
 1115              	 .cfi_def_cfa_register 7
 1116 0006 7860     	 str r0,[r7,#4]
 353:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 1117              	 .loc 1 353 0
 1118 0008 FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 354:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lErasePhysicalSectorCommand(address);
 1119              	 .loc 1 354 0
 1120 000c 7868     	 ldr r0,[r7,#4]
 1121 000e FFF7FEFF 	 bl XMC_FLASH_lErasePhysicalSectorCommand
 355:../Libraries/XMCLib/src/xmc4_flash.c **** 
 356:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 357:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 1122              	 .loc 1 357 0
 1123 0012 00BF     	 nop
 1124              	.L53:
 1125              	 .loc 1 357 0 is_stmt 0 discriminator 1
 1126 0014 054B     	 ldr r3,.L54
 1127 0016 03F58053 	 add r3,r3,#4096
 1128 001a 1033     	 adds r3,r3,#16
 1129 001c 1B68     	 ldr r3,[r3]
 1130 001e 03F00103 	 and r3,r3,#1
 1131 0022 002B     	 cmp r3,#0
 1132 0024 F6D1     	 bne .L53
 358:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1133              	 .loc 1 358 0 is_stmt 1
 1134 0026 0837     	 adds r7,r7,#8
 1135              	.LCFI91:
 1136              	 .cfi_def_cfa_offset 8
 1137 0028 BD46     	 mov sp,r7
 1138              	.LCFI92:
 1139              	 .cfi_def_cfa_register 13
 1140              	 
 1141 002a 80BD     	 pop {r7,pc}
 1142              	.L55:
 1143              	 .align 2
 1144              	.L54:
 1145 002c 00100058 	 .word 1476399104
 1146              	 .cfi_endproc
 1147              	.LFE167:
 1149              	 .section .text.XMC_FLASH_RepairPhysicalSector,"ax",%progbits
 1150              	 .align 2
 1151              	 .global XMC_FLASH_RepairPhysicalSector
 1152              	 .thumb
 1153              	 .thumb_func
 1155              	XMC_FLASH_RepairPhysicalSector:
 1156              	.LFB168:
 359:../Libraries/XMCLib/src/xmc4_flash.c **** 
 360:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 361:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API repair the physical sector
 362:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 363:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_RepairPhysicalSector(void)
 364:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1157              	 .loc 1 364 0
 1158              	 .cfi_startproc
 1159              	 
 1160              	 
 1161 0000 80B5     	 push {r7,lr}
 1162              	.LCFI93:
 1163              	 .cfi_def_cfa_offset 8
 1164              	 .cfi_offset 7,-8
 1165              	 .cfi_offset 14,-4
 1166 0002 00AF     	 add r7,sp,#0
 1167              	.LCFI94:
 1168              	 .cfi_def_cfa_register 7
 365:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 1169              	 .loc 1 365 0
 1170 0004 FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 366:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lRepairPhysicalSectorCommand();
 1171              	 .loc 1 366 0
 1172 0008 FFF7FEFF 	 bl XMC_FLASH_lRepairPhysicalSectorCommand
 367:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1173              	 .loc 1 367 0
 1174 000c 80BD     	 pop {r7,pc}
 1175              	 .cfi_endproc
 1176              	.LFE168:
 1178 000e 00BF     	 .section .text.XMC_FLASH_EraseUCB,"ax",%progbits
 1179              	 .align 2
 1180              	 .global XMC_FLASH_EraseUCB
 1181              	 .thumb
 1182              	 .thumb_func
 1184              	XMC_FLASH_EraseUCB:
 1185              	.LFB169:
 368:../Libraries/XMCLib/src/xmc4_flash.c **** 
 369:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 370:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to erase UCB sector which is starting with the specified address
 371:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 372:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_EraseUCB(uint32_t *ucb_sector_start_address)
 373:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1186              	 .loc 1 373 0
 1187              	 .cfi_startproc
 1188              	 
 1189              	 
 1190              	 
 1191 0000 80B4     	 push {r7}
 1192              	.LCFI95:
 1193              	 .cfi_def_cfa_offset 4
 1194              	 .cfi_offset 7,-4
 1195 0002 85B0     	 sub sp,sp,#20
 1196              	.LCFI96:
 1197              	 .cfi_def_cfa_offset 24
 1198 0004 00AF     	 add r7,sp,#0
 1199              	.LCFI97:
 1200              	 .cfi_def_cfa_register 7
 1201 0006 7860     	 str r0,[r7,#4]
 374:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 375:../Libraries/XMCLib/src/xmc4_flash.c **** 
 376:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1202              	 .loc 1 376 0
 1203 0008 164B     	 ldr r3,.L59
 1204 000a FB60     	 str r3,[r7,#12]
 377:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 1205              	 .loc 1 377 0
 1206 000c FB68     	 ldr r3,[r7,#12]
 1207 000e AA22     	 movs r2,#170
 1208 0010 1A60     	 str r2,[r3]
 378:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1209              	 .loc 1 378 0
 1210 0012 154B     	 ldr r3,.L59+4
 1211 0014 FB60     	 str r3,[r7,#12]
 379:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 1212              	 .loc 1 379 0
 1213 0016 FB68     	 ldr r3,[r7,#12]
 1214 0018 5522     	 movs r2,#85
 1215 001a 1A60     	 str r2,[r3]
 380:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1216              	 .loc 1 380 0
 1217 001c 114B     	 ldr r3,.L59
 1218 001e FB60     	 str r3,[r7,#12]
 381:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x80U;
 1219              	 .loc 1 381 0
 1220 0020 FB68     	 ldr r3,[r7,#12]
 1221 0022 8022     	 movs r2,#128
 1222 0024 1A60     	 str r2,[r3]
 382:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1223              	 .loc 1 382 0
 1224 0026 0F4B     	 ldr r3,.L59
 1225 0028 FB60     	 str r3,[r7,#12]
 383:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 1226              	 .loc 1 383 0
 1227 002a FB68     	 ldr r3,[r7,#12]
 1228 002c AA22     	 movs r2,#170
 1229 002e 1A60     	 str r2,[r3]
 384:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1230              	 .loc 1 384 0
 1231 0030 0D4B     	 ldr r3,.L59+4
 1232 0032 FB60     	 str r3,[r7,#12]
 385:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 1233              	 .loc 1 385 0
 1234 0034 FB68     	 ldr r3,[r7,#12]
 1235 0036 5522     	 movs r2,#85
 1236 0038 1A60     	 str r2,[r3]
 386:../Libraries/XMCLib/src/xmc4_flash.c ****   address = ucb_sector_start_address;
 1237              	 .loc 1 386 0
 1238 003a 7B68     	 ldr r3,[r7,#4]
 1239 003c FB60     	 str r3,[r7,#12]
 387:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xc0U;
 1240              	 .loc 1 387 0
 1241 003e FB68     	 ldr r3,[r7,#12]
 1242 0040 C022     	 movs r2,#192
 1243 0042 1A60     	 str r2,[r3]
 388:../Libraries/XMCLib/src/xmc4_flash.c **** 
 389:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 390:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 1244              	 .loc 1 390 0
 1245 0044 00BF     	 nop
 1246              	.L58:
 1247              	 .loc 1 390 0 is_stmt 0 discriminator 1
 1248 0046 094B     	 ldr r3,.L59+8
 1249 0048 03F58053 	 add r3,r3,#4096
 1250 004c 1033     	 adds r3,r3,#16
 1251 004e 1B68     	 ldr r3,[r3]
 1252 0050 03F00103 	 and r3,r3,#1
 1253 0054 002B     	 cmp r3,#0
 1254 0056 F6D1     	 bne .L58
 391:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1255              	 .loc 1 391 0 is_stmt 1
 1256 0058 1437     	 adds r7,r7,#20
 1257              	.LCFI98:
 1258              	 .cfi_def_cfa_offset 4
 1259 005a BD46     	 mov sp,r7
 1260              	.LCFI99:
 1261              	 .cfi_def_cfa_register 13
 1262              	 
 1263 005c 5DF8047B 	 ldr r7,[sp],#4
 1264              	.LCFI100:
 1265              	 .cfi_restore 7
 1266              	 .cfi_def_cfa_offset 0
 1267 0060 7047     	 bx lr
 1268              	.L60:
 1269 0062 00BF     	 .align 2
 1270              	.L59:
 1271 0064 5455000C 	 .word 201348436
 1272 0068 A8AA000C 	 .word 201370280
 1273 006c 00100058 	 .word 1476399104
 1274              	 .cfi_endproc
 1275              	.LFE169:
 1277              	 .section .text.XMC_FLASH_Reset,"ax",%progbits
 1278              	 .align 2
 1279              	 .global XMC_FLASH_Reset
 1280              	 .thumb
 1281              	 .thumb_func
 1283              	XMC_FLASH_Reset:
 1284              	.LFB170:
 392:../Libraries/XMCLib/src/xmc4_flash.c **** 
 393:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 394:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to reset the status of the PFLASH
 395:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 396:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_Reset(void)
 397:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1285              	 .loc 1 397 0
 1286              	 .cfi_startproc
 1287              	 
 1288              	 
 1289              	 
 1290 0000 80B4     	 push {r7}
 1291              	.LCFI101:
 1292              	 .cfi_def_cfa_offset 4
 1293              	 .cfi_offset 7,-4
 1294 0002 83B0     	 sub sp,sp,#12
 1295              	.LCFI102:
 1296              	 .cfi_def_cfa_offset 16
 1297 0004 00AF     	 add r7,sp,#0
 1298              	.LCFI103:
 1299              	 .cfi_def_cfa_register 7
 398:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 399:../Libraries/XMCLib/src/xmc4_flash.c **** 
 400:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1300              	 .loc 1 400 0
 1301 0006 054B     	 ldr r3,.L62
 1302 0008 7B60     	 str r3,[r7,#4]
 401:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xf0U;
 1303              	 .loc 1 401 0
 1304 000a 7B68     	 ldr r3,[r7,#4]
 1305 000c F022     	 movs r2,#240
 1306 000e 1A60     	 str r2,[r3]
 402:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1307              	 .loc 1 402 0
 1308 0010 0C37     	 adds r7,r7,#12
 1309              	.LCFI104:
 1310              	 .cfi_def_cfa_offset 4
 1311 0012 BD46     	 mov sp,r7
 1312              	.LCFI105:
 1313              	 .cfi_def_cfa_register 13
 1314              	 
 1315 0014 5DF8047B 	 ldr r7,[sp],#4
 1316              	.LCFI106:
 1317              	 .cfi_restore 7
 1318              	 .cfi_def_cfa_offset 0
 1319 0018 7047     	 bx lr
 1320              	.L63:
 1321 001a 00BF     	 .align 2
 1322              	.L62:
 1323 001c 5455000C 	 .word 201348436
 1324              	 .cfi_endproc
 1325              	.LFE170:
 1327              	 .section .text.XMC_FLASH_InstallBMI,"ax",%progbits
 1328              	 .align 2
 1329              	 .global XMC_FLASH_InstallBMI
 1330              	 .thumb
 1331              	 .thumb_func
 1333              	XMC_FLASH_InstallBMI:
 1334              	.LFB171:
 403:../Libraries/XMCLib/src/xmc4_flash.c **** 
 404:../Libraries/XMCLib/src/xmc4_flash.c **** #define BMI_STRING_BYTE_CNT 30
 405:../Libraries/XMCLib/src/xmc4_flash.c **** 
 406:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_InstallBMI(XMC_FLASH_BMI_STRING_t *const bmi_string)
 407:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1335              	 .loc 1 407 0
 1336              	 .cfi_startproc
 1337              	 
 1338              	 
 1339 0000 80B5     	 push {r7,lr}
 1340              	.LCFI107:
 1341              	 .cfi_def_cfa_offset 8
 1342              	 .cfi_offset 7,-8
 1343              	 .cfi_offset 14,-4
 1344 0002 86B0     	 sub sp,sp,#24
 1345              	.LCFI108:
 1346              	 .cfi_def_cfa_offset 32
 1347 0004 00AF     	 add r7,sp,#0
 1348              	.LCFI109:
 1349              	 .cfi_def_cfa_register 7
 1350 0006 7860     	 str r0,[r7,#4]
 408:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t checksum = 0;
 1351              	 .loc 1 408 0
 1352 0008 0023     	 movs r3,#0
 1353 000a 7B61     	 str r3,[r7,#20]
 1354              	.LBB2:
 409:../Libraries/XMCLib/src/xmc4_flash.c ****   for (int i = 0; i < BMI_STRING_BYTE_CNT; ++i)
 1355              	 .loc 1 409 0
 1356 000c 0023     	 movs r3,#0
 1357 000e 3B61     	 str r3,[r7,#16]
 1358 0010 0AE0     	 b .L65
 1359              	.L66:
 410:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 411:../Libraries/XMCLib/src/xmc4_flash.c **** 	checksum ^= ((const uint8_t *)bmi_string)[i];
 1360              	 .loc 1 411 0 discriminator 3
 1361 0012 3B69     	 ldr r3,[r7,#16]
 1362 0014 7A68     	 ldr r2,[r7,#4]
 1363 0016 1344     	 add r3,r3,r2
 1364 0018 1B78     	 ldrb r3,[r3]
 1365 001a 1A46     	 mov r2,r3
 1366 001c 7B69     	 ldr r3,[r7,#20]
 1367 001e 5340     	 eors r3,r3,r2
 1368 0020 7B61     	 str r3,[r7,#20]
 409:../Libraries/XMCLib/src/xmc4_flash.c ****   for (int i = 0; i < BMI_STRING_BYTE_CNT; ++i)
 1369              	 .loc 1 409 0 discriminator 3
 1370 0022 3B69     	 ldr r3,[r7,#16]
 1371 0024 0133     	 adds r3,r3,#1
 1372 0026 3B61     	 str r3,[r7,#16]
 1373              	.L65:
 409:../Libraries/XMCLib/src/xmc4_flash.c ****   for (int i = 0; i < BMI_STRING_BYTE_CNT; ++i)
 1374              	 .loc 1 409 0 is_stmt 0 discriminator 1
 1375 0028 3B69     	 ldr r3,[r7,#16]
 1376 002a 1D2B     	 cmp r3,#29
 1377 002c F1DD     	 ble .L66
 1378              	.LBE2:
 412:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 413:../Libraries/XMCLib/src/xmc4_flash.c **** 
 414:../Libraries/XMCLib/src/xmc4_flash.c ****   bmi_string->reserved = checksum;
 1379              	 .loc 1 414 0 is_stmt 1
 1380 002e 7B68     	 ldr r3,[r7,#4]
 1381 0030 7A69     	 ldr r2,[r7,#20]
 1382 0032 1A62     	 str r2,[r3,#32]
 415:../Libraries/XMCLib/src/xmc4_flash.c **** 
 416:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 1383              	 .loc 1 416 0
 1384 0034 FFF7FEFF 	 bl XMC_FLASH_lEnterPageModeCommand
 417:../Libraries/XMCLib/src/xmc4_flash.c **** 
 418:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[0], ((const uint32_t *)bmi_string)[1]);
 1385              	 .loc 1 418 0
 1386 0038 7B68     	 ldr r3,[r7,#4]
 1387 003a 1A68     	 ldr r2,[r3]
 1388 003c 7B68     	 ldr r3,[r7,#4]
 1389 003e 0433     	 adds r3,r3,#4
 1390 0040 1B68     	 ldr r3,[r3]
 1391 0042 1046     	 mov r0,r2
 1392 0044 1946     	 mov r1,r3
 1393 0046 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 419:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[2], ((const uint32_t *)bmi_string)[3]);
 1394              	 .loc 1 419 0
 1395 004a 7B68     	 ldr r3,[r7,#4]
 1396 004c 0833     	 adds r3,r3,#8
 1397 004e 1A68     	 ldr r2,[r3]
 1398 0050 7B68     	 ldr r3,[r7,#4]
 1399 0052 0C33     	 adds r3,r3,#12
 1400 0054 1B68     	 ldr r3,[r3]
 1401 0056 1046     	 mov r0,r2
 1402 0058 1946     	 mov r1,r3
 1403 005a FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 420:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[4], ((const uint32_t *)bmi_string)[5]);
 1404              	 .loc 1 420 0
 1405 005e 7B68     	 ldr r3,[r7,#4]
 1406 0060 1033     	 adds r3,r3,#16
 1407 0062 1A68     	 ldr r2,[r3]
 1408 0064 7B68     	 ldr r3,[r7,#4]
 1409 0066 1433     	 adds r3,r3,#20
 1410 0068 1B68     	 ldr r3,[r3]
 1411 006a 1046     	 mov r0,r2
 1412 006c 1946     	 mov r1,r3
 1413 006e FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 421:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[6], ((const uint32_t *)bmi_string)[7]);
 1414              	 .loc 1 421 0
 1415 0072 7B68     	 ldr r3,[r7,#4]
 1416 0074 1833     	 adds r3,r3,#24
 1417 0076 1A68     	 ldr r2,[r3]
 1418 0078 7B68     	 ldr r3,[r7,#4]
 1419 007a 1C33     	 adds r3,r3,#28
 1420 007c 1B68     	 ldr r3,[r3]
 1421 007e 1046     	 mov r0,r2
 1422 0080 1946     	 mov r1,r3
 1423 0082 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 422:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[8], 0);
 1424              	 .loc 1 422 0
 1425 0086 7B68     	 ldr r3,[r7,#4]
 1426 0088 2033     	 adds r3,r3,#32
 1427 008a 1B68     	 ldr r3,[r3]
 1428 008c 1846     	 mov r0,r3
 1429 008e 0021     	 movs r1,#0
 1430 0090 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 1431              	.LBB3:
 423:../Libraries/XMCLib/src/xmc4_flash.c **** 
 424:../Libraries/XMCLib/src/xmc4_flash.c ****   for (uint32_t idx = 0U; idx < (XMC_FLASH_WORDS_PER_PAGE - XMC_FLASH_BMI_STRING_WORDS); idx += 2U)
 1432              	 .loc 1 424 0
 1433 0094 0023     	 movs r3,#0
 1434 0096 FB60     	 str r3,[r7,#12]
 1435 0098 06E0     	 b .L67
 1436              	.L68:
 425:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 426:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(0UL, 0UL);
 1437              	 .loc 1 426 0 discriminator 3
 1438 009a 0020     	 movs r0,#0
 1439 009c 0021     	 movs r1,#0
 1440 009e FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 424:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1441              	 .loc 1 424 0 discriminator 3
 1442 00a2 FB68     	 ldr r3,[r7,#12]
 1443 00a4 0233     	 adds r3,r3,#2
 1444 00a6 FB60     	 str r3,[r7,#12]
 1445              	.L67:
 424:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1446              	 .loc 1 424 0 is_stmt 0 discriminator 1
 1447 00a8 FB68     	 ldr r3,[r7,#12]
 1448 00aa 352B     	 cmp r3,#53
 1449 00ac F5D9     	 bls .L68
 1450              	.LBE3:
 427:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 428:../Libraries/XMCLib/src/xmc4_flash.c **** 
 429:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lWriteUCBPageCommand((uint32_t *)((uint32_t)XMC_FLASH_UCB2 + XMC_FLASH_BYTES_PER_PAGE))
 1451              	 .loc 1 429 0 is_stmt 1
 1452 00ae 0848     	 ldr r0,.L70
 1453 00b0 FFF7FEFF 	 bl XMC_FLASH_lWriteUCBPageCommand
 430:../Libraries/XMCLib/src/xmc4_flash.c **** 
 431:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 432:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 1454              	 .loc 1 432 0
 1455 00b4 00BF     	 nop
 1456              	.L69:
 1457              	 .loc 1 432 0 is_stmt 0 discriminator 1
 1458 00b6 074B     	 ldr r3,.L70+4
 1459 00b8 03F58053 	 add r3,r3,#4096
 1460 00bc 1033     	 adds r3,r3,#16
 1461 00be 1B68     	 ldr r3,[r3]
 1462 00c0 03F00103 	 and r3,r3,#1
 1463 00c4 002B     	 cmp r3,#0
 1464 00c6 F6D1     	 bne .L69
 433:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1465              	 .loc 1 433 0 is_stmt 1
 1466 00c8 1837     	 adds r7,r7,#24
 1467              	.LCFI110:
 1468              	 .cfi_def_cfa_offset 8
 1469 00ca BD46     	 mov sp,r7
 1470              	.LCFI111:
 1471              	 .cfi_def_cfa_register 13
 1472              	 
 1473 00cc 80BD     	 pop {r7,pc}
 1474              	.L71:
 1475 00ce 00BF     	 .align 2
 1476              	.L70:
 1477 00d0 0009000C 	 .word 201328896
 1478 00d4 00100058 	 .word 1476399104
 1479              	 .cfi_endproc
 1480              	.LFE171:
 1482              	 .section .text.XMC_FLASH_InstallProtection,"ax",%progbits
 1483              	 .align 2
 1484              	 .global XMC_FLASH_InstallProtection
 1485              	 .thumb
 1486              	 .thumb_func
 1488              	XMC_FLASH_InstallProtection:
 1489              	.LFB172:
 434:../Libraries/XMCLib/src/xmc4_flash.c **** 
 435:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 436:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API install the global read and sector write protection for the specified user
 437:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 438:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_InstallProtection(uint8_t user,
 439:../Libraries/XMCLib/src/xmc4_flash.c ****                                  uint32_t protection_mask,
 440:../Libraries/XMCLib/src/xmc4_flash.c **** 	                             uint32_t password_0,
 441:../Libraries/XMCLib/src/xmc4_flash.c ****                                  uint32_t password_1)
 442:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1490              	 .loc 1 442 0
 1491              	 .cfi_startproc
 1492              	 
 1493              	 
 1494 0000 80B5     	 push {r7,lr}
 1495              	.LCFI112:
 1496              	 .cfi_def_cfa_offset 8
 1497              	 .cfi_offset 7,-8
 1498              	 .cfi_offset 14,-4
 1499 0002 86B0     	 sub sp,sp,#24
 1500              	.LCFI113:
 1501              	 .cfi_def_cfa_offset 32
 1502 0004 00AF     	 add r7,sp,#0
 1503              	.LCFI114:
 1504              	 .cfi_def_cfa_register 7
 1505 0006 B960     	 str r1,[r7,#8]
 1506 0008 7A60     	 str r2,[r7,#4]
 1507 000a 3B60     	 str r3,[r7]
 1508 000c 0346     	 mov r3,r0
 1509 000e FB73     	 strb r3,[r7,#15]
 443:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t idx;
 444:../Libraries/XMCLib/src/xmc4_flash.c ****   
 445:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_ASSERT(" XMC_FLASH_ConfigureProtection: User level out of range", (user < 3U))
 446:../Libraries/XMCLib/src/xmc4_flash.c **** 
 447:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 1510              	 .loc 1 447 0
 1511 0010 FFF7FEFF 	 bl XMC_FLASH_lEnterPageModeCommand
 448:../Libraries/XMCLib/src/xmc4_flash.c **** 
 449:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(protection_mask, 0UL);
 1512              	 .loc 1 449 0
 1513 0014 B868     	 ldr r0,[r7,#8]
 1514 0016 0021     	 movs r1,#0
 1515 0018 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 450:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(protection_mask, 0UL);
 1516              	 .loc 1 450 0
 1517 001c B868     	 ldr r0,[r7,#8]
 1518 001e 0021     	 movs r1,#0
 1519 0020 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 451:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(password_0, password_1);
 1520              	 .loc 1 451 0
 1521 0024 7868     	 ldr r0,[r7,#4]
 1522 0026 3968     	 ldr r1,[r7]
 1523 0028 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 452:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(password_0, password_1);
 1524              	 .loc 1 452 0
 1525 002c 7868     	 ldr r0,[r7,#4]
 1526 002e 3968     	 ldr r1,[r7]
 1527 0030 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 453:../Libraries/XMCLib/src/xmc4_flash.c ****   
 454:../Libraries/XMCLib/src/xmc4_flash.c ****   for (idx = 0U; idx < (XMC_FLASH_WORDS_PER_PAGE - XMC_FLASH_PROTECTION_CONFIGURATION_WORDS); idx +
 1528              	 .loc 1 454 0
 1529 0034 0023     	 movs r3,#0
 1530 0036 7B61     	 str r3,[r7,#20]
 1531 0038 06E0     	 b .L73
 1532              	.L74:
 455:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 456:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(0UL, 0UL);
 1533              	 .loc 1 456 0 discriminator 3
 1534 003a 0020     	 movs r0,#0
 1535 003c 0021     	 movs r1,#0
 1536 003e FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 454:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1537              	 .loc 1 454 0 discriminator 3
 1538 0042 7B69     	 ldr r3,[r7,#20]
 1539 0044 0233     	 adds r3,r3,#2
 1540 0046 7B61     	 str r3,[r7,#20]
 1541              	.L73:
 454:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1542              	 .loc 1 454 0 is_stmt 0 discriminator 1
 1543 0048 7B69     	 ldr r3,[r7,#20]
 1544 004a 372B     	 cmp r3,#55
 1545 004c F5D9     	 bls .L74
 457:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 458:../Libraries/XMCLib/src/xmc4_flash.c **** 
 459:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lWriteUCBPageCommand((uint32_t *)((uint32_t)XMC_FLASH_UCB0 + (user * XMC_FLASH_BYTES_PE
 1546              	 .loc 1 459 0 is_stmt 1
 1547 004e FB7B     	 ldrb r3,[r7,#15]
 1548 0050 03F54033 	 add r3,r3,#196608
 1549 0054 9B02     	 lsls r3,r3,#10
 1550 0056 1846     	 mov r0,r3
 1551 0058 FFF7FEFF 	 bl XMC_FLASH_lWriteUCBPageCommand
 460:../Libraries/XMCLib/src/xmc4_flash.c **** 
 461:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 462:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 1552              	 .loc 1 462 0
 1553 005c 00BF     	 nop
 1554              	.L75:
 1555              	 .loc 1 462 0 is_stmt 0 discriminator 1
 1556 005e 064B     	 ldr r3,.L76
 1557 0060 03F58053 	 add r3,r3,#4096
 1558 0064 1033     	 adds r3,r3,#16
 1559 0066 1B68     	 ldr r3,[r3]
 1560 0068 03F00103 	 and r3,r3,#1
 1561 006c 002B     	 cmp r3,#0
 1562 006e F6D1     	 bne .L75
 463:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1563              	 .loc 1 463 0 is_stmt 1
 1564 0070 1837     	 adds r7,r7,#24
 1565              	.LCFI115:
 1566              	 .cfi_def_cfa_offset 8
 1567 0072 BD46     	 mov sp,r7
 1568              	.LCFI116:
 1569              	 .cfi_def_cfa_register 13
 1570              	 
 1571 0074 80BD     	 pop {r7,pc}
 1572              	.L77:
 1573 0076 00BF     	 .align 2
 1574              	.L76:
 1575 0078 00100058 	 .word 1476399104
 1576              	 .cfi_endproc
 1577              	.LFE172:
 1579              	 .section .text.XMC_FLASH_ConfirmProtection,"ax",%progbits
 1580              	 .align 2
 1581              	 .global XMC_FLASH_ConfirmProtection
 1582              	 .thumb
 1583              	 .thumb_func
 1585              	XMC_FLASH_ConfirmProtection:
 1586              	.LFB173:
 464:../Libraries/XMCLib/src/xmc4_flash.c **** 
 465:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 466:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API confirm the protection. So that This sectors are locked with the specified protection.
 467:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 468:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ConfirmProtection(uint8_t user)
 469:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1587              	 .loc 1 469 0
 1588              	 .cfi_startproc
 1589              	 
 1590              	 
 1591 0000 80B5     	 push {r7,lr}
 1592              	.LCFI117:
 1593              	 .cfi_def_cfa_offset 8
 1594              	 .cfi_offset 7,-8
 1595              	 .cfi_offset 14,-4
 1596 0002 84B0     	 sub sp,sp,#16
 1597              	.LCFI118:
 1598              	 .cfi_def_cfa_offset 24
 1599 0004 00AF     	 add r7,sp,#0
 1600              	.LCFI119:
 1601              	 .cfi_def_cfa_register 7
 1602 0006 0346     	 mov r3,r0
 1603 0008 FB71     	 strb r3,[r7,#7]
 470:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t idx;
 471:../Libraries/XMCLib/src/xmc4_flash.c **** 
 472:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_ASSERT(" XMC_FLASH_ConfirmProtection: User level out of range", (user < 3U))
 473:../Libraries/XMCLib/src/xmc4_flash.c **** 
 474:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 1604              	 .loc 1 474 0
 1605 000a FFF7FEFF 	 bl XMC_FLASH_lEnterPageModeCommand
 475:../Libraries/XMCLib/src/xmc4_flash.c **** 
 476:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(XMC_FLASH_PROT_CONFIRM_CODE, 0U);
 1606              	 .loc 1 476 0
 1607 000e 1548     	 ldr r0,.L82
 1608 0010 0021     	 movs r1,#0
 1609 0012 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 477:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(XMC_FLASH_PROT_CONFIRM_CODE, 0U);
 1610              	 .loc 1 477 0
 1611 0016 1348     	 ldr r0,.L82
 1612 0018 0021     	 movs r1,#0
 1613 001a FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 478:../Libraries/XMCLib/src/xmc4_flash.c **** 
 479:../Libraries/XMCLib/src/xmc4_flash.c ****   /* Fill the rest of page buffer with zeros*/
 480:../Libraries/XMCLib/src/xmc4_flash.c ****   for (idx = 0UL; idx < (XMC_FLASH_WORDS_PER_PAGE - XMC_FLASH_PROT_CONFIRM_WORDS); idx += 2U)
 1614              	 .loc 1 480 0
 1615 001e 0023     	 movs r3,#0
 1616 0020 FB60     	 str r3,[r7,#12]
 1617 0022 06E0     	 b .L79
 1618              	.L80:
 481:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 482:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(0UL, 0UL);
 1619              	 .loc 1 482 0 discriminator 3
 1620 0024 0020     	 movs r0,#0
 1621 0026 0021     	 movs r1,#0
 1622 0028 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 480:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1623              	 .loc 1 480 0 discriminator 3
 1624 002c FB68     	 ldr r3,[r7,#12]
 1625 002e 0233     	 adds r3,r3,#2
 1626 0030 FB60     	 str r3,[r7,#12]
 1627              	.L79:
 480:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1628              	 .loc 1 480 0 is_stmt 0 discriminator 1
 1629 0032 FB68     	 ldr r3,[r7,#12]
 1630 0034 3B2B     	 cmp r3,#59
 1631 0036 F5D9     	 bls .L80
 483:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 484:../Libraries/XMCLib/src/xmc4_flash.c **** 
 485:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lWriteUCBPageCommand((uint32_t *)((uint32_t)XMC_FLASH_UCB0 + 
 1632              	 .loc 1 485 0 is_stmt 1
 1633 0038 FB79     	 ldrb r3,[r7,#7]
 1634 003a 03F54033 	 add r3,r3,#196608
 1635 003e 9B02     	 lsls r3,r3,#10
 486:../Libraries/XMCLib/src/xmc4_flash.c ****                                  (user * XMC_FLASH_BYTES_PER_UCB) + XMC_FLASH_PROT_CONFIRM_OFFSET))
 1636              	 .loc 1 486 0
 1637 0040 03F50073 	 add r3,r3,#512
 485:../Libraries/XMCLib/src/xmc4_flash.c ****                                  (user * XMC_FLASH_BYTES_PER_UCB) + XMC_FLASH_PROT_CONFIRM_OFFSET))
 1638              	 .loc 1 485 0
 1639 0044 1846     	 mov r0,r3
 1640 0046 FFF7FEFF 	 bl XMC_FLASH_lWriteUCBPageCommand
 487:../Libraries/XMCLib/src/xmc4_flash.c **** 
 488:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 489:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 1641              	 .loc 1 489 0
 1642 004a 00BF     	 nop
 1643              	.L81:
 1644              	 .loc 1 489 0 is_stmt 0 discriminator 1
 1645 004c 064B     	 ldr r3,.L82+4
 1646 004e 03F58053 	 add r3,r3,#4096
 1647 0052 1033     	 adds r3,r3,#16
 1648 0054 1B68     	 ldr r3,[r3]
 1649 0056 03F00103 	 and r3,r3,#1
 1650 005a 002B     	 cmp r3,#0
 1651 005c F6D1     	 bne .L81
 490:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1652              	 .loc 1 490 0 is_stmt 1
 1653 005e 1037     	 adds r7,r7,#16
 1654              	.LCFI120:
 1655              	 .cfi_def_cfa_offset 8
 1656 0060 BD46     	 mov sp,r7
 1657              	.LCFI121:
 1658              	 .cfi_def_cfa_register 13
 1659              	 
 1660 0062 80BD     	 pop {r7,pc}
 1661              	.L83:
 1662              	 .align 2
 1663              	.L82:
 1664 0064 C315FE8A 	 .word -1963059773
 1665 0068 00100058 	 .word 1476399104
 1666              	 .cfi_endproc
 1667              	.LFE173:
 1669              	 .section .text.XMC_FLASH_VerifyReadProtection,"ax",%progbits
 1670              	 .align 2
 1671              	 .global XMC_FLASH_VerifyReadProtection
 1672              	 .thumb
 1673              	 .thumb_func
 1675              	XMC_FLASH_VerifyReadProtection:
 1676              	.LFB174:
 491:../Libraries/XMCLib/src/xmc4_flash.c **** 
 492:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 493:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API verify read protection configuration. And returns true if passwords are matching.
 494:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 495:../Libraries/XMCLib/src/xmc4_flash.c **** bool XMC_FLASH_VerifyReadProtection(uint32_t password_0, uint32_t password_1)
 496:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1677              	 .loc 1 496 0
 1678              	 .cfi_startproc
 1679              	 
 1680              	 
 1681 0000 80B5     	 push {r7,lr}
 1682              	.LCFI122:
 1683              	 .cfi_def_cfa_offset 8
 1684              	 .cfi_offset 7,-8
 1685              	 .cfi_offset 14,-4
 1686 0002 84B0     	 sub sp,sp,#16
 1687              	.LCFI123:
 1688              	 .cfi_def_cfa_offset 24
 1689 0004 00AF     	 add r7,sp,#0
 1690              	.LCFI124:
 1691              	 .cfi_def_cfa_register 7
 1692 0006 7860     	 str r0,[r7,#4]
 1693 0008 3960     	 str r1,[r7]
 497:../Libraries/XMCLib/src/xmc4_flash.c ****   bool status = false;
 1694              	 .loc 1 497 0
 1695 000a 0023     	 movs r3,#0
 1696 000c FB73     	 strb r3,[r7,#15]
 498:../Libraries/XMCLib/src/xmc4_flash.c ****   
 499:../Libraries/XMCLib/src/xmc4_flash.c ****   /* Check if read protection is installed */
 500:../Libraries/XMCLib/src/xmc4_flash.c ****   if ((XMC_FLASH_GetStatus() & (uint32_t)XMC_FLASH_STATUS_READ_PROTECTION_INSTALLED) != 0U)
 1697              	 .loc 1 500 0
 1698 000e FFF7FEFF 	 bl XMC_FLASH_GetStatus
 1699 0012 0346     	 mov r3,r0
 1700 0014 03F48023 	 and r3,r3,#262144
 1701 0018 002B     	 cmp r3,#0
 1702 001a 0FD0     	 beq .L85
 501:../Libraries/XMCLib/src/xmc4_flash.c ****   {  
 502:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lClearStatusCommand();
 1703              	 .loc 1 502 0
 1704 001c FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 503:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lDisableReadProtectionCommand(password_0, password_1);
 1705              	 .loc 1 503 0
 1706 0020 7868     	 ldr r0,[r7,#4]
 1707 0022 3968     	 ldr r1,[r7]
 1708 0024 FFF7FEFF 	 bl XMC_FLASH_lDisableReadProtectionCommand
 504:../Libraries/XMCLib/src/xmc4_flash.c **** 
 505:../Libraries/XMCLib/src/xmc4_flash.c ****     status = (bool)(XMC_FLASH_GetStatus() & (uint32_t)XMC_FLASH_STATUS_READ_PROTECTION_DISABLED_STA
 1709              	 .loc 1 505 0
 1710 0028 FFF7FEFF 	 bl XMC_FLASH_GetStatus
 1711 002c 0346     	 mov r3,r0
 1712 002e 03F40023 	 and r3,r3,#524288
 1713 0032 002B     	 cmp r3,#0
 1714 0034 14BF     	 ite ne
 1715 0036 0123     	 movne r3,#1
 1716 0038 0023     	 moveq r3,#0
 1717 003a FB73     	 strb r3,[r7,#15]
 1718              	.L85:
 506:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 507:../Libraries/XMCLib/src/xmc4_flash.c **** 
 508:../Libraries/XMCLib/src/xmc4_flash.c ****   return status;
 1719              	 .loc 1 508 0
 1720 003c FB7B     	 ldrb r3,[r7,#15]
 509:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1721              	 .loc 1 509 0
 1722 003e 1846     	 mov r0,r3
 1723 0040 1037     	 adds r7,r7,#16
 1724              	.LCFI125:
 1725              	 .cfi_def_cfa_offset 8
 1726 0042 BD46     	 mov sp,r7
 1727              	.LCFI126:
 1728              	 .cfi_def_cfa_register 13
 1729              	 
 1730 0044 80BD     	 pop {r7,pc}
 1731              	 .cfi_endproc
 1732              	.LFE174:
 1734 0046 00BF     	 .section .text.XMC_FLASH_VerifyWriteProtection,"ax",%progbits
 1735              	 .align 2
 1736              	 .global XMC_FLASH_VerifyWriteProtection
 1737              	 .thumb
 1738              	 .thumb_func
 1740              	XMC_FLASH_VerifyWriteProtection:
 1741              	.LFB175:
 510:../Libraries/XMCLib/src/xmc4_flash.c **** 
 511:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 512:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API verify sector write protection configuration. And returns true if passwords are matchin
 513:../Libraries/XMCLib/src/xmc4_flash.c ****  * specified user.
 514:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 515:../Libraries/XMCLib/src/xmc4_flash.c **** bool XMC_FLASH_VerifyWriteProtection(uint32_t user,
 516:../Libraries/XMCLib/src/xmc4_flash.c ****                                      uint32_t protection_mask, 
 517:../Libraries/XMCLib/src/xmc4_flash.c ****                                      uint32_t password_0, 
 518:../Libraries/XMCLib/src/xmc4_flash.c ****                                      uint32_t password_1)
 519:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1742              	 .loc 1 519 0
 1743              	 .cfi_startproc
 1744              	 
 1745              	 
 1746 0000 80B5     	 push {r7,lr}
 1747              	.LCFI127:
 1748              	 .cfi_def_cfa_offset 8
 1749              	 .cfi_offset 7,-8
 1750              	 .cfi_offset 14,-4
 1751 0002 86B0     	 sub sp,sp,#24
 1752              	.LCFI128:
 1753              	 .cfi_def_cfa_offset 32
 1754 0004 00AF     	 add r7,sp,#0
 1755              	.LCFI129:
 1756              	 .cfi_def_cfa_register 7
 1757 0006 F860     	 str r0,[r7,#12]
 1758 0008 B960     	 str r1,[r7,#8]
 1759 000a 7A60     	 str r2,[r7,#4]
 1760 000c 3B60     	 str r3,[r7]
 520:../Libraries/XMCLib/src/xmc4_flash.c ****   bool status = false;
 1761              	 .loc 1 520 0
 1762 000e 0023     	 movs r3,#0
 1763 0010 FB75     	 strb r3,[r7,#23]
 521:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t *flash_procon_ptr = (uint32_t *)(void*)(&(FLASH0->PROCON0) + user);
 1764              	 .loc 1 521 0
 1765 0012 FB68     	 ldr r3,[r7,#12]
 1766 0014 9A00     	 lsls r2,r3,#2
 1767 0016 1A4B     	 ldr r3,.L92
 1768 0018 1344     	 add r3,r3,r2
 1769 001a 3B61     	 str r3,[r7,#16]
 522:../Libraries/XMCLib/src/xmc4_flash.c **** 
 523:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_ASSERT(" XMC_FLASH_VerifyWriteProtection: User level out of range", (user < 2U))
 524:../Libraries/XMCLib/src/xmc4_flash.c **** 
 525:../Libraries/XMCLib/src/xmc4_flash.c ****   /* Check if write protection for selected user is installed */
 526:../Libraries/XMCLib/src/xmc4_flash.c ****   if ((XMC_FLASH_GetStatus() & (uint32_t)((uint32_t)1U << (uint32_t)((uint32_t)FLASH_FSR_WPROIN0_Po
 1770              	 .loc 1 526 0
 1771 001c FFF7FEFF 	 bl XMC_FLASH_GetStatus
 1772 0020 0246     	 mov r2,r0
 1773 0022 FB68     	 ldr r3,[r7,#12]
 1774 0024 1533     	 adds r3,r3,#21
 1775 0026 22FA03F3 	 lsr r3,r2,r3
 1776 002a 03F00103 	 and r3,r3,#1
 1777 002e 002B     	 cmp r3,#0
 1778 0030 20D0     	 beq .L88
 527:../Libraries/XMCLib/src/xmc4_flash.c ****   {  
 528:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lClearStatusCommand();
 1779              	 .loc 1 528 0
 1780 0032 FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 529:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lDisableSectorWriteProtectionCommand(user, password_0, password_1);
 1781              	 .loc 1 529 0
 1782 0036 F868     	 ldr r0,[r7,#12]
 1783 0038 7968     	 ldr r1,[r7,#4]
 1784 003a 3A68     	 ldr r2,[r7]
 1785 003c FFF7FEFF 	 bl XMC_FLASH_lDisableSectorWriteProtectionCommand
 530:../Libraries/XMCLib/src/xmc4_flash.c ****     
 531:../Libraries/XMCLib/src/xmc4_flash.c ****     status = (bool)((XMC_FLASH_GetStatus() & (uint32_t)((uint32_t)1U << (uint32_t)((uint32_t)FLASH_
 1786              	 .loc 1 531 0
 1787 0040 FFF7FEFF 	 bl XMC_FLASH_GetStatus
 1788 0044 0246     	 mov r2,r0
 1789 0046 FB68     	 ldr r3,[r7,#12]
 1790 0048 1933     	 adds r3,r3,#25
 1791 004a 22FA03F3 	 lsr r3,r2,r3
 1792 004e 03F00103 	 and r3,r3,#1
 1793 0052 002B     	 cmp r3,#0
 1794 0054 08D0     	 beq .L89
 532:../Libraries/XMCLib/src/xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1795              	 .loc 1 532 0 discriminator 1
 1796 0056 3B69     	 ldr r3,[r7,#16]
 1797 0058 1A68     	 ldr r2,[r3]
 1798 005a BB68     	 ldr r3,[r7,#8]
 1799 005c 23F40043 	 bic r3,r3,#32768
 531:../Libraries/XMCLib/src/xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1800              	 .loc 1 531 0 discriminator 1
 1801 0060 9A42     	 cmp r2,r3
 1802 0062 01D1     	 bne .L89
 531:../Libraries/XMCLib/src/xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1803              	 .loc 1 531 0 is_stmt 0 discriminator 3
 1804 0064 0123     	 movs r3,#1
 1805 0066 00E0     	 b .L90
 1806              	.L89:
 531:../Libraries/XMCLib/src/xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1807              	 .loc 1 531 0 discriminator 4
 1808 0068 0023     	 movs r3,#0
 1809              	.L90:
 531:../Libraries/XMCLib/src/xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1810              	 .loc 1 531 0 discriminator 6
 1811 006a FB75     	 strb r3,[r7,#23]
 1812 006c FB7D     	 ldrb r3,[r7,#23]
 1813 006e 03F00103 	 and r3,r3,#1
 1814 0072 FB75     	 strb r3,[r7,#23]
 1815              	.L88:
 533:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 534:../Libraries/XMCLib/src/xmc4_flash.c **** 
 535:../Libraries/XMCLib/src/xmc4_flash.c ****   return status;
 1816              	 .loc 1 535 0 is_stmt 1
 1817 0074 FB7D     	 ldrb r3,[r7,#23]
 536:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1818              	 .loc 1 536 0
 1819 0076 1846     	 mov r0,r3
 1820 0078 1837     	 adds r7,r7,#24
 1821              	.LCFI130:
 1822              	 .cfi_def_cfa_offset 8
 1823 007a BD46     	 mov sp,r7
 1824              	.LCFI131:
 1825              	 .cfi_def_cfa_register 13
 1826              	 
 1827 007c 80BD     	 pop {r7,pc}
 1828              	.L93:
 1829 007e 00BF     	 .align 2
 1830              	.L92:
 1831 0080 20200058 	 .word 1476403232
 1832              	 .cfi_endproc
 1833              	.LFE175:
 1835              	 .section .text.XMC_FLASH_ResumeProtection,"ax",%progbits
 1836              	 .align 2
 1837              	 .global XMC_FLASH_ResumeProtection
 1838              	 .thumb
 1839              	 .thumb_func
 1841              	XMC_FLASH_ResumeProtection:
 1842              	.LFB176:
 537:../Libraries/XMCLib/src/xmc4_flash.c **** 
 538:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 539:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to enables the protection as it was configured
 540:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 541:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ResumeProtection(void)
 542:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1843              	 .loc 1 542 0
 1844              	 .cfi_startproc
 1845              	 
 1846              	 
 1847              	 
 1848 0000 80B4     	 push {r7}
 1849              	.LCFI132:
 1850              	 .cfi_def_cfa_offset 4
 1851              	 .cfi_offset 7,-4
 1852 0002 83B0     	 sub sp,sp,#12
 1853              	.LCFI133:
 1854              	 .cfi_def_cfa_offset 16
 1855 0004 00AF     	 add r7,sp,#0
 1856              	.LCFI134:
 1857              	 .cfi_def_cfa_register 7
 543:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 544:../Libraries/XMCLib/src/xmc4_flash.c **** 
 545:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1858              	 .loc 1 545 0
 1859 0006 054B     	 ldr r3,.L95
 1860 0008 7B60     	 str r3,[r7,#4]
 546:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x5eU;
 1861              	 .loc 1 546 0
 1862 000a 7B68     	 ldr r3,[r7,#4]
 1863 000c 5E22     	 movs r2,#94
 1864 000e 1A60     	 str r2,[r3]
 547:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1865              	 .loc 1 547 0
 1866 0010 0C37     	 adds r7,r7,#12
 1867              	.LCFI135:
 1868              	 .cfi_def_cfa_offset 4
 1869 0012 BD46     	 mov sp,r7
 1870              	.LCFI136:
 1871              	 .cfi_def_cfa_register 13
 1872              	 
 1873 0014 5DF8047B 	 ldr r7,[sp],#4
 1874              	.LCFI137:
 1875              	 .cfi_restore 7
 1876              	 .cfi_def_cfa_offset 0
 1877 0018 7047     	 bx lr
 1878              	.L96:
 1879 001a 00BF     	 .align 2
 1880              	.L95:
 1881 001c 5455000C 	 .word 201348436
 1882              	 .cfi_endproc
 1883              	.LFE176:
 1885              	 .text
 1886              	.Letext0:
 1887              	 .file 2 "c:\\tools\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1888              	 .file 3 "c:\\tools\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1889              	 .file 4 "C:/Users/Admin/DaveWorkspaces/XMC4300_PWMTest/Libraries/CMSIS/Infineon/XMC4300_series/Include/XMC4300.h"
 1890              	 .file 5 "C:/Users/Admin/DaveWorkspaces/XMC4300_PWMTest/Libraries/XMCLib/inc/xmc4_flash.h"
 1891              	 .file 6 "C:/Users/Admin/DaveWorkspaces/XMC4300_PWMTest/Libraries/CMSIS/Include/cmsis_gcc.h"
 1892              	 .file 7 "C:/Users/Admin/DaveWorkspaces/XMC4300_PWMTest/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc4_flash.c
    {standard input}:20     .text.XMC_FLASH_lEnterPageModeCommand:00000000 $t
    {standard input}:25     .text.XMC_FLASH_lEnterPageModeCommand:00000000 XMC_FLASH_lEnterPageModeCommand
    {standard input}:66     .text.XMC_FLASH_lEnterPageModeCommand:0000001c $d
    {standard input}:71     .text.XMC_FLASH_lLoadPageCommand:00000000 $t
    {standard input}:76     .text.XMC_FLASH_lLoadPageCommand:00000000 XMC_FLASH_lLoadPageCommand
    {standard input}:125    .text.XMC_FLASH_lLoadPageCommand:00000028 $d
    {standard input}:131    .text.XMC_FLASH_lWritePageCommand:00000000 $t
    {standard input}:136    .text.XMC_FLASH_lWritePageCommand:00000000 XMC_FLASH_lWritePageCommand
    {standard input}:198    .text.XMC_FLASH_lWritePageCommand:0000003c $d
    {standard input}:204    .text.XMC_FLASH_lWriteUCBPageCommand:00000000 $t
    {standard input}:209    .text.XMC_FLASH_lWriteUCBPageCommand:00000000 XMC_FLASH_lWriteUCBPageCommand
    {standard input}:271    .text.XMC_FLASH_lWriteUCBPageCommand:0000003c $d
    {standard input}:277    .text.XMC_FLASH_lEraseSectorCommand:00000000 $t
    {standard input}:282    .text.XMC_FLASH_lEraseSectorCommand:00000000 XMC_FLASH_lEraseSectorCommand
    {standard input}:358    .text.XMC_FLASH_lEraseSectorCommand:00000050 $d
    {standard input}:364    .text.XMC_FLASH_lDisableSectorWriteProtectionCommand:00000000 $t
    {standard input}:369    .text.XMC_FLASH_lDisableSectorWriteProtectionCommand:00000000 XMC_FLASH_lDisableSectorWriteProtectionCommand
    {standard input}:447    .text.XMC_FLASH_lDisableSectorWriteProtectionCommand:00000054 $d
    {standard input}:455    .text.XMC_FLASH_lDisableReadProtectionCommand:00000000 $t
    {standard input}:460    .text.XMC_FLASH_lDisableReadProtectionCommand:00000000 XMC_FLASH_lDisableReadProtectionCommand
    {standard input}:537    .text.XMC_FLASH_lDisableReadProtectionCommand:00000050 $d
    {standard input}:545    .text.XMC_FLASH_lClearStatusCommand:00000000 $t
    {standard input}:550    .text.XMC_FLASH_lClearStatusCommand:00000000 XMC_FLASH_lClearStatusCommand
    {standard input}:590    .text.XMC_FLASH_lClearStatusCommand:0000001c $d
    {standard input}:595    .text.XMC_FLASH_ClearStatus:00000000 $t
    {standard input}:600    .text.XMC_FLASH_ClearStatus:00000000 XMC_FLASH_ClearStatus
    {standard input}:622    .text.XMC_FLASH_GetStatus:00000000 $t
    {standard input}:627    .text.XMC_FLASH_GetStatus:00000000 XMC_FLASH_GetStatus
    {standard input}:660    .text.XMC_FLASH_GetStatus:00000018 $d
    {standard input}:665    .text.XMC_FLASH_EnableEvent:00000000 $t
    {standard input}:670    .text.XMC_FLASH_EnableEvent:00000000 XMC_FLASH_EnableEvent
    {standard input}:715    .text.XMC_FLASH_EnableEvent:0000002c $d
    {standard input}:720    .text.XMC_FLASH_DisableEvent:00000000 $t
    {standard input}:725    .text.XMC_FLASH_DisableEvent:00000000 XMC_FLASH_DisableEvent
    {standard input}:771    .text.XMC_FLASH_DisableEvent:0000002c $d
    {standard input}:776    .text.XMC_FLASH_ProgramPage:00000000 $t
    {standard input}:781    .text.XMC_FLASH_ProgramPage:00000000 XMC_FLASH_ProgramPage
    {standard input}:859    .text.XMC_FLASH_ProgramPage:00000064 $d
    {standard input}:864    .text.XMC_FLASH_EraseSector:00000000 $t
    {standard input}:869    .text.XMC_FLASH_EraseSector:00000000 XMC_FLASH_EraseSector
    {standard input}:915    .text.XMC_FLASH_EraseSector:0000002c $d
    {standard input}:920    .text.XMC_FLASH_lErasePhysicalSectorCommand:00000000 $t
    {standard input}:925    .text.XMC_FLASH_lErasePhysicalSectorCommand:00000000 XMC_FLASH_lErasePhysicalSectorCommand
    {standard input}:1001   .text.XMC_FLASH_lErasePhysicalSectorCommand:00000050 $d
    {standard input}:1007   .text.XMC_FLASH_lRepairPhysicalSectorCommand:00000000 $t
    {standard input}:1012   .text.XMC_FLASH_lRepairPhysicalSectorCommand:00000000 XMC_FLASH_lRepairPhysicalSectorCommand
    {standard input}:1087   .text.XMC_FLASH_lRepairPhysicalSectorCommand:0000004c $d
    {standard input}:1094   .text.XMC_FLASH_ErasePhysicalSector:00000000 $t
    {standard input}:1099   .text.XMC_FLASH_ErasePhysicalSector:00000000 XMC_FLASH_ErasePhysicalSector
    {standard input}:1145   .text.XMC_FLASH_ErasePhysicalSector:0000002c $d
    {standard input}:1150   .text.XMC_FLASH_RepairPhysicalSector:00000000 $t
    {standard input}:1155   .text.XMC_FLASH_RepairPhysicalSector:00000000 XMC_FLASH_RepairPhysicalSector
    {standard input}:1179   .text.XMC_FLASH_EraseUCB:00000000 $t
    {standard input}:1184   .text.XMC_FLASH_EraseUCB:00000000 XMC_FLASH_EraseUCB
    {standard input}:1271   .text.XMC_FLASH_EraseUCB:00000064 $d
    {standard input}:1278   .text.XMC_FLASH_Reset:00000000 $t
    {standard input}:1283   .text.XMC_FLASH_Reset:00000000 XMC_FLASH_Reset
    {standard input}:1323   .text.XMC_FLASH_Reset:0000001c $d
    {standard input}:1328   .text.XMC_FLASH_InstallBMI:00000000 $t
    {standard input}:1333   .text.XMC_FLASH_InstallBMI:00000000 XMC_FLASH_InstallBMI
    {standard input}:1477   .text.XMC_FLASH_InstallBMI:000000d0 $d
    {standard input}:1483   .text.XMC_FLASH_InstallProtection:00000000 $t
    {standard input}:1488   .text.XMC_FLASH_InstallProtection:00000000 XMC_FLASH_InstallProtection
    {standard input}:1575   .text.XMC_FLASH_InstallProtection:00000078 $d
    {standard input}:1580   .text.XMC_FLASH_ConfirmProtection:00000000 $t
    {standard input}:1585   .text.XMC_FLASH_ConfirmProtection:00000000 XMC_FLASH_ConfirmProtection
    {standard input}:1664   .text.XMC_FLASH_ConfirmProtection:00000064 $d
    {standard input}:1670   .text.XMC_FLASH_VerifyReadProtection:00000000 $t
    {standard input}:1675   .text.XMC_FLASH_VerifyReadProtection:00000000 XMC_FLASH_VerifyReadProtection
    {standard input}:1735   .text.XMC_FLASH_VerifyWriteProtection:00000000 $t
    {standard input}:1740   .text.XMC_FLASH_VerifyWriteProtection:00000000 XMC_FLASH_VerifyWriteProtection
    {standard input}:1831   .text.XMC_FLASH_VerifyWriteProtection:00000080 $d
    {standard input}:1836   .text.XMC_FLASH_ResumeProtection:00000000 $t
    {standard input}:1841   .text.XMC_FLASH_ResumeProtection:00000000 XMC_FLASH_ResumeProtection
    {standard input}:1881   .text.XMC_FLASH_ResumeProtection:0000001c $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
