   1              	# 1 "../Startup/startup_XMC4300.S"
   1              	/**************************************************************************************************
   0              	
   0              	
   0              	
   2              	 * @file     startup_XMC4300.S
   3              	 * @brief    CMSIS Core Device Startup File for Infineon XMC4300 Device Series
   4              	 * @version  V1.1
   5              	 * @date     05 Jan 2016
   6              	 *
   7              	 * @cond
   8              	 **************************************************************************************************
   9              	 * Copyright (c) 2015-2016, Infineon Technologies AG
  10              	 * All rights reserved.                        
  11              	 *                                             
  12              	 * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13              	 * following conditions are met:   
  14              	 *                                                                              
  15              	 * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16              	 * disclaimer.                        
  17              	 * 
  18              	 * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19              	 * disclaimer in the documentation and/or other materials provided with the distribution.          
  20              	 * 
  21              	 * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22              	 * products derived from this software without specific prior written permission.                  
  23              	 *                                                                              
  24              	 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25              	 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26              	 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27              	 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28              	 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29              	 * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30              	 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31              	 *                                                                              
  32              	 * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33              	 * Infineon Technologies AG dave@infineon.com).                                                    
  34              	 **************************************************************************************************
  35              	 *
  36              	 **************************** Change history ********************************
  37              	 * V1.0,Nov, 19, 2015 JFT: Initial version
  38              	 * V1.1,Jan, 05, 2016 JFT: Fix .reset section attributes
  39              	 *
  40              	 * @endcond 
  41              	 */
  42              	
  43              	/* ===========START : MACRO DEFINITION MACRO DEFINITION ================== */
  44              	 
  45              	.macro Entry Handler
  46              	    .long \Handler
  47              	.endm
  48              	
  49              	.macro Insert_ExceptionHandler Handler_Func 
  50              	    .weak \Handler_Func
  51              	    .thumb_set \Handler_Func, Default_Handler
  52              	.endm
  53              	
  54              	/* =============END : MACRO DEFINITION MACRO DEFINITION ================== */
  55              	
  56              	/* ================== START OF VECTOR TABLE DEFINITION ====================== */
  57              	/* Vector Table - This gets programed into VTOR register by onchip BootROM */
  58              	    .syntax unified
  59              	
  60              	    .section .reset, "a", %progbits
  61              	    
  62              		.align 2
  63              	    .globl  __Vectors
  65              	__Vectors:
  66 0000 00000000 	    .long   __initial_sp                /* Top of Stack                 */
  67 0004 00000000 	    .long   Reset_Handler               /* Reset Handler                */
  68              	
  69 0008 00000000 	    Entry   NMI_Handler                 /* NMI Handler                  */
  70 000c 00000000 	    Entry   HardFault_Handler           /* Hard Fault Handler           */
  71 0010 00000000 	    Entry   MemManage_Handler           /* MPU Fault Handler            */
  72 0014 00000000 	    Entry   BusFault_Handler            /* Bus Fault Handler            */
  73 0018 00000000 	    Entry   UsageFault_Handler          /* Usage Fault Handler          */
  74 001c 00000000 	    .long   0                           /* Reserved                     */
  75 0020 00000000 	    .long   0                           /* Reserved                     */
  76 0024 00000000 	    .long   0                           /* Reserved                     */
  77 0028 00000000 	    .long   0                           /* Reserved                     */
  78 002c 00000000 	    Entry   SVC_Handler                 /* SVCall Handler               */
  79 0030 00000000 	    Entry   DebugMon_Handler            /* Debug Monitor Handler        */
  80 0034 00000000 	    .long   0                           /* Reserved                     */
  81 0038 00000000 	    Entry   PendSV_Handler              /* PendSV Handler               */
  82 003c 00000000 	    Entry   SysTick_Handler             /* SysTick Handler              */
  83              	
  84              	    /* Interrupt Handlers for Service Requests (SR) from XMC4300 Peripherals */
  85 0040 00000000 	    Entry   SCU_0_IRQHandler            /* Handler name for SR SCU_0     */
  86 0044 00000000 	    Entry   ERU0_0_IRQHandler           /* Handler name for SR ERU0_0    */
  87 0048 00000000 	    Entry   ERU0_1_IRQHandler           /* Handler name for SR ERU0_1    */
  88 004c 00000000 	    Entry   ERU0_2_IRQHandler           /* Handler name for SR ERU0_2    */
  89 0050 00000000 	    Entry   ERU0_3_IRQHandler           /* Handler name for SR ERU0_3    */ 
  90 0054 00000000 	    Entry   ERU1_0_IRQHandler           /* Handler name for SR ERU1_0    */
  91 0058 00000000 	    Entry   ERU1_1_IRQHandler           /* Handler name for SR ERU1_1    */
  92 005c 00000000 	    Entry   ERU1_2_IRQHandler           /* Handler name for SR ERU1_2    */
  93 0060 00000000 	    Entry   ERU1_3_IRQHandler           /* Handler name for SR ERU1_3    */
  94 0064 00000000 	    .long   0                           /* Not Available                 */
  95 0068 00000000 	    .long   0                           /* Not Available                 */
  96 006c 00000000 	    .long   0                           /* Not Available                 */
  97 0070 00000000 	    Entry   PMU0_0_IRQHandler           /* Handler name for SR PMU0_0    */
  98 0074 00000000 	    .long   0                           /* Not Available                 */
  99 0078 00000000 	    Entry   VADC0_C0_0_IRQHandler       /* Handler name for SR VADC0_C0_0  */
 100 007c 00000000 	    Entry   VADC0_C0_1_IRQHandler       /* Handler name for SR VADC0_C0_1  */
 101 0080 00000000 	    Entry   VADC0_C0_2_IRQHandler       /* Handler name for SR VADC0_C0_1  */
 102 0084 00000000 	    Entry   VADC0_C0_3_IRQHandler       /* Handler name for SR VADC0_C0_3  */
 103 0088 00000000 	    Entry   VADC0_G0_0_IRQHandler       /* Handler name for SR VADC0_G0_0  */
 104 008c 00000000 	    Entry   VADC0_G0_1_IRQHandler       /* Handler name for SR VADC0_G0_1  */
 105 0090 00000000 	    Entry   VADC0_G0_2_IRQHandler       /* Handler name for SR VADC0_G0_2  */
 106 0094 00000000 	    Entry   VADC0_G0_3_IRQHandler       /* Handler name for SR VADC0_G0_3  */
 107 0098 00000000 	    Entry   VADC0_G1_0_IRQHandler       /* Handler name for SR VADC0_G1_0  */
 108 009c 00000000 	    Entry   VADC0_G1_1_IRQHandler       /* Handler name for SR VADC0_G1_1  */
 109 00a0 00000000 	    Entry   VADC0_G1_2_IRQHandler       /* Handler name for SR VADC0_G1_2  */
 110 00a4 00000000 	    Entry   VADC0_G1_3_IRQHandler       /* Handler name for SR VADC0_G1_3  */
 111 00a8 00000000 	    .long   0                           /* Not Available                 */
 112 00ac 00000000 	    .long   0                           /* Not Available                 */
 113 00b0 00000000 	    .long   0                           /* Not Available                 */
 114 00b4 00000000 	    .long   0                           /* Not Available                 */
 115 00b8 00000000 	    .long   0                           /* Not Available                 */
 116 00bc 00000000 	    .long   0                           /* Not Available                 */
 117 00c0 00000000 	    .long   0                           /* Not Available                 */
 118 00c4 00000000 	    .long   0                           /* Not Available                 */
 119 00c8 00000000 	    .long   0                           /* Not Available                 */
 120 00cc 00000000 	    .long   0                           /* Not Available                 */
 121 00d0 00000000 	    .long   0                           /* Not Available                 */
 122 00d4 00000000 	    .long   0                           /* Not Available                 */
 123 00d8 00000000 	    .long   0                           /* Not Available                 */
 124 00dc 00000000 	    .long   0                           /* Not Available                 */
 125 00e0 00000000 	    .long   0                           /* Not Available                 */
 126 00e4 00000000 	    .long   0                           /* Not Available                 */
 127 00e8 00000000 	    Entry   DAC0_0_IRQHandler           /* Handler name for SR DAC0_0    */
 128 00ec 00000000 	    Entry   DAC0_1_IRQHandler           /* Handler name for SR DAC0_0    */
 129 00f0 00000000 	    Entry   CCU40_0_IRQHandler          /* Handler name for SR CCU40_0   */
 130 00f4 00000000 	    Entry   CCU40_1_IRQHandler          /* Handler name for SR CCU40_1   */
 131 00f8 00000000 	    Entry   CCU40_2_IRQHandler          /* Handler name for SR CCU40_2   */
 132 00fc 00000000 	    Entry   CCU40_3_IRQHandler          /* Handler name for SR CCU40_3   */
 133 0100 00000000 	    Entry   CCU41_0_IRQHandler          /* Handler name for SR CCU41_0   */
 134 0104 00000000 	    Entry   CCU41_1_IRQHandler          /* Handler name for SR CCU41_1   */
 135 0108 00000000 	    Entry   CCU41_2_IRQHandler          /* Handler name for SR CCU41_2   */
 136 010c 00000000 	    Entry   CCU41_3_IRQHandler          /* Handler name for SR CCU41_3   */
 137 0110 00000000 	    .long   0                           /* Not Available                 */
 138 0114 00000000 	    .long   0                           /* Not Available                 */
 139 0118 00000000 	    .long   0                           /* Not Available                 */
 140 011c 00000000 	    .long   0                           /* Not Available                 */
 141 0120 00000000 	    .long   0                           /* Not Available                 */
 142 0124 00000000 	    .long   0                           /* Not Available                 */
 143 0128 00000000 	    .long   0                           /* Not Available                 */
 144 012c 00000000 	    .long   0                           /* Not Available                 */
 145 0130 00000000 	    Entry   CCU80_0_IRQHandler          /* Handler name for SR CCU80_0   */
 146 0134 00000000 	    Entry   CCU80_1_IRQHandler          /* Handler name for SR CCU80_1   */
 147 0138 00000000 	    Entry   CCU80_2_IRQHandler          /* Handler name for SR CCU80_2   */
 148 013c 00000000 	    Entry   CCU80_3_IRQHandler          /* Handler name for SR CCU80_3   */
 149 0140 00000000 	    .long   0                           /* Not Available                 */
 150 0144 00000000 	    .long   0                           /* Not Available                 */
 151 0148 00000000 	    .long   0                           /* Not Available                 */
 152 014c 00000000 	    .long   0                           /* Not Available                 */
 153 0150 00000000 	    .long   0                           /* Not Available                 */
 154 0154 00000000 	    .long   0                           /* Not Available                 */
 155 0158 00000000 	    .long   0                           /* Not Available                 */
 156 015c 00000000 	    .long   0                           /* Not Available                 */
 157 0160 00000000 	    .long   0                           /* Not Available                 */
 158 0164 00000000 	    .long   0                           /* Not Available                 */
 159 0168 00000000 	    .long   0                           /* Not Available                 */
 160 016c 00000000 	    .long   0                           /* Not Available                 */
 161 0170 00000000 	    Entry   CAN0_0_IRQHandler           /* Handler name for SR CAN0_0    */
 162 0174 00000000 	    Entry   CAN0_1_IRQHandler           /* Handler name for SR CAN0_1    */
 163 0178 00000000 	    Entry   CAN0_2_IRQHandler           /* Handler name for SR CAN0_2    */
 164 017c 00000000 	    Entry   CAN0_3_IRQHandler           /* Handler name for SR CAN0_3    */
 165 0180 00000000 	    Entry   CAN0_4_IRQHandler           /* Handler name for SR CAN0_4    */
 166 0184 00000000 	    Entry   CAN0_5_IRQHandler           /* Handler name for SR CAN0_5    */
 167 0188 00000000 	    Entry   CAN0_6_IRQHandler           /* Handler name for SR CAN0_6    */
 168 018c 00000000 	    Entry   CAN0_7_IRQHandler           /* Handler name for SR CAN0_7    */
 169 0190 00000000 	    Entry   USIC0_0_IRQHandler          /* Handler name for SR USIC0_0   */
 170 0194 00000000 	    Entry   USIC0_1_IRQHandler          /* Handler name for SR USIC0_1   */
 171 0198 00000000 	    Entry   USIC0_2_IRQHandler          /* Handler name for SR USIC0_2   */
 172 019c 00000000 	    Entry   USIC0_3_IRQHandler          /* Handler name for SR USIC0_3   */
 173 01a0 00000000 	    Entry   USIC0_4_IRQHandler          /* Handler name for SR USIC0_4   */
 174 01a4 00000000 	    Entry   USIC0_5_IRQHandler          /* Handler name for SR USIC0_5   */
 175 01a8 00000000 	    Entry   USIC1_0_IRQHandler          /* Handler name for SR USIC1_0   */
 176 01ac 00000000 	    Entry   USIC1_1_IRQHandler          /* Handler name for SR USIC1_1   */
 177 01b0 00000000 	    Entry   USIC1_2_IRQHandler          /* Handler name for SR USIC1_2   */
 178 01b4 00000000 	    Entry   USIC1_3_IRQHandler          /* Handler name for SR USIC1_3   */
 179 01b8 00000000 	    Entry   USIC1_4_IRQHandler          /* Handler name for SR USIC1_4   */
 180 01bc 00000000 	    Entry   USIC1_5_IRQHandler          /* Handler name for SR USIC1_5   */
 181 01c0 00000000 	    .long   0                           /* Not Available                 */
 182 01c4 00000000 	    .long   0                           /* Not Available                 */
 183 01c8 00000000 	    .long   0                           /* Not Available                 */
 184 01cc 00000000 	    .long   0                           /* Not Available                 */
 185 01d0 00000000 	    .long   0                           /* Not Available                 */
 186 01d4 00000000 	    .long   0                           /* Not Available                 */
 187 01d8 00000000 	    Entry   LEDTS0_0_IRQHandler         /* Handler name for SR LEDTS0_0  */
 188 01dc 00000000 	    .long   0                           /* Not Available                 */
 189 01e0 00000000 	    Entry   FCE0_0_IRQHandler           /* Handler name for SR FCE0_0    */
 190 01e4 00000000 	    Entry   GPDMA0_0_IRQHandler         /* Handler name for SR GPDMA0_0  */
 191 01e8 00000000 	    Entry   SDMMC0_0_IRQHandler         /* Handler name for SR SDMMC0_0  */
 192 01ec 00000000 	    Entry   USB0_0_IRQHandler           /* Handler name for SR USB0_0    */
 193 01f0 00000000 	    Entry   ETH0_0_IRQHandler           /* Handler name for SR ETH0_0    */
 194 01f4 00000000 		Entry   ECAT0_0_IRQHandler          /* Handler name for SR ECAT0_0   */
 195 01f8 00000000 	    .long   0                           /* Not Available                 */
 196 01fc 00000000 	    .long   0                           /* Not Available                 */
 197              	
 199              	/* ================== END OF VECTOR TABLE DEFINITION ======================= */
 200              	
 201              	/* ================== START OF VECTOR ROUTINES ============================= */
 202              	
 203              		.align	1
 204              	    .thumb
 205              	
 206              	/* Reset Handler */
 207              	    .thumb_func
 208              	    .globl  Reset_Handler
 210              	Reset_Handler:
 211 0200 DFF874D0 	    ldr sp,=__initial_sp
 212              	
 213              	#ifndef __SKIP_SYSTEM_INIT
 214 0204 1D48     	    ldr  r0, =SystemInit
 215 0206 8047     	    blx  r0
 216              	#endif
 217              	
 218              	/* Initialize data
 219              	 *
 220              	 *  Between symbol address __copy_table_start__ and __copy_table_end__,
 221              	 *  there are array of triplets, each of which specify:
 222              	 *    offset 0: LMA of start of a section to copy from
 223              	 *    offset 4: VMA of start of a section to copy to
 224              	 *    offset 8: size of the section to copy. Must be multiply of 4
 225              	 *
 226              	 *  All addresses must be aligned to 4 bytes boundary.
 227              	 */
 228 0208 1D4C     		ldr	r4, =__copy_table_start__
 229 020a 1E4D     		ldr	r5, =__copy_table_end__
 230              	
 231              	.L_loop0:
 232 020c AC42     		cmp	r4, r5
 233 020e 09DA     		bge	.L_loop0_done
 234 0210 2168     		ldr	r1, [r4]
 235 0212 6268     		ldr	r2, [r4, #4]
 236 0214 A368     		ldr	r3, [r4, #8]
 237              	
 238              	.L_loop0_0:
 239 0216 043B     		subs	r3, #4
 240 0218 A2BF     		ittt	ge
 241 021a C858     		ldrge	r0, [r1, r3]
 242 021c D050     		strge	r0, [r2, r3]
 243 021e FAE7     		bge	.L_loop0_0
 244              	
 245 0220 0C34     		adds	r4, #12
 246 0222 F3E7     		b	.L_loop0
 247              	
 248              	.L_loop0_done:
 249              	
 250              	/* Zero initialized data 
 251              	 *  Between symbol address __zero_table_start__ and __zero_table_end__,
 252              	 *  there are array of tuples specifying:
 253              	 *    offset 0: Start of a BSS section
 254              	 *    offset 4: Size of this BSS section. Must be multiply of 4
 255              	 *
 256              	 *  Define __SKIP_BSS_CLEAR to disable zeroing uninitialzed data in startup.
 257              	 */    
 258              	#ifndef __SKIP_BSS_CLEAR
 259 0224 184B     		ldr	r3, =__zero_table_start__
 260 0226 194C     		ldr	r4, =__zero_table_end__
 261              	
 262              	.L_loop2:
 263 0228 A342     		cmp	r3, r4
 264 022a 08DA     		bge	.L_loop2_done
 265 022c 1968     		ldr	r1, [r3]
 266 022e 5A68     		ldr	r2, [r3, #4]
 267 0230 0020     		movs	r0, 0
 268              	
 269              	.L_loop2_0:
 270 0232 043A     		subs	r2, #4
 271 0234 A4BF     		itt	ge
 272 0236 8850     		strge	r0, [r1, r2]
 273 0238 FBE7     		bge	.L_loop2_0
 274              	
 275 023a 0833     		adds	r3, #8
 276 023c F4E7     		b	.L_loop2
 277              	.L_loop2_done:    
 278              	#endif /* __SKIP_BSS_CLEAR */
 279              	   
 280              	#ifndef __SKIP_LIBC_INIT_ARRAY
 281 023e 1448     	    ldr  r0, =__libc_init_array
 282 0240 8047     	    blx  r0
 283              	#endif
 284              	
 285 0242 1448     	    ldr  r0, =main
 286 0244 8047     	    blx  r0
 287              	
 288 0246 0000     	.align 2
 289              	__copy_table_start__:
 290 0248 00000000 	    .long __data_load, __data_start, __data_size
 290      00000000 
 290      00000000 
 291 0254 00000000 	    .long __ram_code_load, __ram_code_start, __ram_code_size
 291      00000000 
 291      00000000 
 292              	__copy_table_end__:
 293              	
 294              	__zero_table_start__:
 295 0260 00000000 	    .long __bss_start, __bss_size
 295      00000000 
 296 0268 00000000 	    .long USB_RAM_start, USB_RAM_size
 296      00000000 
 297 0270 00000000 	    .long ETH_RAM_start, ETH_RAM_size
 297      00000000 
 298              	__zero_table_end__:
 299              	    
 300 0278 00000000 		.pool
 300      00000000 
 300      48020000 
 300      60020000 
 300      60020000 
 302              	
 303              	/* ======================================================================== */
 304              	/* ========== START OF EXCEPTION HANDLER DEFINITION ======================== */
 305              	
 306              	/* Default exception Handlers - Users may override this default functionality by
 307              	   defining handlers of the same name in their C code */
 308              	
 309              		.align	1
 310              	    .thumb_func
 311              	    .weak Default_Handler
 313              	Default_Handler:
 314 0298 FEE7     	    b .
 316              	
 317              	     Insert_ExceptionHandler NMI_Handler
 318              	     Insert_ExceptionHandler HardFault_Handler
 319              	     Insert_ExceptionHandler MemManage_Handler
 320              	     Insert_ExceptionHandler BusFault_Handler
 321              	     Insert_ExceptionHandler UsageFault_Handler
 322              	     Insert_ExceptionHandler SVC_Handler
 323              	     Insert_ExceptionHandler DebugMon_Handler
 324              	     Insert_ExceptionHandler PendSV_Handler
 325              	     Insert_ExceptionHandler SysTick_Handler
 326              	
 327              	     Insert_ExceptionHandler SCU_0_IRQHandler
 328              	     Insert_ExceptionHandler ERU0_0_IRQHandler
 329              	     Insert_ExceptionHandler ERU0_1_IRQHandler
 330              	     Insert_ExceptionHandler ERU0_2_IRQHandler
 331              	     Insert_ExceptionHandler ERU0_3_IRQHandler
 332              	     Insert_ExceptionHandler ERU1_0_IRQHandler
 333              	     Insert_ExceptionHandler ERU1_1_IRQHandler
 334              	     Insert_ExceptionHandler ERU1_2_IRQHandler
 335              	     Insert_ExceptionHandler ERU1_3_IRQHandler
 336              	     Insert_ExceptionHandler PMU0_0_IRQHandler
 337              	     Insert_ExceptionHandler VADC0_C0_0_IRQHandler
 338              	     Insert_ExceptionHandler VADC0_C0_1_IRQHandler
 339              	     Insert_ExceptionHandler VADC0_C0_2_IRQHandler
 340              	     Insert_ExceptionHandler VADC0_C0_3_IRQHandler
 341              	     Insert_ExceptionHandler VADC0_G0_0_IRQHandler
 342              	     Insert_ExceptionHandler VADC0_G0_1_IRQHandler
 343              	     Insert_ExceptionHandler VADC0_G0_2_IRQHandler
 344              	     Insert_ExceptionHandler VADC0_G0_3_IRQHandler
 345              	     Insert_ExceptionHandler VADC0_G1_0_IRQHandler
 346              	     Insert_ExceptionHandler VADC0_G1_1_IRQHandler
 347              	     Insert_ExceptionHandler VADC0_G1_2_IRQHandler
 348              	     Insert_ExceptionHandler VADC0_G1_3_IRQHandler
 349              	     Insert_ExceptionHandler DAC0_0_IRQHandler
 350              	     Insert_ExceptionHandler DAC0_1_IRQHandler
 351              	     Insert_ExceptionHandler CCU40_0_IRQHandler
 352              	     Insert_ExceptionHandler CCU40_1_IRQHandler
 353              	     Insert_ExceptionHandler CCU40_2_IRQHandler
 354              	     Insert_ExceptionHandler CCU40_3_IRQHandler
 355              	     Insert_ExceptionHandler CCU41_0_IRQHandler
 356              	     Insert_ExceptionHandler CCU41_1_IRQHandler
 357              	     Insert_ExceptionHandler CCU41_2_IRQHandler
 358              	     Insert_ExceptionHandler CCU41_3_IRQHandler
 359              	     Insert_ExceptionHandler CCU80_0_IRQHandler
 360              	     Insert_ExceptionHandler CCU80_1_IRQHandler
 361              	     Insert_ExceptionHandler CCU80_2_IRQHandler
 362              	     Insert_ExceptionHandler CCU80_3_IRQHandler
 363              	     Insert_ExceptionHandler CAN0_0_IRQHandler
 364              	     Insert_ExceptionHandler CAN0_1_IRQHandler
 365              	     Insert_ExceptionHandler CAN0_2_IRQHandler
 366              	     Insert_ExceptionHandler CAN0_3_IRQHandler
 367              	     Insert_ExceptionHandler CAN0_4_IRQHandler
 368              	     Insert_ExceptionHandler CAN0_5_IRQHandler
 369              	     Insert_ExceptionHandler CAN0_6_IRQHandler
 370              	     Insert_ExceptionHandler CAN0_7_IRQHandler
 371              	     Insert_ExceptionHandler USIC0_0_IRQHandler
 372              	     Insert_ExceptionHandler USIC0_1_IRQHandler
 373              	     Insert_ExceptionHandler USIC0_2_IRQHandler
 374              	     Insert_ExceptionHandler USIC0_3_IRQHandler
 375              	     Insert_ExceptionHandler USIC0_4_IRQHandler
 376              	     Insert_ExceptionHandler USIC0_5_IRQHandler
 377              	     Insert_ExceptionHandler USIC1_0_IRQHandler
 378              	     Insert_ExceptionHandler USIC1_1_IRQHandler
 379              	     Insert_ExceptionHandler USIC1_2_IRQHandler
 380              	     Insert_ExceptionHandler USIC1_3_IRQHandler
 381              	     Insert_ExceptionHandler USIC1_4_IRQHandler
 382              	     Insert_ExceptionHandler USIC1_5_IRQHandler
 383              	     Insert_ExceptionHandler LEDTS0_0_IRQHandler
 384              	     Insert_ExceptionHandler FCE0_0_IRQHandler
 385              	     Insert_ExceptionHandler GPDMA0_0_IRQHandler
 386              	     Insert_ExceptionHandler SDMMC0_0_IRQHandler
 387              	     Insert_ExceptionHandler USB0_0_IRQHandler
 388              	     Insert_ExceptionHandler ETH0_0_IRQHandler
 389              	     Insert_ExceptionHandler ECAT0_0_IRQHandler	 
 390              	     
 391              	/* ============= END OF INTERRUPT HANDLER DEFINITION ====================== */
 392              	
 393 029a 0000     	    .end
DEFINED SYMBOLS
../Startup/startup_XMC4300.S:62     .reset:00000000 $d
../Startup/startup_XMC4300.S:65     .reset:00000000 __Vectors
../Startup/startup_XMC4300.S:210    .reset:00000200 Reset_Handler
../Startup/startup_XMC4300.S:313    .reset:00000298 NMI_Handler
../Startup/startup_XMC4300.S:313    .reset:00000298 HardFault_Handler
../Startup/startup_XMC4300.S:313    .reset:00000298 MemManage_Handler
../Startup/startup_XMC4300.S:313    .reset:00000298 BusFault_Handler
../Startup/startup_XMC4300.S:313    .reset:00000298 UsageFault_Handler
../Startup/startup_XMC4300.S:313    .reset:00000298 SVC_Handler
../Startup/startup_XMC4300.S:313    .reset:00000298 DebugMon_Handler
../Startup/startup_XMC4300.S:313    .reset:00000298 PendSV_Handler
../Startup/startup_XMC4300.S:313    .reset:00000298 SysTick_Handler
../Startup/startup_XMC4300.S:313    .reset:00000298 SCU_0_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 ERU0_0_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 ERU0_1_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 ERU0_2_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 ERU0_3_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 ERU1_0_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 ERU1_1_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 ERU1_2_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 ERU1_3_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 PMU0_0_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 VADC0_C0_0_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 VADC0_C0_1_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 VADC0_C0_2_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 VADC0_C0_3_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 VADC0_G0_0_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 VADC0_G0_1_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 VADC0_G0_2_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 VADC0_G0_3_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 VADC0_G1_0_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 VADC0_G1_1_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 VADC0_G1_2_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 VADC0_G1_3_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 DAC0_0_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 DAC0_1_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 CCU40_0_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 CCU40_1_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 CCU40_2_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 CCU40_3_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 CCU41_0_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 CCU41_1_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 CCU41_2_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 CCU41_3_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 CCU80_0_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 CCU80_1_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 CCU80_2_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 CCU80_3_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 CAN0_0_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 CAN0_1_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 CAN0_2_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 CAN0_3_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 CAN0_4_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 CAN0_5_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 CAN0_6_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 CAN0_7_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 USIC0_0_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 USIC0_1_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 USIC0_2_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 USIC0_3_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 USIC0_4_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 USIC0_5_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 USIC1_0_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 USIC1_1_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 USIC1_2_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 USIC1_3_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 USIC1_4_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 USIC1_5_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 LEDTS0_0_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 FCE0_0_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 GPDMA0_0_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 SDMMC0_0_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 USB0_0_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 ETH0_0_IRQHandler
../Startup/startup_XMC4300.S:313    .reset:00000298 ECAT0_0_IRQHandler
../Startup/startup_XMC4300.S:211    .reset:00000200 $t
../Startup/startup_XMC4300.S:289    .reset:00000248 __copy_table_start__
../Startup/startup_XMC4300.S:292    .reset:00000260 __copy_table_end__
../Startup/startup_XMC4300.S:294    .reset:00000260 __zero_table_start__
../Startup/startup_XMC4300.S:298    .reset:00000278 __zero_table_end__
../Startup/startup_XMC4300.S:288    .reset:00000246 $d
../Startup/startup_XMC4300.S:313    .reset:00000298 Default_Handler
../Startup/startup_XMC4300.S:314    .reset:00000298 $t
                   .debug_aranges:0000000c $d
../Startup/startup_XMC4300.S:393    .reset:0000029a $d

UNDEFINED SYMBOLS
__initial_sp
SystemInit
__libc_init_array
main
__data_load
__data_start
__data_size
__ram_code_load
__ram_code_start
__ram_code_size
__bss_start
__bss_size
USB_RAM_start
USB_RAM_size
ETH_RAM_start
ETH_RAM_size
