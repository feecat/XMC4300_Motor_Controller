package Model.APPS.E_EEPROM_XMC4.v4_0_16.Templates;

import Model.APPS.E_EEPROM_XMC4.v4_0_16.E_EEPROM_XMC4

import java.nio.file.*
out.print("""
/**
 * @cond
 ***********************************************************************************************************************
 *
 * Copyright (c) 2016, Infineon Technologies AG
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,are permitted provided that the
 * following conditions are met:
 *
 *   Redistributions of source code must retain the above copyright notice, this list of conditions and the  following
 *   disclaimer.
 *
 *   Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
 *   following disclaimer in the documentation and/or other materials provided with the distribution.
 *
 *   Neither the name of the copyright holders nor the names of its contributors may be used to endorse or promote
 *   products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT  OF THE
 * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * To improve the quality of the software, users are encouraged to share modifications, enhancements or bug fixes
 * with Infineon Technologies AG (dave@infineon.com).
 ***********************************************************************************************************************
 *
 * Change History
 * --------------
 *
 * 2016-01-20:
 *     - Initial version<br>
 * 2016-06-07:
 *     - Fixed code generation error for project folder paths with spaces in between.
 * 2016-07-08:
 *     - Fixed incorrect case for an included header.<br>
 * 2017-03-20:
 *     - Do not rely on Device name to find out the linker filename.<br>
 *
 * @endcond
 *
 */
/***********************************************************************************************************************
 * HEADER FILES
 **********************************************************************************************************************/
#include "e_eeprom_xmc4.h"
""");
String appInst 	= null

for (Object EEPROM_Inst : appInstancesList ) {
	appInst   = EEPROM_Inst.getInstanceLabel()
	
	String ld_file_name = daveEnv.project.selectedDevice.deviceId.family + 
	                      daveEnv.project.selectedDevice.deviceId.series +
						  daveEnv.project.selectedDevice.deviceId.device + "x" +  						  
						  daveEnv.project.selectedDevice.flashSize

	def scriptDir = new File(getClass().protectionDomain.codeSource.location.path.toString().replace("%20", " ")).getParentFile()
	def projectDir = scriptDir.getParentFile().getParentFile().getParentFile().getParentFile().getParentFile().getParentFile()

	try {
		Files.delete(Paths.get(projectDir.path, "linker_script.ld"))
	}
	catch (Exception e) {
		// Ignore exception in case linker file does not exist
	}

	try {
		Files.copy(Paths.get(scriptDir.path+"\\"+"linker_files", ld_file_name+".ld"), Paths.get(projectDir.path, "linker_script.ld"))
	}
	catch (Exception e) {
		println("linker_script.ld file does not exist")
	}
	
	
out.println("""
E_EEPROM_XMC4_t ${appInst}  = 
{
   .initialized  = false
};
   """);
}
