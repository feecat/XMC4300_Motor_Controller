   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_usbd.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .global XMC_USBD_EP_OUT_BUFFERSIZE
  20              	 .section .bss.XMC_USBD_EP_OUT_BUFFERSIZE,"aw",%nobits
  21              	 .align 2
  24              	XMC_USBD_EP_OUT_BUFFERSIZE:
  25 0000 00000000 	 .space 28
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              	 .global XMC_USBD_EP_IN_BUFFERSIZE
  27              	 .section .bss.XMC_USBD_EP_IN_BUFFERSIZE,"aw",%nobits
  28              	 .align 2
  31              	XMC_USBD_EP_IN_BUFFERSIZE:
  32 0000 00000000 	 .space 28
  32      00000000 
  32      00000000 
  32      00000000 
  32      00000000 
  33              	 .comm xmc_device,520,4
  34              	 .section USB_RAM,"aw",%progbits
  35              	 .align 2
  38              	XMC_USBD_EP_OUT_BUFFER:
  39 0000 00000000 	 .space 1792
  39      00000000 
  39      00000000 
  39      00000000 
  39      00000000 
  40              	 .align 2
  43              	XMC_USBD_EP_IN_BUFFER:
  44 0700 00000000 	 .space 1792
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              	 .comm usbd_init,4,4
  46              	 .global Driver_USBD0
  47              	 .section .rodata.Driver_USBD0,"a",%progbits
  48              	 .align 2
  51              	Driver_USBD0:
  52 0000 00000000 	 .word XMC_USBD_GetCapabilities
  53 0004 00000000 	 .word XMC_USBD_Init
  54 0008 00000000 	 .word XMC_USBD_Uninitialize
  55 000c 00000000 	 .word XMC_USBD_DeviceConnect
  56 0010 00000000 	 .word XMC_USBD_DeviceDisconnect
  57 0014 00000000 	 .word XMC_USBD_DeviceGetState
  58 0018 00000000 	 .word XMC_USBD_DeviceSetAddress
  59 001c 00000000 	 .word XMC_USBD_EndpointConfigure
  60 0020 00000000 	 .word XMC_USBD_EndpointUnconfigure
  61 0024 00000000 	 .word XMC_USBD_EndpointStall
  62 0028 00000000 	 .word XMC_USBD_EndpointReadStart
  63 002c 00000000 	 .word XMC_USBD_EndpointRead
  64 0030 00000000 	 .word XMC_USBD_EndpointWrite
  65 0034 00000000 	 .word XMC_USBD_EndpointAbort
  66 0038 00000000 	 .word XMC_USBD_GetFrameNumber
  67 003c 00000000 	 .word XMC_USBD_IsEnumDone
  68              	 .section .text.XMC_USBD_lDeviceActive,"ax",%progbits
  69              	 .align 2
  70              	 .global XMC_USBD_lDeviceActive
  71              	 .thumb
  72              	 .thumb_func
  74              	XMC_USBD_lDeviceActive:
  75              	.LFB177:
  76              	 .file 1 "../Libraries/XMCLib/src/xmc_usbd.c"
   1:../Libraries/XMCLib/src/xmc_usbd.c **** /**
   2:../Libraries/XMCLib/src/xmc_usbd.c ****  * @file xmc_usbd.c
   3:../Libraries/XMCLib/src/xmc_usbd.c ****  * @date 2015-06-20
   4:../Libraries/XMCLib/src/xmc_usbd.c ****  *
   5:../Libraries/XMCLib/src/xmc_usbd.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_usbd.c ****  **********************************************************************************
   7:../Libraries/XMCLib/src/xmc_usbd.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_usbd.c ****  *
   9:../Libraries/XMCLib/src/xmc_usbd.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_usbd.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_usbd.c ****  * Redistribution and use in source and binary forms, with or without           
  13:../Libraries/XMCLib/src/xmc_usbd.c ****  * modification,are permitted provided that the following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_usbd.c ****  *   Redistributions of source code must retain the above copyright notice,      
  16:../Libraries/XMCLib/src/xmc_usbd.c ****  *   this list of conditions and the following disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_usbd.c ****  * 
  18:../Libraries/XMCLib/src/xmc_usbd.c ****  *   Redistributions in binary form must reproduce the above copyright notice,   
  19:../Libraries/XMCLib/src/xmc_usbd.c ****  *   this list of conditions and the following disclaimer in the documentation    
  20:../Libraries/XMCLib/src/xmc_usbd.c ****  *   and/or other materials provided with the distribution.                       
  21:../Libraries/XMCLib/src/xmc_usbd.c ****  * 
  22:../Libraries/XMCLib/src/xmc_usbd.c ****  *   Neither the name of the copyright holders nor the names of its contributors 
  23:../Libraries/XMCLib/src/xmc_usbd.c ****  *   may be used to endorse or promote products derived from this software without
  24:../Libraries/XMCLib/src/xmc_usbd.c ****  *   specific prior written permission.                                           
  25:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                                                              
  26:../Libraries/XMCLib/src/xmc_usbd.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  
  27:../Libraries/XMCLib/src/xmc_usbd.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    
  28:../Libraries/XMCLib/src/xmc_usbd.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   
  29:../Libraries/XMCLib/src/xmc_usbd.c ****  * ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   
  30:../Libraries/XMCLib/src/xmc_usbd.c ****  * LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         
  31:../Libraries/XMCLib/src/xmc_usbd.c ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         
  32:../Libraries/XMCLib/src/xmc_usbd.c ****  * SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    
  33:../Libraries/XMCLib/src/xmc_usbd.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      
  34:../Libraries/XMCLib/src/xmc_usbd.c ****  * CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       
  35:../Libraries/XMCLib/src/xmc_usbd.c ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   
  36:../Libraries/XMCLib/src/xmc_usbd.c ****  * POSSIBILITY OF SUCH DAMAGE.                                                  
  37:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                                                              
  38:../Libraries/XMCLib/src/xmc_usbd.c ****  * To improve the quality of the software, users are encouraged to share        
  39:../Libraries/XMCLib/src/xmc_usbd.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG       
  40:../Libraries/XMCLib/src/xmc_usbd.c ****  * dave@infineon.com).                                                          
  41:../Libraries/XMCLib/src/xmc_usbd.c ****  **********************************************************************************
  42:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  43:../Libraries/XMCLib/src/xmc_usbd.c ****  * Change History
  44:../Libraries/XMCLib/src/xmc_usbd.c ****  * --------------
  45:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  46:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-02-16:
  47:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Initial Version.<br>           
  48:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-03-18:
  49:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_EndpointStall() to fix issue on USB clear stall. <br>
  50:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_EndpointConfigure() to fix issue in EP0 configuration.<br>
  51:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_IRQHandler()(Removed the DAVE_CE check on SOF event).<br>
  52:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-06-20:
  53:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Removed GetDriverVersion API.<br>
  54:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_IsEnumDone() API.<br>
  55:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the copy right in the file header.<br>
  56:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_Disable() API to gate the clock after programming the SCU registers.<
  57:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  58:../Libraries/XMCLib/src/xmc_usbd.c ****  * @endcond 
  59:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  60:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  61:../Libraries/XMCLib/src/xmc_usbd.c **** 
  62:../Libraries/XMCLib/src/xmc_usbd.c **** 
  63:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
  64:../Libraries/XMCLib/src/xmc_usbd.c ****  * HEADER FILES
  65:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
  66:../Libraries/XMCLib/src/xmc_usbd.c **** #include <xmc_usbd.h>
  67:../Libraries/XMCLib/src/xmc_usbd.c **** 
  68:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(USB0)
  69:../Libraries/XMCLib/src/xmc_usbd.c **** 	
  70:../Libraries/XMCLib/src/xmc_usbd.c **** /**< macro to check the maximum number of endpoints used*/
  71:../Libraries/XMCLib/src/xmc_usbd.c **** #define XMC_USBD_CHECK_INPUT_MAX_NUM_EPS(usbd_max_num_eps) \
  72:../Libraries/XMCLib/src/xmc_usbd.c ****   ((usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_1 ) || \
  73:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_2 ) || \
  74:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_3 ) || \
  75:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_4 ) || \
  76:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_5 ) || \
  77:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_6 ) || \
  78:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps == XMC_USBD_MAX_NUM_EPS_7 ))
  79:../Libraries/XMCLib/src/xmc_usbd.c **** 
  80:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
  81:../Libraries/XMCLib/src/xmc_usbd.c ****  *GLOBAL DATA
  82:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
  83:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  84:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo Size
  85:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  86:../Libraries/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_EP_OUT_BUFFERSIZE[7] = {0U,0U,0U,0U,0U,0U,0U};
  87:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  88:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo Size
  89:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  90:../Libraries/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_EP_IN_BUFFERSIZE[7] = {0U,0U,0U,0U,0U,0U,0U};
  91:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  92:../Libraries/XMCLib/src/xmc_usbd.c ****  * Device definition
  93:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  94:../Libraries/XMCLib/src/xmc_usbd.c ****  XMC_USBD_DEVICE_t xmc_device;
  95:../Libraries/XMCLib/src/xmc_usbd.c **** #ifdef __GNUC__															  /*GCC*/
  96:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  97:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
  98:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  99:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] __attribute__((section("U
 100:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 101:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 102:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 103:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_IN_BUFFER[7][256] __attribute__((section("US
 104:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 105:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(__ICCARM__)
 106:../Libraries/XMCLib/src/xmc_usbd.c **** #pragma data_alignment=4
 107:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 108:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
 109:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 110:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] @ ".dram";
 111:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 112:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 113:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 114:../Libraries/XMCLib/src/xmc_usbd.c **** #pragma data_alignment=4
 115:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_EP_IN_BUFFER[7][256] @ ".dram";
 116:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 117:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(__CC_ARM)
 118:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 119:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
 120:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 121:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] __attribute__((section ("
 122:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 123:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 124:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 125:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_IN_BUFFER[7][256] __attribute__((section ("R
 126:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 127:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_t *usbd_init;
 128:../Libraries/XMCLib/src/xmc_usbd.c **** 
 129:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
 130:../Libraries/XMCLib/src/xmc_usbd.c ****  *LOCAL ROUTINES
 131:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
 132:../Libraries/XMCLib/src/xmc_usbd.c **** /*Local routines prototypes*/
 133:../Libraries/XMCLib/src/xmc_usbd.c **** uint8_t XMC_USBD_lDeviceActive(const XMC_USBD_t *const obj);
 134:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lReadFifo(const uint32_t ep_num,const uint32_t byte_count);
 135:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_lWriteFifo(XMC_USBD_EP_t *ep);
 136:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushTXFifo(const uint8_t fifo_num);
 137:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushRXFifo(void);
 138:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_lAssignTXFifo(void);
 139:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartReadXfer(XMC_USBD_EP_t *const ep);
 140:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartWriteXfer(XMC_USBD_EP_t *const ep);
 141:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleEnumDone(void);
 142:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOEPInt(const XMC_USBD_t *const obj);
 143:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleRxFLvl(void);
 144:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleIEPInt(const XMC_USBD_t *const obj);
 145:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lUnassignFifo(const uint8_t fifo_nr);
 146:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleUSBReset(const XMC_USBD_t *const obj);
 147:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOTGInt(void);
 148:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lClearEventOTG(uint32_t event);
 149:../Libraries/XMCLib/src/xmc_usbd.c **** 
 150:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 151:../Libraries/XMCLib/src/xmc_usbd.c ****  *  The device driver
 152:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 153:../Libraries/XMCLib/src/xmc_usbd.c **** const XMC_USBD_DRIVER_t Driver_USBD0 =
 154:../Libraries/XMCLib/src/xmc_usbd.c **** {
 155:../Libraries/XMCLib/src/xmc_usbd.c ****   .GetCapabilities = XMC_USBD_GetCapabilities,
 156:../Libraries/XMCLib/src/xmc_usbd.c ****   .Initialize = XMC_USBD_Init,
 157:../Libraries/XMCLib/src/xmc_usbd.c ****   .Uninitialize = XMC_USBD_Uninitialize,
 158:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceConnect = XMC_USBD_DeviceConnect,
 159:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceDisconnect = XMC_USBD_DeviceDisconnect,
 160:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceGetState = XMC_USBD_DeviceGetState,
 161:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceSetAddress = XMC_USBD_DeviceSetAddress,
 162:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointConfigure = XMC_USBD_EndpointConfigure,
 163:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointUnconfigure = XMC_USBD_EndpointUnconfigure,
 164:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointStall = XMC_USBD_EndpointStall,
 165:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointReadStart = XMC_USBD_EndpointReadStart,
 166:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointRead = XMC_USBD_EndpointRead,
 167:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointWrite = XMC_USBD_EndpointWrite,
 168:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointAbort = XMC_USBD_EndpointAbort,
 169:../Libraries/XMCLib/src/xmc_usbd.c ****   .GetFrameNumber = XMC_USBD_GetFrameNumber,
 170:../Libraries/XMCLib/src/xmc_usbd.c ****   .IsEnumDone = XMC_USBD_IsEnumDone
 171:../Libraries/XMCLib/src/xmc_usbd.c **** };
 172:../Libraries/XMCLib/src/xmc_usbd.c **** 
 173:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 174:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Checks if device is active
 175:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 176:../Libraries/XMCLib/src/xmc_usbd.c ****  * Therefore the endpoint inInUse flag are checked and if one endpoint is in use, 1 is returned,
 177:../Libraries/XMCLib/src/xmc_usbd.c ****  * else 0 is returned.
 178:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return 1 if an endpoint is active else 0
 179:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 180:../Libraries/XMCLib/src/xmc_usbd.c **** uint8_t XMC_USBD_lDeviceActive(const XMC_USBD_t *const obj) 
 181:../Libraries/XMCLib/src/xmc_usbd.c **** {
  77              	 .loc 1 181 0
  78              	 .cfi_startproc
  79              	 
  80              	 
  81              	 
  82 0000 80B4     	 push {r7}
  83              	.LCFI0:
  84              	 .cfi_def_cfa_offset 4
  85              	 .cfi_offset 7,-4
  86 0002 85B0     	 sub sp,sp,#20
  87              	.LCFI1:
  88              	 .cfi_def_cfa_offset 24
  89 0004 00AF     	 add r7,sp,#0
  90              	.LCFI2:
  91              	 .cfi_def_cfa_register 7
  92 0006 7860     	 str r0,[r7,#4]
 182:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i;
 183:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t result = 0U;
  93              	 .loc 1 183 0
  94 0008 0023     	 movs r3,#0
  95 000a BB73     	 strb r3,[r7,#14]
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint8_t)obj->usbd_max_num_eps; i++)
  96              	 .loc 1 184 0
  97 000c 0023     	 movs r3,#0
  98 000e FB73     	 strb r3,[r7,#15]
  99 0010 1EE0     	 b .L2
 100              	.L5:
 185:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     if (xmc_device.ep[i].inInUse || xmc_device.ep[i].outInUse)
 101              	 .loc 1 186 0
 102 0012 FB7B     	 ldrb r3,[r7,#15]
 103 0014 144A     	 ldr r2,.L7
 104 0016 3421     	 movs r1,#52
 105 0018 01FB03F3 	 mul r3,r1,r3
 106 001c 1344     	 add r3,r3,r2
 107 001e 5B68     	 ldr r3,[r3,#4]
 108 0020 DB08     	 lsrs r3,r3,#3
 109 0022 03F00103 	 and r3,r3,#1
 110 0026 DBB2     	 uxtb r3,r3
 111 0028 002B     	 cmp r3,#0
 112 002a 0CD1     	 bne .L3
 113              	 .loc 1 186 0 is_stmt 0 discriminator 1
 114 002c FB7B     	 ldrb r3,[r7,#15]
 115 002e 0E4A     	 ldr r2,.L7
 116 0030 3421     	 movs r1,#52
 117 0032 01FB03F3 	 mul r3,r1,r3
 118 0036 1344     	 add r3,r3,r2
 119 0038 5B68     	 ldr r3,[r3,#4]
 120 003a 1B09     	 lsrs r3,r3,#4
 121 003c 03F00103 	 and r3,r3,#1
 122 0040 DBB2     	 uxtb r3,r3
 123 0042 002B     	 cmp r3,#0
 124 0044 01D0     	 beq .L4
 125              	.L3:
 187:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 188:../Libraries/XMCLib/src/xmc_usbd.c ****       result = 1U;
 126              	 .loc 1 188 0 is_stmt 1
 127 0046 0123     	 movs r3,#1
 128 0048 BB73     	 strb r3,[r7,#14]
 129              	.L4:
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 130              	 .loc 1 184 0 discriminator 2
 131 004a FB7B     	 ldrb r3,[r7,#15]
 132 004c 0133     	 adds r3,r3,#1
 133 004e FB73     	 strb r3,[r7,#15]
 134              	.L2:
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 135              	 .loc 1 184 0 is_stmt 0 discriminator 1
 136 0050 7B68     	 ldr r3,[r7,#4]
 137 0052 1B7B     	 ldrb r3,[r3,#12]
 138 0054 FA7B     	 ldrb r2,[r7,#15]
 139 0056 9A42     	 cmp r2,r3
 140 0058 DBD3     	 bcc .L5
 189:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 190:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 191:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 141              	 .loc 1 191 0 is_stmt 1
 142 005a BB7B     	 ldrb r3,[r7,#14]
 192:../Libraries/XMCLib/src/xmc_usbd.c **** }
 143              	 .loc 1 192 0
 144 005c 1846     	 mov r0,r3
 145 005e 1437     	 adds r7,r7,#20
 146              	.LCFI3:
 147              	 .cfi_def_cfa_offset 4
 148 0060 BD46     	 mov sp,r7
 149              	.LCFI4:
 150              	 .cfi_def_cfa_register 13
 151              	 
 152 0062 5DF8047B 	 ldr r7,[sp],#4
 153              	.LCFI5:
 154              	 .cfi_restore 7
 155              	 .cfi_def_cfa_offset 0
 156 0066 7047     	 bx lr
 157              	.L8:
 158              	 .align 2
 159              	.L7:
 160 0068 00000000 	 .word xmc_device
 161              	 .cfi_endproc
 162              	.LFE177:
 164              	 .section .text.XMC_USBD_lReadFifo,"ax",%progbits
 165              	 .align 2
 166              	 .thumb
 167              	 .thumb_func
 169              	XMC_USBD_lReadFifo:
 170              	.LFB178:
 193:../Libraries/XMCLib/src/xmc_usbd.c **** 
 194:../Libraries/XMCLib/src/xmc_usbd.c **** 
 195:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 196:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Read data from the rx fifo
 197:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 198:../Libraries/XMCLib/src/xmc_usbd.c ****  * The data from the fifo is copied in to the buffer specified by @ref xfer_buffer and
 199:../Libraries/XMCLib/src/xmc_usbd.c ****  * the transfer values get updated. If the endpoint is disabled or the buffer not existent
 200:../Libraries/XMCLib/src/xmc_usbd.c ****  * the function exits.
 201:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 202:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg ep_num the endpoint to read for
 203:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg byte_count the byte count to read
 204:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 205:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lReadFifo(const uint32_t ep_num,const uint32_t byte_count) 
 206:../Libraries/XMCLib/src/xmc_usbd.c **** {
 171              	 .loc 1 206 0
 172              	 .cfi_startproc
 173              	 
 174              	 
 175              	 
 176 0000 80B4     	 push {r7}
 177              	.LCFI6:
 178              	 .cfi_def_cfa_offset 4
 179              	 .cfi_offset 7,-4
 180 0002 8BB0     	 sub sp,sp,#44
 181              	.LCFI7:
 182              	 .cfi_def_cfa_offset 48
 183 0004 00AF     	 add r7,sp,#0
 184              	.LCFI8:
 185              	 .cfi_def_cfa_register 7
 186 0006 7860     	 str r0,[r7,#4]
 187 0008 3960     	 str r1,[r7]
 207:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t * ep = &xmc_device.ep[ep_num];
 188              	 .loc 1 207 0
 189 000a 7B68     	 ldr r3,[r7,#4]
 190 000c 3422     	 movs r2,#52
 191 000e 02FB03F3 	 mul r3,r2,r3
 192 0012 344A     	 ldr r2,.L16
 193 0014 1344     	 add r3,r3,r2
 194 0016 3B62     	 str r3,[r7,#32]
 208:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t word_count;
 209:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t temp_data;
 210:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t temp_word_count;
 211:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile uint32_t *fifo = xmc_device.fifo[0U];
 195              	 .loc 1 211 0
 196 0018 324B     	 ldr r3,.L16
 197 001a D3F8E031 	 ldr r3,[r3,#480]
 198 001e FB61     	 str r3,[r7,#28]
 212:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 213:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
 214:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.endpoint_out_register[ep_num]->doepctl;
 199              	 .loc 1 214 0
 200 0020 304A     	 ldr r2,.L16
 201 0022 7B68     	 ldr r3,[r7,#4]
 202 0024 7033     	 adds r3,r3,#112
 203 0026 9B00     	 lsls r3,r3,#2
 204 0028 1344     	 add r3,r3,r2
 205 002a 5B68     	 ldr r3,[r3,#4]
 206 002c 1B68     	 ldr r3,[r3]
 207 002e FB60     	 str r3,[r7,#12]
 215:../Libraries/XMCLib/src/xmc_usbd.c ****   word_count = (byte_count >> 2U );
 208              	 .loc 1 215 0
 209 0030 3B68     	 ldr r3,[r7]
 210 0032 9B08     	 lsrs r3,r3,#2
 211 0034 BB61     	 str r3,[r7,#24]
 216:../Libraries/XMCLib/src/xmc_usbd.c ****   temp_word_count = (word_count << 2U);
 212              	 .loc 1 216 0
 213 0036 BB69     	 ldr r3,[r7,#24]
 214 0038 9B00     	 lsls r3,r3,#2
 215 003a 7B61     	 str r3,[r7,#20]
 217:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Check if ep is enabled and has buffer */
 218:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!data.b.usbactep)
 216              	 .loc 1 218 0
 217 003c 7B7B     	 ldrb r3,[r7,#13]
 218 003e 23F07F03 	 bic r3,r3,#127
 219 0042 DBB2     	 uxtb r3,r3
 220 0044 002B     	 cmp r3,#0
 221 0046 48D0     	 beq .L9
 219:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 220:../Libraries/XMCLib/src/xmc_usbd.c ****     /*Do Nothing*/
 221:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 222:../Libraries/XMCLib/src/xmc_usbd.c ****   else if (ep->xferBuffer == NULL)
 222              	 .loc 1 222 0
 223 0048 3B6A     	 ldr r3,[r7,#32]
 224 004a 5B6A     	 ldr r3,[r3,#36]
 225 004c 002B     	 cmp r3,#0
 226 004e 44D0     	 beq .L9
 223:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 224:../Libraries/XMCLib/src/xmc_usbd.c **** 	/*Do Nothing*/
 225:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 226:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 227:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 228:../Libraries/XMCLib/src/xmc_usbd.c ****     /* store the data */
 229:../Libraries/XMCLib/src/xmc_usbd.c ****     for (i = 0U;i < word_count; i++)
 227              	 .loc 1 229 0
 228 0050 0023     	 movs r3,#0
 229 0052 7B62     	 str r3,[r7,#36]
 230 0054 0AE0     	 b .L11
 231              	.L12:
 230:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 231:../Libraries/XMCLib/src/xmc_usbd.c ****       *(((uint32_t*)ep->xferBuffer)+i) = *fifo;
 232              	 .loc 1 231 0 discriminator 3
 233 0056 3B6A     	 ldr r3,[r7,#32]
 234 0058 5A6A     	 ldr r2,[r3,#36]
 235 005a 7B6A     	 ldr r3,[r7,#36]
 236 005c 9B00     	 lsls r3,r3,#2
 237 005e 1344     	 add r3,r3,r2
 238 0060 FA69     	 ldr r2,[r7,#28]
 239 0062 1268     	 ldr r2,[r2]
 240 0064 1A60     	 str r2,[r3]
 229:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 241              	 .loc 1 229 0 discriminator 3
 242 0066 7B6A     	 ldr r3,[r7,#36]
 243 0068 0133     	 adds r3,r3,#1
 244 006a 7B62     	 str r3,[r7,#36]
 245              	.L11:
 229:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 246              	 .loc 1 229 0 is_stmt 0 discriminator 1
 247 006c 7A6A     	 ldr r2,[r7,#36]
 248 006e BB69     	 ldr r3,[r7,#24]
 249 0070 9A42     	 cmp r2,r3
 250 0072 F0D3     	 bcc .L12
 232:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 233:../Libraries/XMCLib/src/xmc_usbd.c ****     /* space is not devidable by 4 */
 234:../Libraries/XMCLib/src/xmc_usbd.c ****     if (byte_count!=temp_word_count)
 251              	 .loc 1 234 0 is_stmt 1
 252 0074 3A68     	 ldr r2,[r7]
 253 0076 7B69     	 ldr r3,[r7,#20]
 254 0078 9A42     	 cmp r2,r3
 255 007a 22D0     	 beq .L13
 235:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 236:../Libraries/XMCLib/src/xmc_usbd.c ****       temp_data = *fifo;
 256              	 .loc 1 236 0
 257 007c FB69     	 ldr r3,[r7,#28]
 258 007e 1B68     	 ldr r3,[r3]
 259 0080 3B61     	 str r3,[r7,#16]
 237:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U;(temp_word_count + i) < byte_count;i++)
 260              	 .loc 1 237 0
 261 0082 0023     	 movs r3,#0
 262 0084 7B62     	 str r3,[r7,#36]
 263 0086 16E0     	 b .L14
 264              	.L15:
 238:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 239:../Libraries/XMCLib/src/xmc_usbd.c ****         ep->xferBuffer[(word_count << 2)+i] = (uint8_t)((temp_data & ((uint32_t)0xFFU << (i * 8U)))
 265              	 .loc 1 239 0 discriminator 3
 266 0088 3B6A     	 ldr r3,[r7,#32]
 267 008a 5A6A     	 ldr r2,[r3,#36]
 268 008c BB69     	 ldr r3,[r7,#24]
 269 008e 9900     	 lsls r1,r3,#2
 270 0090 7B6A     	 ldr r3,[r7,#36]
 271 0092 0B44     	 add r3,r3,r1
 272 0094 1344     	 add r3,r3,r2
 273 0096 7A6A     	 ldr r2,[r7,#36]
 274 0098 D200     	 lsls r2,r2,#3
 275 009a 1146     	 mov r1,r2
 276 009c FF22     	 movs r2,#255
 277 009e 02FA01F1 	 lsl r1,r2,r1
 278 00a2 3A69     	 ldr r2,[r7,#16]
 279 00a4 0A40     	 ands r2,r2,r1
 280 00a6 796A     	 ldr r1,[r7,#36]
 281 00a8 C900     	 lsls r1,r1,#3
 282 00aa CA40     	 lsrs r2,r2,r1
 283 00ac D2B2     	 uxtb r2,r2
 284 00ae 1A70     	 strb r2,[r3]
 237:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U;(temp_word_count + i) < byte_count;i++)
 285              	 .loc 1 237 0 discriminator 3
 286 00b0 7B6A     	 ldr r3,[r7,#36]
 287 00b2 0133     	 adds r3,r3,#1
 288 00b4 7B62     	 str r3,[r7,#36]
 289              	.L14:
 237:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U;(temp_word_count + i) < byte_count;i++)
 290              	 .loc 1 237 0 is_stmt 0 discriminator 1
 291 00b6 7A69     	 ldr r2,[r7,#20]
 292 00b8 7B6A     	 ldr r3,[r7,#36]
 293 00ba 1A44     	 add r2,r2,r3
 294 00bc 3B68     	 ldr r3,[r7]
 295 00be 9A42     	 cmp r2,r3
 296 00c0 E2D3     	 bcc .L15
 297              	.L13:
 240:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 241:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 242:../Libraries/XMCLib/src/xmc_usbd.c **** 
 243:../Libraries/XMCLib/src/xmc_usbd.c ****     /* save the amount of data */
 244:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount += byte_count;
 298              	 .loc 1 244 0 is_stmt 1
 299 00c2 3B6A     	 ldr r3,[r7,#32]
 300 00c4 DA6A     	 ldr r2,[r3,#44]
 301 00c6 3B68     	 ldr r3,[r7]
 302 00c8 1A44     	 add r2,r2,r3
 303 00ca 3B6A     	 ldr r3,[r7,#32]
 304 00cc DA62     	 str r2,[r3,#44]
 245:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer += byte_count;
 305              	 .loc 1 245 0
 306 00ce 3B6A     	 ldr r3,[r7,#32]
 307 00d0 5A6A     	 ldr r2,[r3,#36]
 308 00d2 3B68     	 ldr r3,[r7]
 309 00d4 1A44     	 add r2,r2,r3
 310 00d6 3B6A     	 ldr r3,[r7,#32]
 311 00d8 5A62     	 str r2,[r3,#36]
 312              	.L9:
 246:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 247:../Libraries/XMCLib/src/xmc_usbd.c **** }
 313              	 .loc 1 247 0
 314 00da 2C37     	 adds r7,r7,#44
 315              	.LCFI9:
 316              	 .cfi_def_cfa_offset 4
 317 00dc BD46     	 mov sp,r7
 318              	.LCFI10:
 319              	 .cfi_def_cfa_register 13
 320              	 
 321 00de 5DF8047B 	 ldr r7,[sp],#4
 322              	.LCFI11:
 323              	 .cfi_restore 7
 324              	 .cfi_def_cfa_offset 0
 325 00e2 7047     	 bx lr
 326              	.L17:
 327              	 .align 2
 328              	.L16:
 329 00e4 00000000 	 .word xmc_device
 330              	 .cfi_endproc
 331              	.LFE178:
 333              	 .section .text.XMC_USBD_lWriteFifo,"ax",%progbits
 334              	 .align 2
 335              	 .thumb
 336              	 .thumb_func
 338              	XMC_USBD_lWriteFifo:
 339              	.LFB179:
 248:../Libraries/XMCLib/src/xmc_usbd.c **** 
 249:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 250:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Write data to an endpoint fifo
 251:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 252:../Libraries/XMCLib/src/xmc_usbd.c ****  * The data from the @ref xfer_buffer gets copied in to the tx fifo of the endpoint until the buffe
 253:../Libraries/XMCLib/src/xmc_usbd.c ****  *completely or the tx fifo is full. The transfer values are not updated.
 254:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 255:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg[in] ep the endpoint to use
 256:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return the number of bytes written to the fifo
 257:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 258:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_lWriteFifo(XMC_USBD_EP_t *const ep) 
 259:../Libraries/XMCLib/src/xmc_usbd.c **** {
 340              	 .loc 1 259 0
 341              	 .cfi_startproc
 342              	 
 343              	 
 344              	 
 345 0000 80B4     	 push {r7}
 346              	.LCFI12:
 347              	 .cfi_def_cfa_offset 4
 348              	 .cfi_offset 7,-4
 349 0002 89B0     	 sub sp,sp,#36
 350              	.LCFI13:
 351              	 .cfi_def_cfa_offset 40
 352 0004 00AF     	 add r7,sp,#0
 353              	.LCFI14:
 354              	 .cfi_def_cfa_register 7
 355 0006 7860     	 str r0,[r7,#4]
 260:../Libraries/XMCLib/src/xmc_usbd.c ****   dtxfsts_data_t freeSpace; 
 261:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile uint32_t *fifo;
 262:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t byte_count;
 263:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t word_count;
 264:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t result;
 265:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 266:../Libraries/XMCLib/src/xmc_usbd.c ****   fifo = xmc_device.fifo[ep->address_u.address_st.number]; /* fifo */
 356              	 .loc 1 266 0
 357 0008 7B68     	 ldr r3,[r7,#4]
 358 000a 1B78     	 ldrb r3,[r3]
 359 000c C3F30303 	 ubfx r3,r3,#0,#4
 360 0010 DBB2     	 uxtb r3,r3
 361 0012 234A     	 ldr r2,.L25
 362 0014 7833     	 adds r3,r3,#120
 363 0016 52F82330 	 ldr r3,[r2,r3,lsl#2]
 364 001a FB60     	 str r3,[r7,#12]
 267:../Libraries/XMCLib/src/xmc_usbd.c ****   freeSpace.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dtxfsts;
 365              	 .loc 1 267 0
 366 001c 7B68     	 ldr r3,[r7,#4]
 367 001e 1B78     	 ldrb r3,[r3]
 368 0020 C3F30303 	 ubfx r3,r3,#0,#4
 369 0024 DBB2     	 uxtb r3,r3
 370 0026 1E4A     	 ldr r2,.L25
 371 0028 6A33     	 adds r3,r3,#106
 372 002a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 373 002e 9B69     	 ldr r3,[r3,#24]
 374 0030 BB60     	 str r3,[r7,#8]
 268:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the length and the amount of dwords to copy based on the fifo status */
 269:../Libraries/XMCLib/src/xmc_usbd.c ****   byte_count = ep->xferLength - ep->xferCount;
 375              	 .loc 1 269 0
 376 0032 7B68     	 ldr r3,[r7,#4]
 377 0034 9A6A     	 ldr r2,[r3,#40]
 378 0036 7B68     	 ldr r3,[r7,#4]
 379 0038 DB6A     	 ldr r3,[r3,#44]
 380 003a D31A     	 subs r3,r2,r3
 381 003c FB61     	 str r3,[r7,#28]
 270:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!byte_count)
 382              	 .loc 1 270 0
 383 003e FB69     	 ldr r3,[r7,#28]
 384 0040 002B     	 cmp r3,#0
 385 0042 02D1     	 bne .L19
 271:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 272:../Libraries/XMCLib/src/xmc_usbd.c ****     result = 0U;
 386              	 .loc 1 272 0
 387 0044 0023     	 movs r3,#0
 388 0046 7B61     	 str r3,[r7,#20]
 389 0048 23E0     	 b .L20
 390              	.L19:
 273:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 274:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 275:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 276:../Libraries/XMCLib/src/xmc_usbd.c ****     /* add the unaligned bytes to the word count to compare with the fifo space */
 277:../Libraries/XMCLib/src/xmc_usbd.c ****     word_count = ((uint32_t)byte_count + 3U) >> 2U;
 391              	 .loc 1 277 0
 392 004a FB69     	 ldr r3,[r7,#28]
 393 004c 0333     	 adds r3,r3,#3
 394 004e 9B08     	 lsrs r3,r3,#2
 395 0050 BB61     	 str r3,[r7,#24]
 278:../Libraries/XMCLib/src/xmc_usbd.c ****     if (word_count > (uint32_t)freeSpace.b.txfspcavail )
 396              	 .loc 1 278 0
 397 0052 3B89     	 ldrh r3,[r7,#8]
 398 0054 1A46     	 mov r2,r3
 399 0056 BB69     	 ldr r3,[r7,#24]
 400 0058 9A42     	 cmp r2,r3
 401 005a 04D2     	 bcs .L21
 279:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 280:../Libraries/XMCLib/src/xmc_usbd.c ****       word_count = (uint32_t)freeSpace.b.txfspcavail;
 402              	 .loc 1 280 0
 403 005c 3B89     	 ldrh r3,[r7,#8]
 404 005e BB61     	 str r3,[r7,#24]
 281:../Libraries/XMCLib/src/xmc_usbd.c ****       byte_count = (uint32_t)word_count << (uint32_t)2U;
 405              	 .loc 1 281 0
 406 0060 BB69     	 ldr r3,[r7,#24]
 407 0062 9B00     	 lsls r3,r3,#2
 408 0064 FB61     	 str r3,[r7,#28]
 409              	.L21:
 282:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 283:../Libraries/XMCLib/src/xmc_usbd.c **** 
 284:../Libraries/XMCLib/src/xmc_usbd.c ****     /* copy data dword wise */
 285:../Libraries/XMCLib/src/xmc_usbd.c ****     for (i = 0U; i < word_count;ep->xferBuffer+= 4U)
 410              	 .loc 1 285 0
 411 0066 0023     	 movs r3,#0
 412 0068 3B61     	 str r3,[r7,#16]
 413 006a 0CE0     	 b .L22
 414              	.L23:
 286:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 287:../Libraries/XMCLib/src/xmc_usbd.c ****       *fifo = *(uint32_t*)ep->xferBuffer;
 415              	 .loc 1 287 0 discriminator 3
 416 006c 7B68     	 ldr r3,[r7,#4]
 417 006e 5B6A     	 ldr r3,[r3,#36]
 418 0070 1A68     	 ldr r2,[r3]
 419 0072 FB68     	 ldr r3,[r7,#12]
 420 0074 1A60     	 str r2,[r3]
 288:../Libraries/XMCLib/src/xmc_usbd.c ****       i++;
 421              	 .loc 1 288 0 discriminator 3
 422 0076 3B69     	 ldr r3,[r7,#16]
 423 0078 0133     	 adds r3,r3,#1
 424 007a 3B61     	 str r3,[r7,#16]
 285:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 425              	 .loc 1 285 0 discriminator 3
 426 007c 7B68     	 ldr r3,[r7,#4]
 427 007e 5B6A     	 ldr r3,[r3,#36]
 428 0080 1A1D     	 adds r2,r3,#4
 429 0082 7B68     	 ldr r3,[r7,#4]
 430 0084 5A62     	 str r2,[r3,#36]
 431              	.L22:
 285:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 432              	 .loc 1 285 0 is_stmt 0 discriminator 1
 433 0086 3A69     	 ldr r2,[r7,#16]
 434 0088 BB69     	 ldr r3,[r7,#24]
 435 008a 9A42     	 cmp r2,r3
 436 008c EED3     	 bcc .L23
 289:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 290:../Libraries/XMCLib/src/xmc_usbd.c ****     result=byte_count;
 437              	 .loc 1 290 0 is_stmt 1
 438 008e FB69     	 ldr r3,[r7,#28]
 439 0090 7B61     	 str r3,[r7,#20]
 440              	.L20:
 291:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 292:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 441              	 .loc 1 292 0
 442 0092 7B69     	 ldr r3,[r7,#20]
 293:../Libraries/XMCLib/src/xmc_usbd.c **** }
 443              	 .loc 1 293 0
 444 0094 1846     	 mov r0,r3
 445 0096 2437     	 adds r7,r7,#36
 446              	.LCFI15:
 447              	 .cfi_def_cfa_offset 4
 448 0098 BD46     	 mov sp,r7
 449              	.LCFI16:
 450              	 .cfi_def_cfa_register 13
 451              	 
 452 009a 5DF8047B 	 ldr r7,[sp],#4
 453              	.LCFI17:
 454              	 .cfi_restore 7
 455              	 .cfi_def_cfa_offset 0
 456 009e 7047     	 bx lr
 457              	.L26:
 458              	 .align 2
 459              	.L25:
 460 00a0 00000000 	 .word xmc_device
 461              	 .cfi_endproc
 462              	.LFE179:
 464              	 .section .text.XMC_USBD_lFlushTXFifo,"ax",%progbits
 465              	 .align 2
 466              	 .thumb
 467              	 .thumb_func
 469              	XMC_USBD_lFlushTXFifo:
 470              	.LFB180:
 294:../Libraries/XMCLib/src/xmc_usbd.c **** 
 295:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 296:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Flush a tx fifo
 297:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 298:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] fifo_num Fifo number to flush
 299:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 300:../Libraries/XMCLib/src/xmc_usbd.c ****  * @note Use 0x10 as parameter to flush all tx fifos.
 301:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 302:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushTXFifo(const uint8_t fifo_num) 
 303:../Libraries/XMCLib/src/xmc_usbd.c **** {
 471              	 .loc 1 303 0
 472              	 .cfi_startproc
 473              	 
 474              	 
 475              	 
 476 0000 80B4     	 push {r7}
 477              	.LCFI18:
 478              	 .cfi_def_cfa_offset 4
 479              	 .cfi_offset 7,-4
 480 0002 85B0     	 sub sp,sp,#20
 481              	.LCFI19:
 482              	 .cfi_def_cfa_offset 24
 483 0004 00AF     	 add r7,sp,#0
 484              	.LCFI20:
 485              	 .cfi_def_cfa_register 7
 486 0006 0346     	 mov r3,r0
 487 0008 FB71     	 strb r3,[r7,#7]
 304:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile grstctl_t data;  
 305:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t count;
 306:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = 0U;
 488              	 .loc 1 306 0
 489 000a 0023     	 movs r3,#0
 490 000c BB60     	 str r3,[r7,#8]
 307:../Libraries/XMCLib/src/xmc_usbd.c ****   /*flush fifo */
 308:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.txfflsh = 1U;
 491              	 .loc 1 308 0
 492 000e BB68     	 ldr r3,[r7,#8]
 493 0010 43F02003 	 orr r3,r3,#32
 494 0014 BB60     	 str r3,[r7,#8]
 309:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.txfnum = fifo_num;
 495              	 .loc 1 309 0
 496 0016 FB79     	 ldrb r3,[r7,#7]
 497 0018 03F01F03 	 and r3,r3,#31
 498 001c DBB2     	 uxtb r3,r3
 499 001e 03F01F03 	 and r3,r3,#31
 500 0022 9B01     	 lsls r3,r3,#6
 501 0024 BA68     	 ldr r2,[r7,#8]
 502 0026 22F4F862 	 bic r2,r2,#1984
 503 002a 1343     	 orrs r3,r3,r2
 504 002c BB60     	 str r3,[r7,#8]
 310:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grstctl = data.d32;
 505              	 .loc 1 310 0
 506 002e 144B     	 ldr r3,.L32
 507 0030 D3F8A031 	 ldr r3,[r3,#416]
 508 0034 BA68     	 ldr r2,[r7,#8]
 509 0036 1A61     	 str r2,[r3,#16]
 311:../Libraries/XMCLib/src/xmc_usbd.c ****   for (count = 0U;count < 1000U; count++){}
 510              	 .loc 1 311 0
 511 0038 0023     	 movs r3,#0
 512 003a FB60     	 str r3,[r7,#12]
 513 003c 02E0     	 b .L28
 514              	.L29:
 515              	 .loc 1 311 0 is_stmt 0 discriminator 3
 516 003e FB68     	 ldr r3,[r7,#12]
 517 0040 0133     	 adds r3,r3,#1
 518 0042 FB60     	 str r3,[r7,#12]
 519              	.L28:
 520              	 .loc 1 311 0 discriminator 1
 521 0044 FB68     	 ldr r3,[r7,#12]
 522 0046 B3F57A7F 	 cmp r3,#1000
 523 004a F8D3     	 bcc .L29
 524              	.L30:
 312:../Libraries/XMCLib/src/xmc_usbd.c ****   do
 313:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 314:../Libraries/XMCLib/src/xmc_usbd.c ****    data.d32 = xmc_device.global_register->grstctl;
 525              	 .loc 1 314 0 is_stmt 1 discriminator 1
 526 004c 0C4B     	 ldr r3,.L32
 527 004e D3F8A031 	 ldr r3,[r3,#416]
 528 0052 1B69     	 ldr r3,[r3,#16]
 529 0054 BB60     	 str r3,[r7,#8]
 315:../Libraries/XMCLib/src/xmc_usbd.c ****   } while (data.b.txfflsh);
 530              	 .loc 1 315 0 discriminator 1
 531 0056 BB68     	 ldr r3,[r7,#8]
 532 0058 5B09     	 lsrs r3,r3,#5
 533 005a 03F00103 	 and r3,r3,#1
 534 005e DBB2     	 uxtb r3,r3
 535 0060 002B     	 cmp r3,#0
 536 0062 F3D1     	 bne .L30
 316:../Libraries/XMCLib/src/xmc_usbd.c ****     count = 0U;
 537              	 .loc 1 316 0
 538 0064 0023     	 movs r3,#0
 539 0066 FB60     	 str r3,[r7,#12]
 317:../Libraries/XMCLib/src/xmc_usbd.c ****   while (count++ < 1000U)
 540              	 .loc 1 317 0
 541 0068 00BF     	 nop
 542              	.L31:
 543              	 .loc 1 317 0 is_stmt 0 discriminator 1
 544 006a FB68     	 ldr r3,[r7,#12]
 545 006c 5A1C     	 adds r2,r3,#1
 546 006e FA60     	 str r2,[r7,#12]
 547 0070 B3F57A7F 	 cmp r3,#1000
 548 0074 F9D3     	 bcc .L31
 318:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 319:../Libraries/XMCLib/src/xmc_usbd.c ****     /* wait 3 phy clocks */
 320:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 321:../Libraries/XMCLib/src/xmc_usbd.c **** }
 549              	 .loc 1 321 0 is_stmt 1
 550 0076 1437     	 adds r7,r7,#20
 551              	.LCFI21:
 552              	 .cfi_def_cfa_offset 4
 553 0078 BD46     	 mov sp,r7
 554              	.LCFI22:
 555              	 .cfi_def_cfa_register 13
 556              	 
 557 007a 5DF8047B 	 ldr r7,[sp],#4
 558              	.LCFI23:
 559              	 .cfi_restore 7
 560              	 .cfi_def_cfa_offset 0
 561 007e 7047     	 bx lr
 562              	.L33:
 563              	 .align 2
 564              	.L32:
 565 0080 00000000 	 .word xmc_device
 566              	 .cfi_endproc
 567              	.LFE180:
 569              	 .section .text.XMC_USBD_lFlushRXFifo,"ax",%progbits
 570              	 .align 2
 571              	 .thumb
 572              	 .thumb_func
 574              	XMC_USBD_lFlushRXFifo:
 575              	.LFB181:
 322:../Libraries/XMCLib/src/xmc_usbd.c **** 
 323:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 324:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Flush the rx fifo
 325:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 326:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushRXFifo(void) 
 327:../Libraries/XMCLib/src/xmc_usbd.c **** {
 576              	 .loc 1 327 0
 577              	 .cfi_startproc
 578              	 
 579              	 
 580              	 
 581 0000 80B4     	 push {r7}
 582              	.LCFI24:
 583              	 .cfi_def_cfa_offset 4
 584              	 .cfi_offset 7,-4
 585 0002 83B0     	 sub sp,sp,#12
 586              	.LCFI25:
 587              	 .cfi_def_cfa_offset 16
 588 0004 00AF     	 add r7,sp,#0
 589              	.LCFI26:
 590              	 .cfi_def_cfa_register 7
 328:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile grstctl_t data;  
 329:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t count;
 330:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 331:../Libraries/XMCLib/src/xmc_usbd.c **** 	data.d32 = 0U;
 591              	 .loc 1 331 0
 592 0006 0023     	 movs r3,#0
 593 0008 3B60     	 str r3,[r7]
 332:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.rxfflsh = 1U;
 594              	 .loc 1 332 0
 595 000a 3B68     	 ldr r3,[r7]
 596 000c 43F01003 	 orr r3,r3,#16
 597 0010 3B60     	 str r3,[r7]
 333:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush FIFO */
 334:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grstctl = data.d32;
 598              	 .loc 1 334 0
 599 0012 144B     	 ldr r3,.L39
 600 0014 D3F8A031 	 ldr r3,[r3,#416]
 601 0018 3A68     	 ldr r2,[r7]
 602 001a 1A61     	 str r2,[r3,#16]
 603              	.L37:
 335:../Libraries/XMCLib/src/xmc_usbd.c ****   do
 336:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 337:../Libraries/XMCLib/src/xmc_usbd.c ****     for (count = 0U; count < 1000U; count++){}
 604              	 .loc 1 337 0
 605 001c 0023     	 movs r3,#0
 606 001e 7B60     	 str r3,[r7,#4]
 607 0020 02E0     	 b .L35
 608              	.L36:
 609              	 .loc 1 337 0 is_stmt 0 discriminator 3
 610 0022 7B68     	 ldr r3,[r7,#4]
 611 0024 0133     	 adds r3,r3,#1
 612 0026 7B60     	 str r3,[r7,#4]
 613              	.L35:
 614              	 .loc 1 337 0 discriminator 1
 615 0028 7B68     	 ldr r3,[r7,#4]
 616 002a B3F57A7F 	 cmp r3,#1000
 617 002e F8D3     	 bcc .L36
 338:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.global_register->grstctl;
 618              	 .loc 1 338 0 is_stmt 1
 619 0030 0C4B     	 ldr r3,.L39
 620 0032 D3F8A031 	 ldr r3,[r3,#416]
 621 0036 1B69     	 ldr r3,[r3,#16]
 622 0038 3B60     	 str r3,[r7]
 339:../Libraries/XMCLib/src/xmc_usbd.c ****   } while (data.b.rxfflsh);
 623              	 .loc 1 339 0
 624 003a 3B68     	 ldr r3,[r7]
 625 003c 1B09     	 lsrs r3,r3,#4
 626 003e 03F00103 	 and r3,r3,#1
 627 0042 DBB2     	 uxtb r3,r3
 628 0044 002B     	 cmp r3,#0
 629 0046 E9D1     	 bne .L37
 340:../Libraries/XMCLib/src/xmc_usbd.c ****   count = 0U;
 630              	 .loc 1 340 0
 631 0048 0023     	 movs r3,#0
 632 004a 7B60     	 str r3,[r7,#4]
 341:../Libraries/XMCLib/src/xmc_usbd.c ****   while (count++ < 1000U)
 633              	 .loc 1 341 0
 634 004c 00BF     	 nop
 635              	.L38:
 636              	 .loc 1 341 0 is_stmt 0 discriminator 1
 637 004e 7B68     	 ldr r3,[r7,#4]
 638 0050 5A1C     	 adds r2,r3,#1
 639 0052 7A60     	 str r2,[r7,#4]
 640 0054 B3F57A7F 	 cmp r3,#1000
 641 0058 F9D3     	 bcc .L38
 342:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 343:../Libraries/XMCLib/src/xmc_usbd.c ****     /* wait 3 phy clocks */
 344:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 345:../Libraries/XMCLib/src/xmc_usbd.c **** }
 642              	 .loc 1 345 0 is_stmt 1
 643 005a 0C37     	 adds r7,r7,#12
 644              	.LCFI27:
 645              	 .cfi_def_cfa_offset 4
 646 005c BD46     	 mov sp,r7
 647              	.LCFI28:
 648              	 .cfi_def_cfa_register 13
 649              	 
 650 005e 5DF8047B 	 ldr r7,[sp],#4
 651              	.LCFI29:
 652              	 .cfi_restore 7
 653              	 .cfi_def_cfa_offset 0
 654 0062 7047     	 bx lr
 655              	.L40:
 656              	 .align 2
 657              	.L39:
 658 0064 00000000 	 .word xmc_device
 659              	 .cfi_endproc
 660              	.LFE181:
 662              	 .section .text.XMC_USBD_lAssignTXFifo,"ax",%progbits
 663              	 .align 2
 664              	 .thumb
 665              	 .thumb_func
 667              	XMC_USBD_lAssignTXFifo:
 668              	.LFB182:
 346:../Libraries/XMCLib/src/xmc_usbd.c **** 
 347:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 348:../Libraries/XMCLib/src/xmc_usbd.c ****  * Support Functions
 349:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 350:../Libraries/XMCLib/src/xmc_usbd.c **** 
 351:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 352:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Assign a free tx fifo
 353:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 354:../Libraries/XMCLib/src/xmc_usbd.c ****  * A free tx fifo will be searched and the number will be returned.
 355:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 356:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return Fifo number for a free fifo
 357:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 358:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_lAssignTXFifo(void) 
 359:../Libraries/XMCLib/src/xmc_usbd.c **** {
 669              	 .loc 1 359 0
 670              	 .cfi_startproc
 671              	 
 672              	 
 673              	 
 674 0000 80B4     	 push {r7}
 675              	.LCFI30:
 676              	 .cfi_def_cfa_offset 4
 677              	 .cfi_offset 7,-4
 678 0002 83B0     	 sub sp,sp,#12
 679              	.LCFI31:
 680              	 .cfi_def_cfa_offset 16
 681 0004 00AF     	 add r7,sp,#0
 682              	.LCFI32:
 683              	 .cfi_def_cfa_register 7
 360:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask = 1U;
 684              	 .loc 1 360 0
 685 0006 0123     	 movs r3,#1
 686 0008 FB80     	 strh r3,[r7,#6]
 361:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i = 0U;
 687              	 .loc 1 361 0
 688 000a 0023     	 movs r3,#0
 689 000c 7B71     	 strb r3,[r7,#5]
 362:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t result = 0U;
 690              	 .loc 1 362 0
 691 000e 0023     	 movs r3,#0
 692 0010 3B71     	 strb r3,[r7,#4]
 363:../Libraries/XMCLib/src/xmc_usbd.c ****   while( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS)&&((xmc_device.txfifomsk & mask) != 0U))
 693              	 .loc 1 363 0
 694 0012 05E0     	 b .L42
 695              	.L44:
 364:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 365:../Libraries/XMCLib/src/xmc_usbd.c ****     mask = (uint16_t)(mask << 1U);
 696              	 .loc 1 365 0
 697 0014 FB88     	 ldrh r3,[r7,#6]
 698 0016 5B00     	 lsls r3,r3,#1
 699 0018 FB80     	 strh r3,[r7,#6]
 366:../Libraries/XMCLib/src/xmc_usbd.c ****     i++;
 700              	 .loc 1 366 0
 701 001a 7B79     	 ldrb r3,[r7,#5]
 702 001c 0133     	 adds r3,r3,#1
 703 001e 7B71     	 strb r3,[r7,#5]
 704              	.L42:
 363:../Libraries/XMCLib/src/xmc_usbd.c ****   while( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS)&&((xmc_device.txfifomsk & mask) != 0U))
 705              	 .loc 1 363 0
 706 0020 7B79     	 ldrb r3,[r7,#5]
 707 0022 062B     	 cmp r3,#6
 708 0024 07D8     	 bhi .L43
 363:../Libraries/XMCLib/src/xmc_usbd.c ****   while( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS)&&((xmc_device.txfifomsk & mask) != 0U))
 709              	 .loc 1 363 0 is_stmt 0 discriminator 1
 710 0026 114B     	 ldr r3,.L47
 711 0028 B3F8FC21 	 ldrh r2,[r3,#508]
 712 002c FB88     	 ldrh r3,[r7,#6]
 713 002e 1340     	 ands r3,r3,r2
 714 0030 9BB2     	 uxth r3,r3
 715 0032 002B     	 cmp r3,#0
 716 0034 EED1     	 bne .L44
 717              	.L43:
 367:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 368:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((xmc_device.txfifomsk & mask) == 0U)
 718              	 .loc 1 368 0 is_stmt 1
 719 0036 0D4B     	 ldr r3,.L47
 720 0038 B3F8FC21 	 ldrh r2,[r3,#508]
 721 003c FB88     	 ldrh r3,[r7,#6]
 722 003e 1340     	 ands r3,r3,r2
 723 0040 9BB2     	 uxth r3,r3
 724 0042 002B     	 cmp r3,#0
 725 0044 0AD1     	 bne .L45
 369:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 370:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.txfifomsk |= mask;
 726              	 .loc 1 370 0
 727 0046 094B     	 ldr r3,.L47
 728 0048 B3F8FC21 	 ldrh r2,[r3,#508]
 729 004c FB88     	 ldrh r3,[r7,#6]
 730 004e 1343     	 orrs r3,r3,r2
 731 0050 9AB2     	 uxth r2,r3
 732 0052 064B     	 ldr r3,.L47
 733 0054 A3F8FC21 	 strh r2,[r3,#508]
 371:../Libraries/XMCLib/src/xmc_usbd.c ****     result=i;
 734              	 .loc 1 371 0
 735 0058 7B79     	 ldrb r3,[r7,#5]
 736 005a 3B71     	 strb r3,[r7,#4]
 737              	.L45:
 372:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 373:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 738              	 .loc 1 373 0
 739 005c 3B79     	 ldrb r3,[r7,#4]
 374:../Libraries/XMCLib/src/xmc_usbd.c **** }
 740              	 .loc 1 374 0
 741 005e 1846     	 mov r0,r3
 742 0060 0C37     	 adds r7,r7,#12
 743              	.LCFI33:
 744              	 .cfi_def_cfa_offset 4
 745 0062 BD46     	 mov sp,r7
 746              	.LCFI34:
 747              	 .cfi_def_cfa_register 13
 748              	 
 749 0064 5DF8047B 	 ldr r7,[sp],#4
 750              	.LCFI35:
 751              	 .cfi_restore 7
 752              	 .cfi_def_cfa_offset 0
 753 0068 7047     	 bx lr
 754              	.L48:
 755 006a 00BF     	 .align 2
 756              	.L47:
 757 006c 00000000 	 .word xmc_device
 758              	 .cfi_endproc
 759              	.LFE182:
 761              	 .section .text.XMC_USBD_lUnassignFifo,"ax",%progbits
 762              	 .align 2
 763              	 .thumb
 764              	 .thumb_func
 766              	XMC_USBD_lUnassignFifo:
 767              	.LFB183:
 375:../Libraries/XMCLib/src/xmc_usbd.c **** 
 376:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 377:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Free a tx fifo
 378:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 379:../Libraries/XMCLib/src/xmc_usbd.c ****  * Mark an used tx fifo as free.
 380:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] fifo_nr Fifo number to free
 381:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 382:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lUnassignFifo(const uint8_t fifo_nr) 
 383:../Libraries/XMCLib/src/xmc_usbd.c **** {
 768              	 .loc 1 383 0
 769              	 .cfi_startproc
 770              	 
 771              	 
 772              	 
 773 0000 80B4     	 push {r7}
 774              	.LCFI36:
 775              	 .cfi_def_cfa_offset 4
 776              	 .cfi_offset 7,-4
 777 0002 83B0     	 sub sp,sp,#12
 778              	.LCFI37:
 779              	 .cfi_def_cfa_offset 16
 780 0004 00AF     	 add r7,sp,#0
 781              	.LCFI38:
 782              	 .cfi_def_cfa_register 7
 783 0006 0346     	 mov r3,r0
 784 0008 FB71     	 strb r3,[r7,#7]
 384:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.txfifomsk = (uint16_t)((uint32_t)xmc_device.txfifomsk & (uint32_t)(~((uint32_t)((uint3
 785              	 .loc 1 384 0
 786 000a 0A4B     	 ldr r3,.L50
 787 000c B3F8FC21 	 ldrh r2,[r3,#508]
 788 0010 FB79     	 ldrb r3,[r7,#7]
 789 0012 0121     	 movs r1,#1
 790 0014 01FA03F3 	 lsl r3,r1,r3
 791 0018 9BB2     	 uxth r3,r3
 792 001a DB43     	 mvns r3,r3
 793 001c 9BB2     	 uxth r3,r3
 794 001e 1340     	 ands r3,r3,r2
 795 0020 9AB2     	 uxth r2,r3
 796 0022 044B     	 ldr r3,.L50
 797 0024 A3F8FC21 	 strh r2,[r3,#508]
 385:../Libraries/XMCLib/src/xmc_usbd.c **** }
 798              	 .loc 1 385 0
 799 0028 0C37     	 adds r7,r7,#12
 800              	.LCFI39:
 801              	 .cfi_def_cfa_offset 4
 802 002a BD46     	 mov sp,r7
 803              	.LCFI40:
 804              	 .cfi_def_cfa_register 13
 805              	 
 806 002c 5DF8047B 	 ldr r7,[sp],#4
 807              	.LCFI41:
 808              	 .cfi_restore 7
 809              	 .cfi_def_cfa_offset 0
 810 0030 7047     	 bx lr
 811              	.L51:
 812 0032 00BF     	 .align 2
 813              	.L50:
 814 0034 00000000 	 .word xmc_device
 815              	 .cfi_endproc
 816              	.LFE183:
 818              	 .section .text.XMC_USBD_lStartReadXfer,"ax",%progbits
 819              	 .align 2
 820              	 .thumb
 821              	 .thumb_func
 823              	XMC_USBD_lStartReadXfer:
 824              	.LFB184:
 386:../Libraries/XMCLib/src/xmc_usbd.c **** 
 387:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 388:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Start a transfer for an out endpoint
 389:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 390:../Libraries/XMCLib/src/xmc_usbd.c ****  * Based on the transfer values of the endpoint, the out endpoint registers will be programmed
 391:../Libraries/XMCLib/src/xmc_usbd.c ****  * to start a new out transfer.
 392:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 393:../Libraries/XMCLib/src/xmc_usbd.c ****  * @note No checking of the transfer values are done in this function. Be sure,
 394:../Libraries/XMCLib/src/xmc_usbd.c ****  * that the transfer values are reasonable (e.g. buffer size is not exceeded).
 395:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 396:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] ep Endpoint to start the transfer
 397:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 398:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartReadXfer(XMC_USBD_EP_t *const ep) 
 399:../Libraries/XMCLib/src/xmc_usbd.c **** {
 825              	 .loc 1 399 0
 826              	 .cfi_startproc
 827              	 
 828              	 
 829              	 
 830 0000 80B4     	 push {r7}
 831              	.LCFI42:
 832              	 .cfi_def_cfa_offset 4
 833              	 .cfi_offset 7,-4
 834 0002 87B0     	 sub sp,sp,#28
 835              	.LCFI43:
 836              	 .cfi_def_cfa_offset 32
 837 0004 00AF     	 add r7,sp,#0
 838              	.LCFI44:
 839              	 .cfi_def_cfa_register 7
 840 0006 7860     	 str r0,[r7,#4]
 400:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t data;
 401:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 402:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 403:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 =  0U;
 841              	 .loc 1 403 0
 842 0008 0023     	 movs r3,#0
 843 000a 3B61     	 str r3,[r7,#16]
 404:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->xferTotal - ep->xferLength) > ep->maxTransferSize)
 844              	 .loc 1 404 0
 845 000c 7B68     	 ldr r3,[r7,#4]
 846 000e 1A6B     	 ldr r2,[r3,#48]
 847 0010 7B68     	 ldr r3,[r7,#4]
 848 0012 9B6A     	 ldr r3,[r3,#40]
 849 0014 D31A     	 subs r3,r2,r3
 850 0016 7A68     	 ldr r2,[r7,#4]
 851 0018 9268     	 ldr r2,[r2,#8]
 852 001a C2F31202 	 ubfx r2,r2,#0,#19
 853 001e 9342     	 cmp r3,r2
 854 0020 09D9     	 bls .L53
 405:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 406:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength += ep->maxTransferSize;
 855              	 .loc 1 406 0
 856 0022 7B68     	 ldr r3,[r7,#4]
 857 0024 9B6A     	 ldr r3,[r3,#40]
 858 0026 7A68     	 ldr r2,[r7,#4]
 859 0028 9268     	 ldr r2,[r2,#8]
 860 002a C2F31202 	 ubfx r2,r2,#0,#19
 861 002e 1A44     	 add r2,r2,r3
 862 0030 7B68     	 ldr r3,[r7,#4]
 863 0032 9A62     	 str r2,[r3,#40]
 864 0034 03E0     	 b .L54
 865              	.L53:
 407:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 408:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 409:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 410:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = ep->xferTotal;
 866              	 .loc 1 410 0
 867 0036 7B68     	 ldr r3,[r7,#4]
 868 0038 1A6B     	 ldr r2,[r3,#48]
 869 003a 7B68     	 ldr r3,[r7,#4]
 870 003c 9A62     	 str r2,[r3,#40]
 871              	.L54:
 411:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 412:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address_st.number == 0U)
 872              	 .loc 1 412 0
 873 003e 7B68     	 ldr r3,[r7,#4]
 874 0040 1B78     	 ldrb r3,[r3]
 875 0042 03F00F03 	 and r3,r3,#15
 876 0046 DBB2     	 uxtb r3,r3
 877 0048 002B     	 cmp r3,#0
 878 004a 19D1     	 bne .L55
 879              	.LBB2:
 413:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 414:../Libraries/XMCLib/src/xmc_usbd.c **** 	/* Setup the endpoint to receive 3 setup packages and one normal package.*/
 415:../Libraries/XMCLib/src/xmc_usbd.c **** 	/* Cast the data pointer to use only one variable */
 416:../Libraries/XMCLib/src/xmc_usbd.c ****     deptsiz0_data_t *ep0_data = (deptsiz0_data_t*)&data;
 880              	 .loc 1 416 0
 881 004c 07F11003 	 add r3,r7,#16
 882 0050 7B61     	 str r3,[r7,#20]
 417:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.pktcnt = 0x1U;
 883              	 .loc 1 417 0
 884 0052 7A69     	 ldr r2,[r7,#20]
 885 0054 9378     	 ldrb r3,[r2,#2]
 886 0056 0121     	 movs r1,#1
 887 0058 61F3C403 	 bfi r3,r1,#3,#2
 888 005c 9370     	 strb r3,[r2,#2]
 418:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.supcnt = 0x3U;
 889              	 .loc 1 418 0
 890 005e 7A69     	 ldr r2,[r7,#20]
 891 0060 D378     	 ldrb r3,[r2,#3]
 892 0062 43F06003 	 orr r3,r3,#96
 893 0066 D370     	 strb r3,[r2,#3]
 419:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.xfersize = (uint8_t)ep->xferTotal;
 894              	 .loc 1 419 0
 895 0068 7B68     	 ldr r3,[r7,#4]
 896 006a 1B6B     	 ldr r3,[r3,#48]
 897 006c DBB2     	 uxtb r3,r3
 898 006e 03F07F03 	 and r3,r3,#127
 899 0072 D9B2     	 uxtb r1,r3
 900 0074 7A69     	 ldr r2,[r7,#20]
 901 0076 1378     	 ldrb r3,[r2]
 902 0078 61F30603 	 bfi r3,r1,#0,#7
 903 007c 1370     	 strb r3,[r2]
 904              	.LBE2:
 905 007e 33E0     	 b .L56
 906              	.L55:
 420:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 421:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 422:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 423:../Libraries/XMCLib/src/xmc_usbd.c ****     /* If requested length is zero, just receive one zero length packet */
 424:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep->xferLength == 0U)
 907              	 .loc 1 424 0
 908 0080 7B68     	 ldr r3,[r7,#4]
 909 0082 9B6A     	 ldr r3,[r3,#40]
 910 0084 002B     	 cmp r3,#0
 911 0086 09D1     	 bne .L57
 425:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 426:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.xfersize = 0U;
 912              	 .loc 1 426 0
 913 0088 3B69     	 ldr r3,[r7,#16]
 914 008a 6FF31203 	 bfc r3,#0,#19
 915 008e 3B61     	 str r3,[r7,#16]
 427:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.pktcnt = 1U;
 916              	 .loc 1 427 0
 917 0090 7B8A     	 ldrh r3,[r7,#18]
 918 0092 0122     	 movs r2,#1
 919 0094 62F3CC03 	 bfi r3,r2,#3,#10
 920 0098 7B82     	 strh r3,[r7,#18]
 921 009a 25E0     	 b .L56
 922              	.L57:
 428:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 429:../Libraries/XMCLib/src/xmc_usbd.c ****     else
 430:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 431:../Libraries/XMCLib/src/xmc_usbd.c ****       /* setup endpoint to recive a amount of packages by given size */
 432:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.pktcnt = (uint16_t)(((ep->xferLength - ep->xferCount) + (ep->maxPacketSize -(uint32_t)
 923              	 .loc 1 432 0
 924 009c 7B68     	 ldr r3,[r7,#4]
 925 009e 9A6A     	 ldr r2,[r3,#40]
 926 00a0 7B68     	 ldr r3,[r7,#4]
 927 00a2 DB6A     	 ldr r3,[r3,#44]
 928 00a4 D31A     	 subs r3,r2,r3
 929 00a6 7A68     	 ldr r2,[r7,#4]
 930 00a8 5268     	 ldr r2,[r2,#4]
 931 00aa C2F3C622 	 ubfx r2,r2,#11,#7
 932 00ae D2B2     	 uxtb r2,r2
 933 00b0 1344     	 add r3,r3,r2
 934 00b2 013B     	 subs r3,r3,#1
 935 00b4 7A68     	 ldr r2,[r7,#4]
 936 00b6 5268     	 ldr r2,[r2,#4]
 937 00b8 C2F3C622 	 ubfx r2,r2,#11,#7
 938 00bc D2B2     	 uxtb r2,r2
 939 00be B3FBF2F3 	 udiv r3,r3,r2
 940 00c2 9BB2     	 uxth r3,r3
 941 00c4 C3F30903 	 ubfx r3,r3,#0,#10
 942 00c8 9AB2     	 uxth r2,r3
 943 00ca 7B8A     	 ldrh r3,[r7,#18]
 944 00cc 62F3CC03 	 bfi r3,r2,#3,#10
 945 00d0 7B82     	 strh r3,[r7,#18]
 433:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.xfersize =(uint32_t)(ep->xferLength - ep->xferCount);
 946              	 .loc 1 433 0
 947 00d2 7B68     	 ldr r3,[r7,#4]
 948 00d4 9A6A     	 ldr r2,[r3,#40]
 949 00d6 7B68     	 ldr r3,[r7,#4]
 950 00d8 DB6A     	 ldr r3,[r3,#44]
 951 00da D31A     	 subs r3,r2,r3
 952 00dc C3F31202 	 ubfx r2,r3,#0,#19
 953 00e0 3B69     	 ldr r3,[r7,#16]
 954 00e2 62F31203 	 bfi r3,r2,#0,#19
 955 00e6 3B61     	 str r3,[r7,#16]
 956              	.L56:
 434:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 435:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 436:../Libraries/XMCLib/src/xmc_usbd.c ****   if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_DMA)
 957              	 .loc 1 436 0
 958 00e8 214B     	 ldr r3,.L59
 959 00ea 1B68     	 ldr r3,[r3]
 960 00ec 5B7B     	 ldrb r3,[r3,#13]
 961 00ee 002B     	 cmp r3,#0
 962 00f0 0CD1     	 bne .L58
 437:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 438:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Programm dma address if needed */
 439:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepdma = (uint32_t)(ep->xfe
 963              	 .loc 1 439 0
 964 00f2 7B68     	 ldr r3,[r7,#4]
 965 00f4 1B78     	 ldrb r3,[r3]
 966 00f6 C3F30303 	 ubfx r3,r3,#0,#4
 967 00fa DBB2     	 uxtb r3,r3
 968 00fc 1D4A     	 ldr r2,.L59+4
 969 00fe 7033     	 adds r3,r3,#112
 970 0100 9B00     	 lsls r3,r3,#2
 971 0102 1344     	 add r3,r3,r2
 972 0104 5B68     	 ldr r3,[r3,#4]
 973 0106 7A68     	 ldr r2,[r7,#4]
 974 0108 526A     	 ldr r2,[r2,#36]
 975 010a 5A61     	 str r2,[r3,#20]
 976              	.L58:
 440:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 441:../Libraries/XMCLib/src/xmc_usbd.c ****   /* setup endpoint size and enable endpoint */
 442:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doeptsiz = data.d32;
 977              	 .loc 1 442 0
 978 010c 7B68     	 ldr r3,[r7,#4]
 979 010e 1B78     	 ldrb r3,[r3]
 980 0110 C3F30303 	 ubfx r3,r3,#0,#4
 981 0114 DBB2     	 uxtb r3,r3
 982 0116 174A     	 ldr r2,.L59+4
 983 0118 7033     	 adds r3,r3,#112
 984 011a 9B00     	 lsls r3,r3,#2
 985 011c 1344     	 add r3,r3,r2
 986 011e 5B68     	 ldr r3,[r3,#4]
 987 0120 3A69     	 ldr r2,[r7,#16]
 988 0122 1A61     	 str r2,[r3,#16]
 443:../Libraries/XMCLib/src/xmc_usbd.c ****  
 444:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 989              	 .loc 1 444 0
 990 0124 7B68     	 ldr r3,[r7,#4]
 991 0126 1B78     	 ldrb r3,[r3]
 992 0128 C3F30303 	 ubfx r3,r3,#0,#4
 993 012c DBB2     	 uxtb r3,r3
 994 012e 114A     	 ldr r2,.L59+4
 995 0130 7033     	 adds r3,r3,#112
 996 0132 9B00     	 lsls r3,r3,#2
 997 0134 1344     	 add r3,r3,r2
 998 0136 5B68     	 ldr r3,[r3,#4]
 999 0138 1B68     	 ldr r3,[r3]
 1000 013a FB60     	 str r3,[r7,#12]
 445:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.cnak = 1U;
 1001              	 .loc 1 445 0
 1002 013c FB7B     	 ldrb r3,[r7,#15]
 1003 013e 43F00403 	 orr r3,r3,#4
 1004 0142 FB73     	 strb r3,[r7,#15]
 446:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.epena = 1U;
 1005              	 .loc 1 446 0
 1006 0144 FB7B     	 ldrb r3,[r7,#15]
 1007 0146 43F08003 	 orr r3,r3,#128
 1008 014a FB73     	 strb r3,[r7,#15]
 447:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = epctl.d32;
 1009              	 .loc 1 447 0
 1010 014c 7B68     	 ldr r3,[r7,#4]
 1011 014e 1B78     	 ldrb r3,[r3]
 1012 0150 C3F30303 	 ubfx r3,r3,#0,#4
 1013 0154 DBB2     	 uxtb r3,r3
 1014 0156 074A     	 ldr r2,.L59+4
 1015 0158 7033     	 adds r3,r3,#112
 1016 015a 9B00     	 lsls r3,r3,#2
 1017 015c 1344     	 add r3,r3,r2
 1018 015e 5B68     	 ldr r3,[r3,#4]
 1019 0160 FA68     	 ldr r2,[r7,#12]
 1020 0162 1A60     	 str r2,[r3]
 448:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1021              	 .loc 1 448 0
 1022 0164 1C37     	 adds r7,r7,#28
 1023              	.LCFI45:
 1024              	 .cfi_def_cfa_offset 4
 1025 0166 BD46     	 mov sp,r7
 1026              	.LCFI46:
 1027              	 .cfi_def_cfa_register 13
 1028              	 
 1029 0168 5DF8047B 	 ldr r7,[sp],#4
 1030              	.LCFI47:
 1031              	 .cfi_restore 7
 1032              	 .cfi_def_cfa_offset 0
 1033 016c 7047     	 bx lr
 1034              	.L60:
 1035 016e 00BF     	 .align 2
 1036              	.L59:
 1037 0170 00000000 	 .word usbd_init
 1038 0174 00000000 	 .word xmc_device
 1039              	 .cfi_endproc
 1040              	.LFE184:
 1042              	 .section .text.XMC_USBD_lStartWriteXfer,"ax",%progbits
 1043              	 .align 2
 1044              	 .thumb
 1045              	 .thumb_func
 1047              	XMC_USBD_lStartWriteXfer:
 1048              	.LFB185:
 449:../Libraries/XMCLib/src/xmc_usbd.c **** 
 450:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 451:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Start a new in transfer
 452:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 453:../Libraries/XMCLib/src/xmc_usbd.c ****  * Based on the transfer values of the endpoint the in endpoint registers will be programmed
 454:../Libraries/XMCLib/src/xmc_usbd.c ****  * to start a new in transfer
 455:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 456:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] ep Endpoint to start the transfer
 457:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 458:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartWriteXfer(XMC_USBD_EP_t *const ep) 
 459:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1049              	 .loc 1 459 0
 1050              	 .cfi_startproc
 1051              	 
 1052              	 
 1053              	 
 1054 0000 80B4     	 push {r7}
 1055              	.LCFI48:
 1056              	 .cfi_def_cfa_offset 4
 1057              	 .cfi_offset 7,-4
 1058 0002 85B0     	 sub sp,sp,#20
 1059              	.LCFI49:
 1060              	 .cfi_def_cfa_offset 24
 1061 0004 00AF     	 add r7,sp,#0
 1062              	.LCFI50:
 1063              	 .cfi_def_cfa_register 7
 1064 0006 7860     	 str r0,[r7,#4]
 460:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t size;
 461:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t ctl;
 462:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 463:../Libraries/XMCLib/src/xmc_usbd.c ****   size.d32 = 0U;  
 1065              	 .loc 1 463 0
 1066 0008 0023     	 movs r3,#0
 1067 000a FB60     	 str r3,[r7,#12]
 464:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 1068              	 .loc 1 464 0
 1069 000c 7B68     	 ldr r3,[r7,#4]
 1070 000e 1B78     	 ldrb r3,[r3]
 1071 0010 C3F30303 	 ubfx r3,r3,#0,#4
 1072 0014 DBB2     	 uxtb r3,r3
 1073 0016 5D4A     	 ldr r2,.L69
 1074 0018 6A33     	 adds r3,r3,#106
 1075 001a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1076 001e 1B68     	 ldr r3,[r3]
 1077 0020 BB60     	 str r3,[r7,#8]
 465:../Libraries/XMCLib/src/xmc_usbd.c **** 
 466:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->xferTotal - ep->xferLength)  < ep->maxTransferSize)
 1078              	 .loc 1 466 0
 1079 0022 7B68     	 ldr r3,[r7,#4]
 1080 0024 1A6B     	 ldr r2,[r3,#48]
 1081 0026 7B68     	 ldr r3,[r7,#4]
 1082 0028 9B6A     	 ldr r3,[r3,#40]
 1083 002a D31A     	 subs r3,r2,r3
 1084 002c 7A68     	 ldr r2,[r7,#4]
 1085 002e 9268     	 ldr r2,[r2,#8]
 1086 0030 C2F31202 	 ubfx r2,r2,#0,#19
 1087 0034 9342     	 cmp r3,r2
 1088 0036 04D2     	 bcs .L62
 467:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 468:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = ep->xferTotal;
 1089              	 .loc 1 468 0
 1090 0038 7B68     	 ldr r3,[r7,#4]
 1091 003a 1A6B     	 ldr r2,[r3,#48]
 1092 003c 7B68     	 ldr r3,[r7,#4]
 1093 003e 9A62     	 str r2,[r3,#40]
 1094 0040 08E0     	 b .L63
 1095              	.L62:
 469:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 470:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 471:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 472:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength += ep->maxTransferSize;
 1096              	 .loc 1 472 0
 1097 0042 7B68     	 ldr r3,[r7,#4]
 1098 0044 9B6A     	 ldr r3,[r3,#40]
 1099 0046 7A68     	 ldr r2,[r7,#4]
 1100 0048 9268     	 ldr r2,[r2,#8]
 1101 004a C2F31202 	 ubfx r2,r2,#0,#19
 1102 004e 1A44     	 add r2,r2,r3
 1103 0050 7B68     	 ldr r3,[r7,#4]
 1104 0052 9A62     	 str r2,[r3,#40]
 1105              	.L63:
 473:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 474:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->xferLength == 0U)
 1106              	 .loc 1 474 0
 1107 0054 7B68     	 ldr r3,[r7,#4]
 1108 0056 9B6A     	 ldr r3,[r3,#40]
 1109 0058 002B     	 cmp r3,#0
 1110 005a 09D1     	 bne .L64
 475:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 476:../Libraries/XMCLib/src/xmc_usbd.c ****     size.b.xfersize = 0U;
 1111              	 .loc 1 476 0
 1112 005c FB68     	 ldr r3,[r7,#12]
 1113 005e 6FF31203 	 bfc r3,#0,#19
 1114 0062 FB60     	 str r3,[r7,#12]
 477:../Libraries/XMCLib/src/xmc_usbd.c ****     size.b.pktcnt = 1U;
 1115              	 .loc 1 477 0
 1116 0064 FB89     	 ldrh r3,[r7,#14]
 1117 0066 0122     	 movs r2,#1
 1118 0068 62F3CC03 	 bfi r3,r2,#3,#10
 1119 006c FB81     	 strh r3,[r7,#14]
 1120 006e 6AE0     	 b .L65
 1121              	.L64:
 478:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 479:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 480:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 481:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep->address_u.address_st.number == 0U)
 1122              	 .loc 1 481 0
 1123 0070 7B68     	 ldr r3,[r7,#4]
 1124 0072 1B78     	 ldrb r3,[r3]
 1125 0074 03F00F03 	 and r3,r3,#15
 1126 0078 DBB2     	 uxtb r3,r3
 1127 007a 002B     	 cmp r3,#0
 1128 007c 10D1     	 bne .L66
 482:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 483:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = 1U;
 1129              	 .loc 1 483 0
 1130 007e FB89     	 ldrh r3,[r7,#14]
 1131 0080 0122     	 movs r2,#1
 1132 0082 62F3CC03 	 bfi r3,r2,#3,#10
 1133 0086 FB81     	 strh r3,[r7,#14]
 484:../Libraries/XMCLib/src/xmc_usbd.c ****       /* ep->maxXferSize equals maxPacketSize */
 485:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.xfersize = (uint32_t)(ep->xferLength - ep->xferCount);
 1134              	 .loc 1 485 0
 1135 0088 7B68     	 ldr r3,[r7,#4]
 1136 008a 9A6A     	 ldr r2,[r3,#40]
 1137 008c 7B68     	 ldr r3,[r7,#4]
 1138 008e DB6A     	 ldr r3,[r3,#44]
 1139 0090 D31A     	 subs r3,r2,r3
 1140 0092 C3F31202 	 ubfx r2,r3,#0,#19
 1141 0096 FB68     	 ldr r3,[r7,#12]
 1142 0098 62F31203 	 bfi r3,r2,#0,#19
 1143 009c FB60     	 str r3,[r7,#12]
 1144 009e 2BE0     	 b .L67
 1145              	.L66:
 486:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 487:../Libraries/XMCLib/src/xmc_usbd.c ****     else
 488:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 489:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.xfersize =(uint32_t)(ep->xferLength - ep->xferCount);
 1146              	 .loc 1 489 0
 1147 00a0 7B68     	 ldr r3,[r7,#4]
 1148 00a2 9A6A     	 ldr r2,[r3,#40]
 1149 00a4 7B68     	 ldr r3,[r7,#4]
 1150 00a6 DB6A     	 ldr r3,[r3,#44]
 1151 00a8 D31A     	 subs r3,r2,r3
 1152 00aa C3F31202 	 ubfx r2,r3,#0,#19
 1153 00ae FB68     	 ldr r3,[r7,#12]
 1154 00b0 62F31203 	 bfi r3,r2,#0,#19
 1155 00b4 FB60     	 str r3,[r7,#12]
 490:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 1156              	 .loc 1 490 0
 1157 00b6 7B68     	 ldr r3,[r7,#4]
 1158 00b8 9B6A     	 ldr r3,[r3,#40]
 1159 00ba 9AB2     	 uxth r2,r3
 1160 00bc 7B68     	 ldr r3,[r7,#4]
 1161 00be DB6A     	 ldr r3,[r3,#44]
 1162 00c0 9BB2     	 uxth r3,r3
 1163 00c2 D31A     	 subs r3,r2,r3
 1164 00c4 9BB2     	 uxth r3,r3
 1165 00c6 1A46     	 mov r2,r3
 1166 00c8 7B68     	 ldr r3,[r7,#4]
 1167 00ca 5B68     	 ldr r3,[r3,#4]
 1168 00cc C3F3C623 	 ubfx r3,r3,#11,#7
 1169 00d0 DBB2     	 uxtb r3,r3
 1170 00d2 9BB2     	 uxth r3,r3
 1171 00d4 013B     	 subs r3,r3,#1
 1172 00d6 9BB2     	 uxth r3,r3
 1173 00d8 1344     	 add r3,r3,r2
 491:../Libraries/XMCLib/src/xmc_usbd.c ****     		 ep->maxPacketSize);
 1174              	 .loc 1 491 0
 1175 00da 7A68     	 ldr r2,[r7,#4]
 1176 00dc 5268     	 ldr r2,[r2,#4]
 1177 00de C2F3C622 	 ubfx r2,r2,#11,#7
 1178 00e2 D2B2     	 uxtb r2,r2
 490:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 1179              	 .loc 1 490 0
 1180 00e4 93FBF2F3 	 sdiv r3,r3,r2
 1181 00e8 9BB2     	 uxth r3,r3
 1182 00ea C3F30903 	 ubfx r3,r3,#0,#10
 1183 00ee 9AB2     	 uxth r2,r3
 1184 00f0 FB89     	 ldrh r3,[r7,#14]
 1185 00f2 62F3CC03 	 bfi r3,r2,#3,#10
 1186 00f6 FB81     	 strh r3,[r7,#14]
 1187              	.L67:
 492:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 493:../Libraries/XMCLib/src/xmc_usbd.c ****     if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1188              	 .loc 1 493 0
 1189 00f8 254B     	 ldr r3,.L69+4
 1190 00fa 1B68     	 ldr r3,[r3]
 1191 00fc 5B7B     	 ldrb r3,[r3,#13]
 1192 00fe 002B     	 cmp r3,#0
 1193 0100 0BD1     	 bne .L68
 494:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 495:../Libraries/XMCLib/src/xmc_usbd.c ****       /* Program dma*/
 496:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepdma = (uint32_t)ep->xfe
 1194              	 .loc 1 496 0
 1195 0102 7B68     	 ldr r3,[r7,#4]
 1196 0104 1B78     	 ldrb r3,[r3]
 1197 0106 C3F30303 	 ubfx r3,r3,#0,#4
 1198 010a DBB2     	 uxtb r3,r3
 1199 010c 1F4A     	 ldr r2,.L69
 1200 010e 6A33     	 adds r3,r3,#106
 1201 0110 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1202 0114 7A68     	 ldr r2,[r7,#4]
 1203 0116 526A     	 ldr r2,[r2,#36]
 1204 0118 5A61     	 str r2,[r3,#20]
 1205              	.L68:
 497:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 498:../Libraries/XMCLib/src/xmc_usbd.c ****     if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1206              	 .loc 1 498 0
 1207 011a 1D4B     	 ldr r3,.L69+4
 1208 011c 1B68     	 ldr r3,[r3]
 1209 011e 5B7B     	 ldrb r3,[r3,#13]
 1210 0120 012B     	 cmp r3,#1
 1211 0122 10D1     	 bne .L65
 499:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 500:../Libraries/XMCLib/src/xmc_usbd.c ****       /* enable fifo empty interrupt */
 501:../Libraries/XMCLib/src/xmc_usbd.c **** 			xmc_device.device_register->dtknqr4_fifoemptymsk |= (uint32_t)((uint32_t)1U << (uint8_t)ep->addr
 1212              	 .loc 1 501 0
 1213 0124 194B     	 ldr r3,.L69
 1214 0126 D3F8A431 	 ldr r3,[r3,#420]
 1215 012a 184A     	 ldr r2,.L69
 1216 012c D2F8A421 	 ldr r2,[r2,#420]
 1217 0130 516B     	 ldr r1,[r2,#52]
 1218 0132 7A68     	 ldr r2,[r7,#4]
 1219 0134 1278     	 ldrb r2,[r2]
 1220 0136 C2F30302 	 ubfx r2,r2,#0,#4
 1221 013a D2B2     	 uxtb r2,r2
 1222 013c 1046     	 mov r0,r2
 1223 013e 0122     	 movs r2,#1
 1224 0140 8240     	 lsls r2,r2,r0
 1225 0142 0A43     	 orrs r2,r2,r1
 1226 0144 5A63     	 str r2,[r3,#52]
 1227              	.L65:
 502:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 503:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 504:../Libraries/XMCLib/src/xmc_usbd.c **** 
 505:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Program size of transfer and enable endpoint */
 506:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dieptsiz = size.d32;
 1228              	 .loc 1 506 0
 1229 0146 7B68     	 ldr r3,[r7,#4]
 1230 0148 1B78     	 ldrb r3,[r3]
 1231 014a C3F30303 	 ubfx r3,r3,#0,#4
 1232 014e DBB2     	 uxtb r3,r3
 1233 0150 0E4A     	 ldr r2,.L69
 1234 0152 6A33     	 adds r3,r3,#106
 1235 0154 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1236 0158 FA68     	 ldr r2,[r7,#12]
 1237 015a 1A61     	 str r2,[r3,#16]
 507:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.epena = 1U;
 1238              	 .loc 1 507 0
 1239 015c FB7A     	 ldrb r3,[r7,#11]
 1240 015e 43F08003 	 orr r3,r3,#128
 1241 0162 FB72     	 strb r3,[r7,#11]
 508:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.cnak = 1U;
 1242              	 .loc 1 508 0
 1243 0164 FB7A     	 ldrb r3,[r7,#11]
 1244 0166 43F00403 	 orr r3,r3,#4
 1245 016a FB72     	 strb r3,[r7,#11]
 509:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = ctl.d32;
 1246              	 .loc 1 509 0
 1247 016c 7B68     	 ldr r3,[r7,#4]
 1248 016e 1B78     	 ldrb r3,[r3]
 1249 0170 C3F30303 	 ubfx r3,r3,#0,#4
 1250 0174 DBB2     	 uxtb r3,r3
 1251 0176 054A     	 ldr r2,.L69
 1252 0178 6A33     	 adds r3,r3,#106
 1253 017a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1254 017e BA68     	 ldr r2,[r7,#8]
 1255 0180 1A60     	 str r2,[r3]
 510:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1256              	 .loc 1 510 0
 1257 0182 1437     	 adds r7,r7,#20
 1258              	.LCFI51:
 1259              	 .cfi_def_cfa_offset 4
 1260 0184 BD46     	 mov sp,r7
 1261              	.LCFI52:
 1262              	 .cfi_def_cfa_register 13
 1263              	 
 1264 0186 5DF8047B 	 ldr r7,[sp],#4
 1265              	.LCFI53:
 1266              	 .cfi_restore 7
 1267              	 .cfi_def_cfa_offset 0
 1268 018a 7047     	 bx lr
 1269              	.L70:
 1270              	 .align 2
 1271              	.L69:
 1272 018c 00000000 	 .word xmc_device
 1273 0190 00000000 	 .word usbd_init
 1274              	 .cfi_endproc
 1275              	.LFE185:
 1277              	 .section .text.XMC_USBD_lHandleUSBReset,"ax",%progbits
 1278              	 .align 2
 1279              	 .thumb
 1280              	 .thumb_func
 1282              	XMC_USBD_lHandleUSBReset:
 1283              	.LFB186:
 511:../Libraries/XMCLib/src/xmc_usbd.c **** 
 512:../Libraries/XMCLib/src/xmc_usbd.c **** 
 513:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 514:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles the USBD reset interrupt
 515:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 516:../Libraries/XMCLib/src/xmc_usbd.c ****  * When ever the host sets the bus into reset condition the usb otg_core generates
 517:../Libraries/XMCLib/src/xmc_usbd.c ****  * an interrupt, which is handled by this function. It resets the complete otg_core
 518:../Libraries/XMCLib/src/xmc_usbd.c ****  * into the default state.
 519:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 520:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleUSBReset(const XMC_USBD_t *const obj) 
 521:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1284              	 .loc 1 521 0
 1285              	 .cfi_startproc
 1286              	 
 1287              	 
 1288 0000 80B5     	 push {r7,lr}
 1289              	.LCFI54:
 1290              	 .cfi_def_cfa_offset 8
 1291              	 .cfi_offset 7,-8
 1292              	 .cfi_offset 14,-4
 1293 0002 88B0     	 sub sp,sp,#32
 1294              	.LCFI55:
 1295              	 .cfi_def_cfa_offset 40
 1296 0004 00AF     	 add r7,sp,#0
 1297              	.LCFI56:
 1298              	 .cfi_def_cfa_register 7
 1299 0006 7860     	 str r0,[r7,#4]
 522:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 523:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 524:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
 525:../Libraries/XMCLib/src/xmc_usbd.c ****   fifosize_data_t gnptxfsiz;
 526:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 527:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t dcfg;
 528:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 529:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear the Remote Wakeup Signaling */
 530:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 1300              	 .loc 1 530 0
 1301 0008 4F4B     	 ldr r3,.L77
 1302 000a D3F8A431 	 ldr r3,[r3,#420]
 1303 000e 5B68     	 ldr r3,[r3,#4]
 1304 0010 7B61     	 str r3,[r7,#20]
 531:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.rmtwkupsig = 1U;
 1305              	 .loc 1 531 0
 1306 0012 3B7D     	 ldrb r3,[r7,#20]
 1307 0014 43F00103 	 orr r3,r3,#1
 1308 0018 3B75     	 strb r3,[r7,#20]
 532:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 1309              	 .loc 1 532 0
 1310 001a 4B4B     	 ldr r3,.L77
 1311 001c D3F8A431 	 ldr r3,[r3,#420]
 1312 0020 7A69     	 ldr r2,[r7,#20]
 1313 0022 5A60     	 str r2,[r3,#4]
 533:../Libraries/XMCLib/src/xmc_usbd.c **** 
 534:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable naks for all eps */
 535:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint8_t)XMC_USBD_NUM_EPS;i++)
 1314              	 .loc 1 535 0
 1315 0024 0023     	 movs r3,#0
 1316 0026 FB61     	 str r3,[r7,#28]
 1317 0028 1AE0     	 b .L72
 1318              	.L73:
 536:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 537:../Libraries/XMCLib/src/xmc_usbd.c ****     epctl.d32 = xmc_device.endpoint_out_register[i]->doepctl;
 1319              	 .loc 1 537 0 discriminator 3
 1320 002a 474A     	 ldr r2,.L77
 1321 002c FB69     	 ldr r3,[r7,#28]
 1322 002e 7033     	 adds r3,r3,#112
 1323 0030 9B00     	 lsls r3,r3,#2
 1324 0032 1344     	 add r3,r3,r2
 1325 0034 5B68     	 ldr r3,[r3,#4]
 1326 0036 1B68     	 ldr r3,[r3]
 1327 0038 BB61     	 str r3,[r7,#24]
 538:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.snak = 1U;
 1328              	 .loc 1 538 0 discriminator 3
 1329 003a FB7E     	 ldrb r3,[r7,#27]
 1330 003c 43F00803 	 orr r3,r3,#8
 1331 0040 FB76     	 strb r3,[r7,#27]
 539:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.stall = 0U;
 1332              	 .loc 1 539 0 discriminator 3
 1333 0042 BB7E     	 ldrb r3,[r7,#26]
 1334 0044 6FF34513 	 bfc r3,#5,#1
 1335 0048 BB76     	 strb r3,[r7,#26]
 540:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[i]->doepctl = epctl.d32;
 1336              	 .loc 1 540 0 discriminator 3
 1337 004a 3F4A     	 ldr r2,.L77
 1338 004c FB69     	 ldr r3,[r7,#28]
 1339 004e 7033     	 adds r3,r3,#112
 1340 0050 9B00     	 lsls r3,r3,#2
 1341 0052 1344     	 add r3,r3,r2
 1342 0054 5B68     	 ldr r3,[r3,#4]
 1343 0056 BA69     	 ldr r2,[r7,#24]
 1344 0058 1A60     	 str r2,[r3]
 535:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1345              	 .loc 1 535 0 discriminator 3
 1346 005a FB69     	 ldr r3,[r7,#28]
 1347 005c 0133     	 adds r3,r3,#1
 1348 005e FB61     	 str r3,[r7,#28]
 1349              	.L72:
 535:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1350              	 .loc 1 535 0 is_stmt 0 discriminator 1
 1351 0060 FB69     	 ldr r3,[r7,#28]
 1352 0062 062B     	 cmp r3,#6
 1353 0064 E1D9     	 bls .L73
 541:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 542:../Libraries/XMCLib/src/xmc_usbd.c **** 
 543:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Configure fifos */
 544:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the rx fifo */
 545:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grxfsiz = 64U;
 1354              	 .loc 1 545 0 is_stmt 1
 1355 0066 384B     	 ldr r3,.L77
 1356 0068 D3F8A031 	 ldr r3,[r3,#416]
 1357 006c 4022     	 movs r2,#64
 1358 006e 5A62     	 str r2,[r3,#36]
 546:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the tx fifo for ep 0 */  
 547:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.d32 = 0U;
 1359              	 .loc 1 547 0
 1360 0070 0023     	 movs r3,#0
 1361 0072 3B61     	 str r3,[r7,#16]
 548:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.depth = 16U;
 1362              	 .loc 1 548 0
 1363 0074 1023     	 movs r3,#16
 1364 0076 7B82     	 strh r3,[r7,#18]
 549:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.startaddr = 64U;
 1365              	 .loc 1 549 0
 1366 0078 4023     	 movs r3,#64
 1367 007a 3B82     	 strh r3,[r7,#16]
 550:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gnptxfsiz = gnptxfsiz.d32;
 1368              	 .loc 1 550 0
 1369 007c 324B     	 ldr r3,.L77
 1370 007e D3F8A031 	 ldr r3,[r3,#416]
 1371 0082 3A69     	 ldr r2,[r7,#16]
 1372 0084 9A62     	 str r2,[r3,#40]
 551:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the size for the rest */
 552:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 1U;i < (uint8_t)XMC_USBD_NUM_TX_FIFOS;i++)
 1373              	 .loc 1 552 0
 1374 0086 0123     	 movs r3,#1
 1375 0088 FB61     	 str r3,[r7,#28]
 1376 008a 11E0     	 b .L74
 1377              	.L75:
 553:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 554:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.global_register->dtxfsiz[i- 1U] = (uint32_t)(((256U + (i*(64U)))/4U) | ((uint32_t)16
 1378              	 .loc 1 554 0 discriminator 3
 1379 008c 2E4B     	 ldr r3,.L77
 1380 008e D3F8A011 	 ldr r1,[r3,#416]
 1381 0092 FB69     	 ldr r3,[r7,#28]
 1382 0094 013B     	 subs r3,r3,#1
 1383 0096 FA69     	 ldr r2,[r7,#28]
 1384 0098 0432     	 adds r2,r2,#4
 1385 009a 9201     	 lsls r2,r2,#6
 1386 009c 9208     	 lsrs r2,r2,#2
 1387 009e 42F48012 	 orr r2,r2,#1048576
 1388 00a2 4033     	 adds r3,r3,#64
 1389 00a4 9B00     	 lsls r3,r3,#2
 1390 00a6 0B44     	 add r3,r3,r1
 1391 00a8 5A60     	 str r2,[r3,#4]
 552:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1392              	 .loc 1 552 0 discriminator 3
 1393 00aa FB69     	 ldr r3,[r7,#28]
 1394 00ac 0133     	 adds r3,r3,#1
 1395 00ae FB61     	 str r3,[r7,#28]
 1396              	.L74:
 552:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1397              	 .loc 1 552 0 is_stmt 0 discriminator 1
 1398 00b0 FB69     	 ldr r3,[r7,#28]
 1399 00b2 062B     	 cmp r3,#6
 1400 00b4 EAD9     	 bls .L75
 555:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 556:../Libraries/XMCLib/src/xmc_usbd.c **** 
 557:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush the fifos for proper operation */
 558:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo(0x10U); /* 0x10 == all fifos, see doc */
 1401              	 .loc 1 558 0 is_stmt 1
 1402 00b6 1020     	 movs r0,#16
 1403 00b8 FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
 559:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo(0x0U);
 1404              	 .loc 1 559 0
 1405 00bc 0020     	 movs r0,#0
 1406 00be FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
 560:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
 1407              	 .loc 1 560 0
 1408 00c2 FFF7FEFF 	 bl XMC_USBD_lFlushRXFifo
 561:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Flush learning queue not needed due to fifo config */
 562:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable ep0 interrupts */  
 563:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = 0U;
 1409              	 .loc 1 563 0
 1410 00c6 0023     	 movs r3,#0
 1411 00c8 FB60     	 str r3,[r7,#12]
 564:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.b.inep0 = 1U;
 1412              	 .loc 1 564 0
 1413 00ca 3B7B     	 ldrb r3,[r7,#12]
 1414 00cc 43F00103 	 orr r3,r3,#1
 1415 00d0 3B73     	 strb r3,[r7,#12]
 565:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.b.outep0 = 1U;
 1416              	 .loc 1 565 0
 1417 00d2 BB7B     	 ldrb r3,[r7,#14]
 1418 00d4 43F00103 	 orr r3,r3,#1
 1419 00d8 BB73     	 strb r3,[r7,#14]
 566:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->daintmsk = daint.d32;
 1420              	 .loc 1 566 0
 1421 00da 1B4B     	 ldr r3,.L77
 1422 00dc D3F8A431 	 ldr r3,[r3,#420]
 1423 00e0 FA68     	 ldr r2,[r7,#12]
 1424 00e2 DA61     	 str r2,[r3,#28]
 567:../Libraries/XMCLib/src/xmc_usbd.c **** 
 568:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable endpoint interrupts */
 569:../Libraries/XMCLib/src/xmc_usbd.c ****   /* out ep interrupts */
 570:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EnableEventOUTEP(((uint32_t)XMC_USBD_EVENT_OUT_EP_TX_COMPLET | (uint32_t)XMC_USBD_EVENT_
 1425              	 .loc 1 570 0
 1426 00e4 0F20     	 movs r0,#15
 1427 00e6 FFF7FEFF 	 bl XMC_USBD_EnableEventOUTEP
 571:../Libraries/XMCLib/src/xmc_usbd.c **** 		  	  	  	  	  	  (uint32_t)XMC_USBD_EVENT_OUT_EP_SETUP | (uint32_t)XMC_USBD_EVENT_OUT_EP_AHB_ERRO
 572:../Libraries/XMCLib/src/xmc_usbd.c **** 
 573:../Libraries/XMCLib/src/xmc_usbd.c ****   /*in ep interrupts */
 574:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EnableEventINEP(((uint32_t)XMC_USBD_EVENT_IN_EP_TX_COMPLET | (uint32_t)XMC_USBD_EVENT_IN
 1428              	 .loc 1 574 0
 1429 00ea 0F20     	 movs r0,#15
 1430 00ec FFF7FEFF 	 bl XMC_USBD_EnableEventINEP
 575:../Libraries/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)XMC_USBD_EVENT_IN_EP_AHB_ERROR | (uint32_t)XMC_USBD_EVENT_IN_EP_TIMEOUT));
 576:../Libraries/XMCLib/src/xmc_usbd.c **** 
 577:../Libraries/XMCLib/src/xmc_usbd.c **** 
 578:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear device Address */  
 579:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.d32 = xmc_device.device_register->dcfg;
 1431              	 .loc 1 579 0
 1432 00f0 154B     	 ldr r3,.L77
 1433 00f2 D3F8A431 	 ldr r3,[r3,#420]
 1434 00f6 1B68     	 ldr r3,[r3]
 1435 00f8 BB60     	 str r3,[r7,#8]
 580:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devaddr = 0U;
 1436              	 .loc 1 580 0
 1437 00fa 3B89     	 ldrh r3,[r7,#8]
 1438 00fc 6FF30A13 	 bfc r3,#4,#7
 1439 0100 3B81     	 strh r3,[r7,#8]
 581:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
 1440              	 .loc 1 581 0
 1441 0102 114B     	 ldr r3,.L77
 1442 0104 D3F8A431 	 ldr r3,[r3,#420]
 1443 0108 BA68     	 ldr r2,[r7,#8]
 1444 010a 1A60     	 str r2,[r3]
 582:../Libraries/XMCLib/src/xmc_usbd.c **** 
 583:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1445              	 .loc 1 583 0
 1446 010c 7B68     	 ldr r3,[r7,#4]
 1447 010e 5B7B     	 ldrb r3,[r3,#13]
 1448 0110 012B     	 cmp r3,#1
 1449 0112 04D1     	 bne .L76
 584:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 585:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Clear Empty interrupt */
 586:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->dtknqr4_fifoemptymsk = 0U;
 1450              	 .loc 1 586 0
 1451 0114 0C4B     	 ldr r3,.L77
 1452 0116 D3F8A431 	 ldr r3,[r3,#420]
 1453 011a 0022     	 movs r2,#0
 1454 011c 5A63     	 str r2,[r3,#52]
 1455              	.L76:
 587:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 588:../Libraries/XMCLib/src/xmc_usbd.c **** 
 589:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].outInUse = 0U;
 1456              	 .loc 1 589 0
 1457 011e 0A4B     	 ldr r3,.L77
 1458 0120 5A68     	 ldr r2,[r3,#4]
 1459 0122 22F01002 	 bic r2,r2,#16
 1460 0126 5A60     	 str r2,[r3,#4]
 590:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].inInUse = 0U;
 1461              	 .loc 1 590 0
 1462 0128 074B     	 ldr r3,.L77
 1463 012a 5A68     	 ldr r2,[r3,#4]
 1464 012c 22F00802 	 bic r2,r2,#8
 1465 0130 5A60     	 str r2,[r3,#4]
 591:../Libraries/XMCLib/src/xmc_usbd.c **** 
 592:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_RESET);
 1466              	 .loc 1 592 0
 1467 0132 054B     	 ldr r3,.L77
 1468 0134 D3F80032 	 ldr r3,[r3,#512]
 1469 0138 0420     	 movs r0,#4
 1470 013a 9847     	 blx r3
 593:../Libraries/XMCLib/src/xmc_usbd.c **** 
 594:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear reset intr */
 595:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_RESET);
 1471              	 .loc 1 595 0
 1472 013c 0420     	 movs r0,#4
 1473 013e FFF7FEFF 	 bl XMC_USBD_ClearEvent
 596:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1474              	 .loc 1 596 0
 1475 0142 2037     	 adds r7,r7,#32
 1476              	.LCFI57:
 1477              	 .cfi_def_cfa_offset 8
 1478 0144 BD46     	 mov sp,r7
 1479              	.LCFI58:
 1480              	 .cfi_def_cfa_register 13
 1481              	 
 1482 0146 80BD     	 pop {r7,pc}
 1483              	.L78:
 1484              	 .align 2
 1485              	.L77:
 1486 0148 00000000 	 .word xmc_device
 1487              	 .cfi_endproc
 1488              	.LFE186:
 1490              	 .section .text.XMC_USBD_lHandleOTGInt,"ax",%progbits
 1491              	 .align 2
 1492              	 .thumb
 1493              	 .thumb_func
 1495              	XMC_USBD_lHandleOTGInt:
 1496              	.LFB187:
 597:../Libraries/XMCLib/src/xmc_usbd.c **** 
 598:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 599:../Libraries/XMCLib/src/xmc_usbd.c **** * @brief Handle OTG Interrupt
 600:../Libraries/XMCLib/src/xmc_usbd.c **** *
 601:../Libraries/XMCLib/src/xmc_usbd.c **** * It detects especially connect and disconnect events.
 602:../Libraries/XMCLib/src/xmc_usbd.c **** */
 603:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOTGInt(void) 
 604:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1497              	 .loc 1 604 0
 1498              	 .cfi_startproc
 1499              	 
 1500              	 
 1501 0000 80B5     	 push {r7,lr}
 1502              	.LCFI59:
 1503              	 .cfi_def_cfa_offset 8
 1504              	 .cfi_offset 7,-8
 1505              	 .cfi_offset 14,-4
 1506 0002 82B0     	 sub sp,sp,#8
 1507              	.LCFI60:
 1508              	 .cfi_def_cfa_offset 16
 1509 0004 00AF     	 add r7,sp,#0
 1510              	.LCFI61:
 1511              	 .cfi_def_cfa_register 7
 605:../Libraries/XMCLib/src/xmc_usbd.c ****   gotgint_data_t data;
 606:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->gotgint;
 1512              	 .loc 1 606 0
 1513 0006 0F4B     	 ldr r3,.L81
 1514 0008 D3F8A031 	 ldr r3,[r3,#416]
 1515 000c 5B68     	 ldr r3,[r3,#4]
 1516 000e 7B60     	 str r3,[r7,#4]
 607:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sesenddet)
 1517              	 .loc 1 607 0
 1518 0010 3B79     	 ldrb r3,[r7,#4]
 1519 0012 03F00403 	 and r3,r3,#4
 1520 0016 DBB2     	 uxtb r3,r3
 1521 0018 002B     	 cmp r3,#0
 1522 001a 0BD0     	 beq .L80
 608:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 609:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.IsPowered = 0U;
 1523              	 .loc 1 609 0
 1524 001c 094A     	 ldr r2,.L81
 1525 001e 92F8FE31 	 ldrb r3,[r2,#510]
 1526 0022 6FF38203 	 bfc r3,#2,#1
 1527 0026 82F8FE31 	 strb r3,[r2,#510]
 610:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_OFF);
 1528              	 .loc 1 610 0
 1529 002a 064B     	 ldr r3,.L81
 1530 002c D3F80032 	 ldr r3,[r3,#512]
 1531 0030 0120     	 movs r0,#1
 1532 0032 9847     	 blx r3
 1533              	.L80:
 611:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 612:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lClearEventOTG(data.d32);
 1534              	 .loc 1 612 0
 1535 0034 7B68     	 ldr r3,[r7,#4]
 1536 0036 1846     	 mov r0,r3
 1537 0038 FFF7FEFF 	 bl XMC_USBD_lClearEventOTG
 613:../Libraries/XMCLib/src/xmc_usbd.c **** 
 614:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1538              	 .loc 1 614 0
 1539 003c 0837     	 adds r7,r7,#8
 1540              	.LCFI62:
 1541              	 .cfi_def_cfa_offset 8
 1542 003e BD46     	 mov sp,r7
 1543              	.LCFI63:
 1544              	 .cfi_def_cfa_register 13
 1545              	 
 1546 0040 80BD     	 pop {r7,pc}
 1547              	.L82:
 1548 0042 00BF     	 .align 2
 1549              	.L81:
 1550 0044 00000000 	 .word xmc_device
 1551              	 .cfi_endproc
 1552              	.LFE187:
 1554              	 .section .text.XMC_USBD_lHandleEnumDone,"ax",%progbits
 1555              	 .align 2
 1556              	 .thumb
 1557              	 .thumb_func
 1559              	XMC_USBD_lHandleEnumDone:
 1560              	.LFB188:
 615:../Libraries/XMCLib/src/xmc_usbd.c **** 
 616:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 617:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Interrupt handler for device enumeration done.
 618:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 619:../Libraries/XMCLib/src/xmc_usbd.c ****  * Handles the enumeration done from dwc_otg, when the host has enumerated the device.
 620:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 621:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleEnumDone(void) 
 622:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1561              	 .loc 1 622 0
 1562              	 .cfi_startproc
 1563              	 
 1564              	 
 1565 0000 80B5     	 push {r7,lr}
 1566              	.LCFI64:
 1567              	 .cfi_def_cfa_offset 8
 1568              	 .cfi_offset 7,-8
 1569              	 .cfi_offset 14,-4
 1570 0002 82B0     	 sub sp,sp,#8
 1571              	.LCFI65:
 1572              	 .cfi_def_cfa_offset 16
 1573 0004 00AF     	 add r7,sp,#0
 1574              	.LCFI66:
 1575              	 .cfi_def_cfa_register 7
 623:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Normaly we need to check dctl
 624:../Libraries/XMCLib/src/xmc_usbd.c ****    * We are always fullspeed, so max it up. */
 625:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 626:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg_data_t gusbcfg;
 627:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 628:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.d32=xmc_device.endpoint_in_register[0U]->diepctl;
 1576              	 .loc 1 628 0
 1577 0006 1B4B     	 ldr r3,.L84
 1578 0008 D3F8A831 	 ldr r3,[r3,#424]
 1579 000c 1B68     	 ldr r3,[r3]
 1580 000e 7B60     	 str r3,[r7,#4]
 629:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.mps = 0x00U; /* 64 Byte, this is also automatically set for out ep */
 1581              	 .loc 1 629 0
 1582 0010 BB88     	 ldrh r3,[r7,#4]
 1583 0012 6FF30A03 	 bfc r3,#0,#11
 1584 0016 BB80     	 strh r3,[r7,#4]
 630:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[0U]->diepctl = epctl.d32;
 1585              	 .loc 1 630 0
 1586 0018 164B     	 ldr r3,.L84
 1587 001a D3F8A831 	 ldr r3,[r3,#424]
 1588 001e 7A68     	 ldr r2,[r7,#4]
 1589 0020 1A60     	 str r2,[r3]
 631:../Libraries/XMCLib/src/xmc_usbd.c **** 
 632:../Libraries/XMCLib/src/xmc_usbd.c ****   /* update device connected flag */
 633:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.IsConnected = 1U;
 1590              	 .loc 1 633 0
 1591 0022 144A     	 ldr r2,.L84
 1592 0024 92F8FE31 	 ldrb r3,[r2,#510]
 1593 0028 43F00103 	 orr r3,r3,#1
 1594 002c 82F8FE31 	 strb r3,[r2,#510]
 634:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.IsPowered = 1U;
 1595              	 .loc 1 634 0
 1596 0030 104A     	 ldr r2,.L84
 1597 0032 92F8FE31 	 ldrb r3,[r2,#510]
 1598 0036 43F00403 	 orr r3,r3,#4
 1599 003a 82F8FE31 	 strb r3,[r2,#510]
 635:../Libraries/XMCLib/src/xmc_usbd.c **** 
 636:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_CONNECT);
 1600              	 .loc 1 636 0
 1601 003e 0D4B     	 ldr r3,.L84
 1602 0040 D3F80032 	 ldr r3,[r3,#512]
 1603 0044 0220     	 movs r0,#2
 1604 0046 9847     	 blx r3
 637:../Libraries/XMCLib/src/xmc_usbd.c **** 
 638:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Set Trim */  
 639:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.d32 = xmc_device.global_register->gusbcfg;
 1605              	 .loc 1 639 0
 1606 0048 0A4B     	 ldr r3,.L84
 1607 004a D3F8A031 	 ldr r3,[r3,#416]
 1608 004e DB68     	 ldr r3,[r3,#12]
 1609 0050 3B60     	 str r3,[r7]
 640:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.usbtrdtim = 9U; /* default value for LS/FS */
 1610              	 .loc 1 640 0
 1611 0052 7B78     	 ldrb r3,[r7,#1]
 1612 0054 0922     	 movs r2,#9
 1613 0056 62F38503 	 bfi r3,r2,#2,#4
 1614 005a 7B70     	 strb r3,[r7,#1]
 641:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
 1615              	 .loc 1 641 0
 1616 005c 054B     	 ldr r3,.L84
 1617 005e D3F8A031 	 ldr r3,[r3,#416]
 1618 0062 3A68     	 ldr r2,[r7]
 1619 0064 DA60     	 str r2,[r3,#12]
 642:../Libraries/XMCLib/src/xmc_usbd.c **** 
 643:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt */
 644:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_ENUMDONE);
 1620              	 .loc 1 644 0
 1621 0066 0B20     	 movs r0,#11
 1622 0068 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 645:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1623              	 .loc 1 645 0
 1624 006c 0837     	 adds r7,r7,#8
 1625              	.LCFI67:
 1626              	 .cfi_def_cfa_offset 8
 1627 006e BD46     	 mov sp,r7
 1628              	.LCFI68:
 1629              	 .cfi_def_cfa_register 13
 1630              	 
 1631 0070 80BD     	 pop {r7,pc}
 1632              	.L85:
 1633 0072 00BF     	 .align 2
 1634              	.L84:
 1635 0074 00000000 	 .word xmc_device
 1636              	 .cfi_endproc
 1637              	.LFE188:
 1639              	 .section .text.XMC_USBD_lHandleOEPInt,"ax",%progbits
 1640              	 .align 2
 1641              	 .thumb
 1642              	 .thumb_func
 1644              	XMC_USBD_lHandleOEPInt:
 1645              	.LFB189:
 646:../Libraries/XMCLib/src/xmc_usbd.c **** 
 647:../Libraries/XMCLib/src/xmc_usbd.c **** 
 648:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 649:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles all interrupts for all out endpoints
 650:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 651:../Libraries/XMCLib/src/xmc_usbd.c ****  * The interrupt handler first checks, which endpoint has caused the interrupt and then
 652:../Libraries/XMCLib/src/xmc_usbd.c ****  * determines, which interrupt should be handled.
 653:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 654:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOEPInt(const XMC_USBD_t *const obj) 
 655:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1646              	 .loc 1 655 0
 1647              	 .cfi_startproc
 1648              	 
 1649              	 
 1650 0000 80B5     	 push {r7,lr}
 1651              	.LCFI69:
 1652              	 .cfi_def_cfa_offset 8
 1653              	 .cfi_offset 7,-8
 1654              	 .cfi_offset 14,-4
 1655 0002 8CB0     	 sub sp,sp,#48
 1656              	.LCFI70:
 1657              	 .cfi_def_cfa_offset 56
 1658 0004 00AF     	 add r7,sp,#0
 1659              	.LCFI71:
 1660              	 .cfi_def_cfa_register 7
 1661 0006 7860     	 str r0,[r7,#4]
 656:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 657:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
 658:../Libraries/XMCLib/src/xmc_usbd.c ****   doepmsk_data_t doepmsk;
 659:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t doepint;
 660:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t doeptsiz;
 661:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
 662:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp;
 663:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp1;
 664:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask;
 665:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t ep_num;
 666:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 667:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = xmc_device.device_register->daint;
 1662              	 .loc 1 667 0
 1663 0008 6A4B     	 ldr r3,.L97
 1664 000a D3F8A431 	 ldr r3,[r3,#420]
 1665 000e 9B69     	 ldr r3,[r3,#24]
 1666 0010 FB61     	 str r3,[r7,#28]
 668:../Libraries/XMCLib/src/xmc_usbd.c ****   
 669:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;
 1667              	 .loc 1 669 0
 1668 0012 684B     	 ldr r3,.L97
 1669 0014 D3F8A431 	 ldr r3,[r3,#420]
 1670 0018 DB69     	 ldr r3,[r3,#28]
 1671 001a BB61     	 str r3,[r7,#24]
 670:../Libraries/XMCLib/src/xmc_usbd.c ****   
 671:../Libraries/XMCLib/src/xmc_usbd.c ****   doepmsk.d32 = xmc_device.device_register->doepmsk;  
 1672              	 .loc 1 671 0
 1673 001c 654B     	 ldr r3,.L97
 1674 001e D3F8A431 	 ldr r3,[r3,#420]
 1675 0022 5B69     	 ldr r3,[r3,#20]
 1676 0024 7B61     	 str r3,[r7,#20]
 672:../Libraries/XMCLib/src/xmc_usbd.c ****   
 673:../Libraries/XMCLib/src/xmc_usbd.c ****   mask = daint.ep.out & daintmsk.ep.out;
 1677              	 .loc 1 673 0
 1678 0026 FA8B     	 ldrh r2,[r7,#30]
 1679 0028 7B8B     	 ldrh r3,[r7,#26]
 1680 002a 1340     	 ands r3,r3,r2
 1681 002c BB85     	 strh r3,[r7,#44]
 674:../Libraries/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 1682              	 .loc 1 674 0
 1683 002e 0023     	 movs r3,#0
 1684 0030 87F82F30 	 strb r3,[r7,#47]
 675:../Libraries/XMCLib/src/xmc_usbd.c ****   doeptsiz.d32 = 0U;
 1685              	 .loc 1 675 0
 1686 0034 0023     	 movs r3,#0
 1687 0036 FB60     	 str r3,[r7,#12]
 676:../Libraries/XMCLib/src/xmc_usbd.c ****  
 677:../Libraries/XMCLib/src/xmc_usbd.c ****   while ((uint16_t)mask >> ep_num)
 1688              	 .loc 1 677 0
 1689 0038 AEE0     	 b .L87
 1690              	.L96:
 678:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 679:../Libraries/XMCLib/src/xmc_usbd.c ****     temp1 = (mask >> (uint16_t)ep_num);
 1691              	 .loc 1 679 0
 1692 003a BA8D     	 ldrh r2,[r7,#44]
 1693 003c 97F82F30 	 ldrb r3,[r7,#47]
 1694 0040 42FA03F3 	 asr r3,r2,r3
 1695 0044 7B85     	 strh r3,[r7,#42]
 680:../Libraries/XMCLib/src/xmc_usbd.c ****     temp = temp1 & 0x1U;
 1696              	 .loc 1 680 0
 1697 0046 7B8D     	 ldrh r3,[r7,#42]
 1698 0048 03F00103 	 and r3,r3,#1
 1699 004c 3B85     	 strh r3,[r7,#40]
 681:../Libraries/XMCLib/src/xmc_usbd.c ****     if (temp)
 1700              	 .loc 1 681 0
 1701 004e 3B8D     	 ldrh r3,[r7,#40]
 1702 0050 002B     	 cmp r3,#0
 1703 0052 00F09C80 	 beq .L88
 682:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 683:../Libraries/XMCLib/src/xmc_usbd.c ****       /* load register data for endpoint */
 684:../Libraries/XMCLib/src/xmc_usbd.c ****       ep = &xmc_device.ep[ep_num];
 1704              	 .loc 1 684 0
 1705 0056 97F82F30 	 ldrb r3,[r7,#47]
 1706 005a 3422     	 movs r2,#52
 1707 005c 02FB03F3 	 mul r3,r2,r3
 1708 0060 544A     	 ldr r2,.L97
 1709 0062 1344     	 add r3,r3,r2
 1710 0064 7B62     	 str r3,[r7,#36]
 685:../Libraries/XMCLib/src/xmc_usbd.c ****       doepint.d32 = xmc_device.endpoint_out_register[ep_num]->doepint & doepmsk.d32;
 1711              	 .loc 1 685 0
 1712 0066 97F82F30 	 ldrb r3,[r7,#47]
 1713 006a 524A     	 ldr r2,.L97
 1714 006c 7033     	 adds r3,r3,#112
 1715 006e 9B00     	 lsls r3,r3,#2
 1716 0070 1344     	 add r3,r3,r2
 1717 0072 5B68     	 ldr r3,[r3,#4]
 1718 0074 9A68     	 ldr r2,[r3,#8]
 1719 0076 7B69     	 ldr r3,[r7,#20]
 1720 0078 1340     	 ands r3,r3,r2
 1721 007a 3B61     	 str r3,[r7,#16]
 686:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1722              	 .loc 1 686 0
 1723 007c 7B68     	 ldr r3,[r7,#4]
 1724 007e 5B7B     	 ldrb r3,[r3,#13]
 1725 0080 002B     	 cmp r3,#0
 1726 0082 08D1     	 bne .L89
 687:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 688:../Libraries/XMCLib/src/xmc_usbd.c ****         doeptsiz.d32 = xmc_device.endpoint_out_register[ep_num]->doeptsiz;
 1727              	 .loc 1 688 0
 1728 0084 97F82F30 	 ldrb r3,[r7,#47]
 1729 0088 4A4A     	 ldr r2,.L97
 1730 008a 7033     	 adds r3,r3,#112
 1731 008c 9B00     	 lsls r3,r3,#2
 1732 008e 1344     	 add r3,r3,r2
 1733 0090 5B68     	 ldr r3,[r3,#4]
 1734 0092 1B69     	 ldr r3,[r3,#16]
 1735 0094 FB60     	 str r3,[r7,#12]
 1736              	.L89:
 689:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 690:../Libraries/XMCLib/src/xmc_usbd.c **** 	  /* Setup Phase Complete */
 691:../Libraries/XMCLib/src/xmc_usbd.c ****       if (doepint.b.setup)
 1737              	 .loc 1 691 0
 1738 0096 3B7C     	 ldrb r3,[r7,#16]
 1739 0098 03F00803 	 and r3,r3,#8
 1740 009c DBB2     	 uxtb r3,r3
 1741 009e 002B     	 cmp r3,#0
 1742 00a0 33D0     	 beq .L90
 692:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 693:../Libraries/XMCLib/src/xmc_usbd.c ****         /* ep0 not stalled any more */
 694:../Libraries/XMCLib/src/xmc_usbd.c ****         ep->isStalled = 0U;
 1743              	 .loc 1 694 0
 1744 00a2 7A6A     	 ldr r2,[r7,#36]
 1745 00a4 1379     	 ldrb r3,[r2,#4]
 1746 00a6 6FF34513 	 bfc r3,#5,#1
 1747 00aa 1371     	 strb r3,[r2,#4]
 695:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1748              	 .loc 1 695 0
 1749 00ac 7B68     	 ldr r3,[r7,#4]
 1750 00ae 5B7B     	 ldrb r3,[r3,#13]
 1751 00b0 002B     	 cmp r3,#0
 1752 00b2 0ED1     	 bne .L91
 696:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 697:../Libraries/XMCLib/src/xmc_usbd.c ****           /* calculate size for setup packet */
 698:../Libraries/XMCLib/src/xmc_usbd.c **** 		  ep->outBytesAvailable = (uint32_t)(((uint32_t)XMC_USBD_SETUP_COUNT -
 699:../Libraries/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)((deptsiz0_data_t*)&doeptsiz)->b.supcnt)*(uint32_t)XMC_USBD_SETUP_SIZE);
 1753              	 .loc 1 699 0
 1754 00b4 07F10C03 	 add r3,r7,#12
 1755 00b8 DB78     	 ldrb r3,[r3,#3]
 1756 00ba C3F34113 	 ubfx r3,r3,#5,#2
 1757 00be DBB2     	 uxtb r3,r3
 1758 00c0 1A46     	 mov r2,r3
 698:../Libraries/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)((deptsiz0_data_t*)&doeptsiz)->b.supcnt)*(uint32_t)XMC_USBD_SETUP_SIZE);
 1759              	 .loc 1 698 0
 1760 00c2 1346     	 mov r3,r2
 1761 00c4 5B07     	 lsls r3,r3,#29
 1762 00c6 9B1A     	 subs r3,r3,r2
 1763 00c8 DB00     	 lsls r3,r3,#3
 1764 00ca 03F11802 	 add r2,r3,#24
 1765 00ce 7B6A     	 ldr r3,[r7,#36]
 1766 00d0 1A61     	 str r2,[r3,#16]
 1767              	.L91:
 700:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 701:../Libraries/XMCLib/src/xmc_usbd.c **** 		if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1768              	 .loc 1 701 0
 1769 00d2 7B68     	 ldr r3,[r7,#4]
 1770 00d4 5B7B     	 ldrb r3,[r3,#13]
 1771 00d6 012B     	 cmp r3,#1
 1772 00d8 06D1     	 bne .L92
 702:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
 703:../Libraries/XMCLib/src/xmc_usbd.c **** 			ep->outBytesAvailable += ep->xferCount;
 1773              	 .loc 1 703 0
 1774 00da 7B6A     	 ldr r3,[r7,#36]
 1775 00dc 1A69     	 ldr r2,[r3,#16]
 1776 00de 7B6A     	 ldr r3,[r7,#36]
 1777 00e0 DB6A     	 ldr r3,[r3,#44]
 1778 00e2 1A44     	 add r2,r2,r3
 1779 00e4 7B6A     	 ldr r3,[r7,#36]
 1780 00e6 1A61     	 str r2,[r3,#16]
 1781              	.L92:
 704:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
 705:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->outInUse = 0U;
 1782              	 .loc 1 705 0
 1783 00e8 7B6A     	 ldr r3,[r7,#36]
 1784 00ea 5A68     	 ldr r2,[r3,#4]
 1785 00ec 22F01002 	 bic r2,r2,#16
 1786 00f0 5A60     	 str r2,[r3,#4]
 706:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.EndpointEvent_cb(0U,XMC_USBD_EP_EVENT_SETUP); /* signal endpoint event */
 1787              	 .loc 1 706 0
 1788 00f2 304B     	 ldr r3,.L97
 1789 00f4 D3F80432 	 ldr r3,[r3,#516]
 1790 00f8 0020     	 movs r0,#0
 1791 00fa 0021     	 movs r1,#0
 1792 00fc 9847     	 blx r3
 707:../Libraries/XMCLib/src/xmc_usbd.c **** 				/* clear the interrupt */
 708:../Libraries/XMCLib/src/xmc_usbd.c **** 		XMC_USBD_ClearEventOUTEP((uint32_t)XMC_USBD_EVENT_OUT_EP_SETUP,ep_num);
 1793              	 .loc 1 708 0
 1794 00fe 97F82F30 	 ldrb r3,[r7,#47]
 1795 0102 0820     	 movs r0,#8
 1796 0104 1946     	 mov r1,r3
 1797 0106 FFF7FEFF 	 bl XMC_USBD_ClearEventOUTEP
 1798              	.L90:
 709:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 710:../Libraries/XMCLib/src/xmc_usbd.c ****       if (doepint.b.xfercompl)
 1799              	 .loc 1 710 0
 1800 010a 3B7C     	 ldrb r3,[r7,#16]
 1801 010c 03F00103 	 and r3,r3,#1
 1802 0110 DBB2     	 uxtb r3,r3
 1803 0112 002B     	 cmp r3,#0
 1804 0114 34D0     	 beq .L93
 711:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 712:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1805              	 .loc 1 712 0
 1806 0116 7B68     	 ldr r3,[r7,#4]
 1807 0118 5B7B     	 ldrb r3,[r3,#13]
 1808 011a 002B     	 cmp r3,#0
 1809 011c 15D1     	 bne .L94
 1810              	.LBB3:
 713:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 714:../Libraries/XMCLib/src/xmc_usbd.c ****           uint32_t bytes = (ep->xferLength - ep->xferCount) - doeptsiz.b.xfersize;
 1811              	 .loc 1 714 0
 1812 011e 7B6A     	 ldr r3,[r7,#36]
 1813 0120 9A6A     	 ldr r2,[r3,#40]
 1814 0122 7B6A     	 ldr r3,[r7,#36]
 1815 0124 DB6A     	 ldr r3,[r3,#44]
 1816 0126 D31A     	 subs r3,r2,r3
 1817 0128 FA68     	 ldr r2,[r7,#12]
 1818 012a C2F31202 	 ubfx r2,r2,#0,#19
 1819 012e 9B1A     	 subs r3,r3,r2
 1820 0130 3B62     	 str r3,[r7,#32]
 715:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferCount += bytes;
 1821              	 .loc 1 715 0
 1822 0132 7B6A     	 ldr r3,[r7,#36]
 1823 0134 DA6A     	 ldr r2,[r3,#44]
 1824 0136 3B6A     	 ldr r3,[r7,#32]
 1825 0138 1A44     	 add r2,r2,r3
 1826 013a 7B6A     	 ldr r3,[r7,#36]
 1827 013c DA62     	 str r2,[r3,#44]
 716:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 1828              	 .loc 1 716 0
 1829 013e 7B6A     	 ldr r3,[r7,#36]
 1830 0140 5A6A     	 ldr r2,[r3,#36]
 1831 0142 3B6A     	 ldr r3,[r7,#32]
 1832 0144 1A44     	 add r2,r2,r3
 1833 0146 7B6A     	 ldr r3,[r7,#36]
 1834 0148 5A62     	 str r2,[r3,#36]
 1835              	.L94:
 1836              	.LBE3:
 717:../Libraries/XMCLib/src/xmc_usbd.c **** 				}
 718:../Libraries/XMCLib/src/xmc_usbd.c ****         if (ep->xferTotal == ep->xferLength)
 1837              	 .loc 1 718 0
 1838 014a 7B6A     	 ldr r3,[r7,#36]
 1839 014c 1A6B     	 ldr r2,[r3,#48]
 1840 014e 7B6A     	 ldr r3,[r7,#36]
 1841 0150 9B6A     	 ldr r3,[r3,#40]
 1842 0152 9A42     	 cmp r2,r3
 1843 0154 11D1     	 bne .L95
 719:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 720:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outBytesAvailable = ep->xferCount;
 1844              	 .loc 1 720 0
 1845 0156 7B6A     	 ldr r3,[r7,#36]
 1846 0158 DA6A     	 ldr r2,[r3,#44]
 1847 015a 7B6A     	 ldr r3,[r7,#36]
 1848 015c 1A61     	 str r2,[r3,#16]
 721:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outInUse = 0U;
 1849              	 .loc 1 721 0
 1850 015e 7B6A     	 ldr r3,[r7,#36]
 1851 0160 5A68     	 ldr r2,[r3,#4]
 1852 0162 22F01002 	 bic r2,r2,#16
 1853 0166 5A60     	 str r2,[r3,#4]
 722:../Libraries/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(ep_num,XMC_USBD_EP_EVENT_OUT);
 1854              	 .loc 1 722 0
 1855 0168 124B     	 ldr r3,.L97
 1856 016a D3F80432 	 ldr r3,[r3,#516]
 1857 016e 97F82F20 	 ldrb r2,[r7,#47]
 1858 0172 1046     	 mov r0,r2
 1859 0174 0121     	 movs r1,#1
 1860 0176 9847     	 blx r3
 1861 0178 02E0     	 b .L93
 1862              	.L95:
 723:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 724:../Libraries/XMCLib/src/xmc_usbd.c ****         else
 725:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 726:../Libraries/XMCLib/src/xmc_usbd.c ****           XMC_USBD_lStartReadXfer(ep);
 1863              	 .loc 1 726 0
 1864 017a 786A     	 ldr r0,[r7,#36]
 1865 017c FFF7FEFF 	 bl XMC_USBD_lStartReadXfer
 1866              	.L93:
 727:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 728:../Libraries/XMCLib/src/xmc_usbd.c **** 
 729:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 730:../Libraries/XMCLib/src/xmc_usbd.c **** 
 731:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_ClearEventOUTEP(doepint.d32,ep_num);
 1867              	 .loc 1 731 0
 1868 0180 3A69     	 ldr r2,[r7,#16]
 1869 0182 97F82F30 	 ldrb r3,[r7,#47]
 1870 0186 1046     	 mov r0,r2
 1871 0188 1946     	 mov r1,r3
 1872 018a FFF7FEFF 	 bl XMC_USBD_ClearEventOUTEP
 1873              	.L88:
 732:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 733:../Libraries/XMCLib/src/xmc_usbd.c ****     ep_num++;
 1874              	 .loc 1 733 0
 1875 018e 97F82F30 	 ldrb r3,[r7,#47]
 1876 0192 0133     	 adds r3,r3,#1
 1877 0194 87F82F30 	 strb r3,[r7,#47]
 1878              	.L87:
 677:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1879              	 .loc 1 677 0
 1880 0198 BA8D     	 ldrh r2,[r7,#44]
 1881 019a 97F82F30 	 ldrb r3,[r7,#47]
 1882 019e 42FA03F3 	 asr r3,r2,r3
 1883 01a2 002B     	 cmp r3,#0
 1884 01a4 7FF449AF 	 bne .L96
 734:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 735:../Libraries/XMCLib/src/xmc_usbd.c **** 
 736:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt */
 737:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_OUTEP);
 1885              	 .loc 1 737 0
 1886 01a8 0D20     	 movs r0,#13
 1887 01aa FFF7FEFF 	 bl XMC_USBD_ClearEvent
 738:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1888              	 .loc 1 738 0
 1889 01ae 3037     	 adds r7,r7,#48
 1890              	.LCFI72:
 1891              	 .cfi_def_cfa_offset 8
 1892 01b0 BD46     	 mov sp,r7
 1893              	.LCFI73:
 1894              	 .cfi_def_cfa_register 13
 1895              	 
 1896 01b2 80BD     	 pop {r7,pc}
 1897              	.L98:
 1898              	 .align 2
 1899              	.L97:
 1900 01b4 00000000 	 .word xmc_device
 1901              	 .cfi_endproc
 1902              	.LFE189:
 1904              	 .section .text.XMC_USBD_lHandleIEPInt,"ax",%progbits
 1905              	 .align 2
 1906              	 .thumb
 1907              	 .thumb_func
 1909              	XMC_USBD_lHandleIEPInt:
 1910              	.LFB190:
 739:../Libraries/XMCLib/src/xmc_usbd.c **** 
 740:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 741:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles all interrupts for all in endpoints
 742:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 743:../Libraries/XMCLib/src/xmc_usbd.c ****  * The interrupt handler first checks, which endpoint has caused the interrupt and then
 744:../Libraries/XMCLib/src/xmc_usbd.c ****  * determines, which interrupt should be handled.
 745:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 746:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleIEPInt(const XMC_USBD_t *const obj) 
 747:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1911              	 .loc 1 747 0
 1912              	 .cfi_startproc
 1913              	 
 1914              	 
 1915 0000 80B5     	 push {r7,lr}
 1916              	.LCFI74:
 1917              	 .cfi_def_cfa_offset 8
 1918              	 .cfi_offset 7,-8
 1919              	 .cfi_offset 14,-4
 1920 0002 8CB0     	 sub sp,sp,#48
 1921              	.LCFI75:
 1922              	 .cfi_def_cfa_offset 56
 1923 0004 00AF     	 add r7,sp,#0
 1924              	.LCFI76:
 1925              	 .cfi_def_cfa_register 7
 1926 0006 7860     	 str r0,[r7,#4]
 748:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
 749:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 750:../Libraries/XMCLib/src/xmc_usbd.c ****   diepmsk_data_t diepmsk;
 751:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t diepint;
 752:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t dieptsiz;
 753:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp;
 754:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp1;
 755:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask;
 756:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t ep_num;
 757:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t inepint;
 758:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 759:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = xmc_device.device_register->daint;
 1927              	 .loc 1 759 0
 1928 0008 6A4B     	 ldr r3,.L109
 1929 000a D3F8A431 	 ldr r3,[r3,#420]
 1930 000e 9B69     	 ldr r3,[r3,#24]
 1931 0010 7B61     	 str r3,[r7,#20]
 760:../Libraries/XMCLib/src/xmc_usbd.c ****   
 761:../Libraries/XMCLib/src/xmc_usbd.c ****   diepmsk.d32 = xmc_device.device_register->diepmsk;
 1932              	 .loc 1 761 0
 1933 0012 684B     	 ldr r3,.L109
 1934 0014 D3F8A431 	 ldr r3,[r3,#420]
 1935 0018 1B69     	 ldr r3,[r3,#16]
 1936 001a 3B61     	 str r3,[r7,#16]
 762:../Libraries/XMCLib/src/xmc_usbd.c ****   
 763:../Libraries/XMCLib/src/xmc_usbd.c ****   dieptsiz.d32 = 0U;
 1937              	 .loc 1 763 0
 1938 001c 0023     	 movs r3,#0
 1939 001e BB60     	 str r3,[r7,#8]
 764:../Libraries/XMCLib/src/xmc_usbd.c ****   mask = daint.ep.in;
 1940              	 .loc 1 764 0
 1941 0020 BB8A     	 ldrh r3,[r7,#20]
 1942 0022 BB85     	 strh r3,[r7,#44]
 765:../Libraries/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 1943              	 .loc 1 765 0
 1944 0024 0023     	 movs r3,#0
 1945 0026 87F82F30 	 strb r3,[r7,#47]
 766:../Libraries/XMCLib/src/xmc_usbd.c ****   
 767:../Libraries/XMCLib/src/xmc_usbd.c ****   while ((uint16_t)mask >> ep_num)
 1946              	 .loc 1 767 0
 1947 002a B5E0     	 b .L100
 1948              	.L108:
 768:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 769:../Libraries/XMCLib/src/xmc_usbd.c ****     temp1 = ((uint16_t)mask >> (uint16_t)ep_num);
 1949              	 .loc 1 769 0
 1950 002c BA8D     	 ldrh r2,[r7,#44]
 1951 002e 97F82F30 	 ldrb r3,[r7,#47]
 1952 0032 42FA03F3 	 asr r3,r2,r3
 1953 0036 7B85     	 strh r3,[r7,#42]
 770:../Libraries/XMCLib/src/xmc_usbd.c ****     temp = (uint16_t)temp1 & (uint16_t)0x1U;
 1954              	 .loc 1 770 0
 1955 0038 7B8D     	 ldrh r3,[r7,#42]
 1956 003a 03F00103 	 and r3,r3,#1
 1957 003e 3B85     	 strh r3,[r7,#40]
 771:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((uint16_t)temp)
 1958              	 .loc 1 771 0
 1959 0040 3B8D     	 ldrh r3,[r7,#40]
 1960 0042 002B     	 cmp r3,#0
 1961 0044 00F0A380 	 beq .L101
 772:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 773:../Libraries/XMCLib/src/xmc_usbd.c ****       ep = &xmc_device.ep[ep_num];
 1962              	 .loc 1 773 0
 1963 0048 97F82F30 	 ldrb r3,[r7,#47]
 1964 004c 3422     	 movs r2,#52
 1965 004e 02FB03F3 	 mul r3,r2,r3
 1966 0052 584A     	 ldr r2,.L109
 1967 0054 1344     	 add r3,r3,r2
 1968 0056 7B62     	 str r3,[r7,#36]
 774:../Libraries/XMCLib/src/xmc_usbd.c **** 			inepint = (uint32_t)xmc_device.endpoint_in_register[ep_num]->diepint;
 1969              	 .loc 1 774 0
 1970 0058 97F82F30 	 ldrb r3,[r7,#47]
 1971 005c 554A     	 ldr r2,.L109
 1972 005e 6A33     	 adds r3,r3,#106
 1973 0060 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1974 0064 9B68     	 ldr r3,[r3,#8]
 1975 0066 3B62     	 str r3,[r7,#32]
 775:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 776:../Libraries/XMCLib/src/xmc_usbd.c ****       ((((uint32_t)((uint32_t)xmc_device.device_register->dtknqr4_fifoemptymsk >> ep->address_u.add
 1976              	 .loc 1 776 0
 1977 0068 524B     	 ldr r3,.L109
 1978 006a D3F8A431 	 ldr r3,[r3,#420]
 1979 006e 5B6B     	 ldr r3,[r3,#52]
 1980 0070 7A6A     	 ldr r2,[r7,#36]
 1981 0072 1278     	 ldrb r2,[r2]
 1982 0074 C2F30302 	 ubfx r2,r2,#0,#4
 1983 0078 D2B2     	 uxtb r2,r2
 1984 007a D340     	 lsrs r3,r3,r2
 777:../Libraries/XMCLib/src/xmc_usbd.c ****                      0x1U) << 7U) | (uint32_t)diepmsk.d32);
 1985              	 .loc 1 777 0
 1986 007c DB01     	 lsls r3,r3,#7
 1987 007e DAB2     	 uxtb r2,r3
 1988 0080 3B69     	 ldr r3,[r7,#16]
 1989 0082 1A43     	 orrs r2,r2,r3
 775:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 1990              	 .loc 1 775 0
 1991 0084 3B6A     	 ldr r3,[r7,#32]
 1992 0086 1340     	 ands r3,r3,r2
 1993 0088 FB60     	 str r3,[r7,#12]
 778:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1994              	 .loc 1 778 0
 1995 008a 7B68     	 ldr r3,[r7,#4]
 1996 008c 5B7B     	 ldrb r3,[r3,#13]
 1997 008e 002B     	 cmp r3,#0
 1998 0090 07D1     	 bne .L102
 779:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 780:../Libraries/XMCLib/src/xmc_usbd.c ****         dieptsiz.d32 = xmc_device.endpoint_in_register[ep_num]->dieptsiz;
 1999              	 .loc 1 780 0
 2000 0092 97F82F30 	 ldrb r3,[r7,#47]
 2001 0096 474A     	 ldr r2,.L109
 2002 0098 6A33     	 adds r3,r3,#106
 2003 009a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2004 009e 1B69     	 ldr r3,[r3,#16]
 2005 00a0 BB60     	 str r3,[r7,#8]
 2006              	.L102:
 781:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 782:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2007              	 .loc 1 782 0
 2008 00a2 7B68     	 ldr r3,[r7,#4]
 2009 00a4 5B7B     	 ldrb r3,[r3,#13]
 2010 00a6 012B     	 cmp r3,#1
 2011 00a8 15D1     	 bne .L103
 783:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 784:../Libraries/XMCLib/src/xmc_usbd.c ****         if (diepint.b.emptyintr)
 2012              	 .loc 1 784 0
 2013 00aa 3B7B     	 ldrb r3,[r7,#12]
 2014 00ac 23F07F03 	 bic r3,r3,#127
 2015 00b0 DBB2     	 uxtb r3,r3
 2016 00b2 002B     	 cmp r3,#0
 2017 00b4 0FD0     	 beq .L103
 2018              	.LBB4:
 785:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 786:../Libraries/XMCLib/src/xmc_usbd.c ****           uint32_t bytes;
 787:../Libraries/XMCLib/src/xmc_usbd.c ****           bytes = XMC_USBD_lWriteFifo(ep);
 2019              	 .loc 1 787 0
 2020 00b6 786A     	 ldr r0,[r7,#36]
 2021 00b8 FFF7FEFF 	 bl XMC_USBD_lWriteFifo
 2022 00bc F861     	 str r0,[r7,#28]
 788:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferCount += bytes;
 2023              	 .loc 1 788 0
 2024 00be 7B6A     	 ldr r3,[r7,#36]
 2025 00c0 DA6A     	 ldr r2,[r3,#44]
 2026 00c2 FB69     	 ldr r3,[r7,#28]
 2027 00c4 1A44     	 add r2,r2,r3
 2028 00c6 7B6A     	 ldr r3,[r7,#36]
 2029 00c8 DA62     	 str r2,[r3,#44]
 789:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 2030              	 .loc 1 789 0
 2031 00ca 7B6A     	 ldr r3,[r7,#36]
 2032 00cc 5A6A     	 ldr r2,[r3,#36]
 2033 00ce FB69     	 ldr r3,[r7,#28]
 2034 00d0 1A44     	 add r2,r2,r3
 2035 00d2 7B6A     	 ldr r3,[r7,#36]
 2036 00d4 5A62     	 str r2,[r3,#36]
 2037              	.L103:
 2038              	.LBE4:
 790:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 791:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 792:../Libraries/XMCLib/src/xmc_usbd.c ****       if (diepint.b.xfercompl)
 2039              	 .loc 1 792 0
 2040 00d6 3B7B     	 ldrb r3,[r7,#12]
 2041 00d8 03F00103 	 and r3,r3,#1
 2042 00dc DBB2     	 uxtb r3,r3
 2043 00de 002B     	 cmp r3,#0
 2044 00e0 4ED0     	 beq .L104
 793:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 794:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2045              	 .loc 1 794 0
 2046 00e2 7B68     	 ldr r3,[r7,#4]
 2047 00e4 5B7B     	 ldrb r3,[r3,#13]
 2048 00e6 002B     	 cmp r3,#0
 2049 00e8 1DD1     	 bne .L105
 795:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 796:../Libraries/XMCLib/src/xmc_usbd.c ****           /* update xfer values */
 797:../Libraries/XMCLib/src/xmc_usbd.c ****           if ((dieptsiz.b.pktcnt == 0U) && (dieptsiz.b.xfersize == 0U))
 2050              	 .loc 1 797 0
 2051 00ea 7A89     	 ldrh r2,[r7,#10]
 2052 00ec 41F6F873 	 movw r3,#8184
 2053 00f0 1340     	 ands r3,r3,r2
 2054 00f2 9BB2     	 uxth r3,r3
 2055 00f4 002B     	 cmp r3,#0
 2056 00f6 16D1     	 bne .L105
 2057              	 .loc 1 797 0 is_stmt 0 discriminator 1
 2058 00f8 BB68     	 ldr r3,[r7,#8]
 2059 00fa C3F31203 	 ubfx r3,r3,#0,#19
 2060 00fe 002B     	 cmp r3,#0
 2061 0100 11D1     	 bne .L105
 2062              	.LBB5:
 798:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 799:../Libraries/XMCLib/src/xmc_usbd.c ****             uint32_t Bytes = ep->xferLength - ep->xferCount;
 2063              	 .loc 1 799 0 is_stmt 1
 2064 0102 7B6A     	 ldr r3,[r7,#36]
 2065 0104 9A6A     	 ldr r2,[r3,#40]
 2066 0106 7B6A     	 ldr r3,[r7,#36]
 2067 0108 DB6A     	 ldr r3,[r3,#44]
 2068 010a D31A     	 subs r3,r2,r3
 2069 010c BB61     	 str r3,[r7,#24]
 800:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferCount += Bytes;
 2070              	 .loc 1 800 0
 2071 010e 7B6A     	 ldr r3,[r7,#36]
 2072 0110 DA6A     	 ldr r2,[r3,#44]
 2073 0112 BB69     	 ldr r3,[r7,#24]
 2074 0114 1A44     	 add r2,r2,r3
 2075 0116 7B6A     	 ldr r3,[r7,#36]
 2076 0118 DA62     	 str r2,[r3,#44]
 801:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferBuffer += Bytes;
 2077              	 .loc 1 801 0
 2078 011a 7B6A     	 ldr r3,[r7,#36]
 2079 011c 5A6A     	 ldr r2,[r3,#36]
 2080 011e BB69     	 ldr r3,[r7,#24]
 2081 0120 1A44     	 add r2,r2,r3
 2082 0122 7B6A     	 ldr r3,[r7,#36]
 2083 0124 5A62     	 str r2,[r3,#36]
 2084              	.L105:
 2085              	.LBE5:
 802:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 803:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 804:../Libraries/XMCLib/src/xmc_usbd.c ****         if (ep->xferTotal==ep->xferLength)
 2086              	 .loc 1 804 0
 2087 0126 7B6A     	 ldr r3,[r7,#36]
 2088 0128 1A6B     	 ldr r2,[r3,#48]
 2089 012a 7B6A     	 ldr r3,[r7,#36]
 2090 012c 9B6A     	 ldr r3,[r3,#40]
 2091 012e 9A42     	 cmp r2,r3
 2092 0130 23D1     	 bne .L106
 805:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 806:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->inInUse = 0U;
 2093              	 .loc 1 806 0
 2094 0132 7B6A     	 ldr r3,[r7,#36]
 2095 0134 5A68     	 ldr r2,[r3,#4]
 2096 0136 22F00802 	 bic r2,r2,#8
 2097 013a 5A60     	 str r2,[r3,#4]
 807:../Libraries/XMCLib/src/xmc_usbd.c ****           if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2098              	 .loc 1 807 0
 2099 013c 7B68     	 ldr r3,[r7,#4]
 2100 013e 5B7B     	 ldrb r3,[r3,#13]
 2101 0140 012B     	 cmp r3,#1
 2102 0142 0ED1     	 bne .L107
 808:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 809:../Libraries/XMCLib/src/xmc_usbd.c ****             /* mask fifo empty interrupt */
 810:../Libraries/XMCLib/src/xmc_usbd.c ****             xmc_device.device_register->dtknqr4_fifoemptymsk =
 2103              	 .loc 1 810 0
 2104 0144 1B4B     	 ldr r3,.L109
 2105 0146 D3F8A431 	 ldr r3,[r3,#420]
 811:../Libraries/XMCLib/src/xmc_usbd.c ****             (uint32_t)(xmc_device.device_register->dtknqr4_fifoemptymsk & ~(((uint32_t)1U << ep_num
 2106              	 .loc 1 811 0
 2107 014a 1A4A     	 ldr r2,.L109
 2108 014c D2F8A421 	 ldr r2,[r2,#420]
 2109 0150 516B     	 ldr r1,[r2,#52]
 2110 0152 97F82F20 	 ldrb r2,[r7,#47]
 2111 0156 0120     	 movs r0,#1
 2112 0158 00FA02F2 	 lsl r2,r0,r2
 2113 015c D243     	 mvns r2,r2
 2114 015e 0A40     	 ands r2,r2,r1
 810:../Libraries/XMCLib/src/xmc_usbd.c ****             (uint32_t)(xmc_device.device_register->dtknqr4_fifoemptymsk & ~(((uint32_t)1U << ep_num
 2115              	 .loc 1 810 0
 2116 0160 5A63     	 str r2,[r3,#52]
 2117              	.L107:
 812:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 813:../Libraries/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(0x80U | ep_num,XMC_USBD_EP_EVENT_IN);
 2118              	 .loc 1 813 0
 2119 0162 144B     	 ldr r3,.L109
 2120 0164 D3F80432 	 ldr r3,[r3,#516]
 2121 0168 97F82F20 	 ldrb r2,[r7,#47]
 2122 016c 62F07F02 	 orn r2,r2,#127
 2123 0170 D2B2     	 uxtb r2,r2
 2124 0172 1046     	 mov r0,r2
 2125 0174 0221     	 movs r1,#2
 2126 0176 9847     	 blx r3
 2127 0178 02E0     	 b .L104
 2128              	.L106:
 814:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 815:../Libraries/XMCLib/src/xmc_usbd.c ****         else
 816:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 817:../Libraries/XMCLib/src/xmc_usbd.c ****           /* start next step of transfer */
 818:../Libraries/XMCLib/src/xmc_usbd.c ****           XMC_USBD_lStartWriteXfer(ep);
 2129              	 .loc 1 818 0
 2130 017a 786A     	 ldr r0,[r7,#36]
 2131 017c FFF7FEFF 	 bl XMC_USBD_lStartWriteXfer
 2132              	.L104:
 819:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 820:../Libraries/XMCLib/src/xmc_usbd.c **** 
 821:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 822:../Libraries/XMCLib/src/xmc_usbd.c **** 
 823:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_ClearEventINEP((uint32_t)diepint.d32,ep_num);
 2133              	 .loc 1 823 0
 2134 0180 FA68     	 ldr r2,[r7,#12]
 2135 0182 97F82F30 	 ldrb r3,[r7,#47]
 2136 0186 1046     	 mov r0,r2
 2137 0188 1946     	 mov r1,r3
 2138 018a FFF7FEFF 	 bl XMC_USBD_ClearEventINEP
 2139              	.L101:
 824:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 825:../Libraries/XMCLib/src/xmc_usbd.c ****     ep_num++;
 2140              	 .loc 1 825 0
 2141 018e 97F82F30 	 ldrb r3,[r7,#47]
 2142 0192 0133     	 adds r3,r3,#1
 2143 0194 87F82F30 	 strb r3,[r7,#47]
 2144              	.L100:
 767:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2145              	 .loc 1 767 0
 2146 0198 BA8D     	 ldrh r2,[r7,#44]
 2147 019a 97F82F30 	 ldrb r3,[r7,#47]
 2148 019e 42FA03F3 	 asr r3,r2,r3
 2149 01a2 002B     	 cmp r3,#0
 2150 01a4 7FF442AF 	 bne .L108
 826:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 827:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_INEP);
 2151              	 .loc 1 827 0
 2152 01a8 0E20     	 movs r0,#14
 2153 01aa FFF7FEFF 	 bl XMC_USBD_ClearEvent
 828:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2154              	 .loc 1 828 0
 2155 01ae 3037     	 adds r7,r7,#48
 2156              	.LCFI77:
 2157              	 .cfi_def_cfa_offset 8
 2158 01b0 BD46     	 mov sp,r7
 2159              	.LCFI78:
 2160              	 .cfi_def_cfa_register 13
 2161              	 
 2162 01b2 80BD     	 pop {r7,pc}
 2163              	.L110:
 2164              	 .align 2
 2165              	.L109:
 2166 01b4 00000000 	 .word xmc_device
 2167              	 .cfi_endproc
 2168              	.LFE190:
 2170              	 .section .text.XMC_USBD_lHandleRxFLvl,"ax",%progbits
 2171              	 .align 2
 2172              	 .thumb
 2173              	 .thumb_func
 2175              	XMC_USBD_lHandleRxFLvl:
 2176              	.LFB191:
 829:../Libraries/XMCLib/src/xmc_usbd.c **** 
 830:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 831:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief RX Fifo interrupt handler
 832:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 833:../Libraries/XMCLib/src/xmc_usbd.c ****  * This function handles the interrupt, when the rx fifo is not empty anymore.
 834:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 835:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleRxFLvl(void) 
 836:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2177              	 .loc 1 836 0
 2178              	 .cfi_startproc
 2179              	 
 2180              	 
 2181 0000 80B5     	 push {r7,lr}
 2182              	.LCFI79:
 2183              	 .cfi_def_cfa_offset 8
 2184              	 .cfi_offset 7,-8
 2185              	 .cfi_offset 14,-4
 2186 0002 82B0     	 sub sp,sp,#8
 2187              	.LCFI80:
 2188              	 .cfi_def_cfa_offset 16
 2189 0004 00AF     	 add r7,sp,#0
 2190              	.LCFI81:
 2191              	 .cfi_def_cfa_register 7
 837:../Libraries/XMCLib/src/xmc_usbd.c ****   device_grxsts_data_t data;	
 838:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->grxstsp;
 2192              	 .loc 1 838 0
 2193 0006 1D4B     	 ldr r3,.L121
 2194 0008 D3F8A031 	 ldr r3,[r3,#416]
 2195 000c 1B6A     	 ldr r3,[r3,#32]
 2196 000e 7B60     	 str r3,[r7,#4]
 839:../Libraries/XMCLib/src/xmc_usbd.c **** 
 840:../Libraries/XMCLib/src/xmc_usbd.c ****   switch (data.b.pktsts)
 2197              	 .loc 1 840 0
 2198 0010 BB79     	 ldrb r3,[r7,#6]
 2199 0012 C3F34303 	 ubfx r3,r3,#1,#4
 2200 0016 DBB2     	 uxtb r3,r3
 2201 0018 013B     	 subs r3,r3,#1
 2202 001a 052B     	 cmp r3,#5
 2203 001c 2AD8     	 bhi .L120
 2204 001e 01A2     	 adr r2,.L114
 2205 0020 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2206              	 .p2align 2
 2207              	.L114:
 2208 0024 75000000 	 .word .L120+1
 2209 0028 3D000000 	 .word .L115+1
 2210 002c 75000000 	 .word .L120+1
 2211 0030 75000000 	 .word .L120+1
 2212 0034 75000000 	 .word .L120+1
 2213 0038 59000000 	 .word .L118+1
 2214              	 .p2align 1
 2215              	.L115:
 841:../Libraries/XMCLib/src/xmc_usbd.c **** 	{
 842:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_GOUTNAK:
 843:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 844:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_OUTCMPL:
 845:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 846:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_OUTDATA:
 847:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lReadFifo((uint32_t)data.b.epnum,(uint32_t)data.b.bcnt);
 2216              	 .loc 1 847 0
 2217 003c 3B79     	 ldrb r3,[r7,#4]
 2218 003e C3F30303 	 ubfx r3,r3,#0,#4
 2219 0042 DBB2     	 uxtb r3,r3
 2220 0044 1A46     	 mov r2,r3
 2221 0046 BB88     	 ldrh r3,[r7,#4]
 2222 0048 C3F30A13 	 ubfx r3,r3,#4,#11
 2223 004c 9BB2     	 uxth r3,r3
 2224 004e 1046     	 mov r0,r2
 2225 0050 1946     	 mov r1,r3
 2226 0052 FFF7FEFF 	 bl XMC_USBD_lReadFifo
 848:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2227              	 .loc 1 848 0
 2228 0056 0EE0     	 b .L111
 2229              	.L118:
 849:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_SETUP:
 850:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lReadFifo((uint32_t)data.b.epnum,(uint32_t)data.b.bcnt);
 2230              	 .loc 1 850 0
 2231 0058 3B79     	 ldrb r3,[r7,#4]
 2232 005a C3F30303 	 ubfx r3,r3,#0,#4
 2233 005e DBB2     	 uxtb r3,r3
 2234 0060 1A46     	 mov r2,r3
 2235 0062 BB88     	 ldrh r3,[r7,#4]
 2236 0064 C3F30A13 	 ubfx r3,r3,#4,#11
 2237 0068 9BB2     	 uxth r3,r3
 2238 006a 1046     	 mov r0,r2
 2239 006c 1946     	 mov r1,r3
 2240 006e FFF7FEFF 	 bl XMC_USBD_lReadFifo
 851:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2241              	 .loc 1 851 0
 2242 0072 00E0     	 b .L111
 2243              	.L120:
 852:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_SETUPCMPL:
 853:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 854:../Libraries/XMCLib/src/xmc_usbd.c ****     default:
 855:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2244              	 .loc 1 855 0
 2245 0074 00BF     	 nop
 2246              	.L111:
 856:../Libraries/XMCLib/src/xmc_usbd.c **** 	}
 857:../Libraries/XMCLib/src/xmc_usbd.c ****   /* no need to clear */
 858:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2247              	 .loc 1 858 0
 2248 0076 0837     	 adds r7,r7,#8
 2249              	.LCFI82:
 2250              	 .cfi_def_cfa_offset 8
 2251 0078 BD46     	 mov sp,r7
 2252              	.LCFI83:
 2253              	 .cfi_def_cfa_register 13
 2254              	 
 2255 007a 80BD     	 pop {r7,pc}
 2256              	.L122:
 2257              	 .align 2
 2258              	.L121:
 2259 007c 00000000 	 .word xmc_device
 2260              	 .cfi_endproc
 2261              	.LFE191:
 2263              	 .section .text.XMC_USBD_IRQHandler,"ax",%progbits
 2264              	 .align 2
 2265              	 .global XMC_USBD_IRQHandler
 2266              	 .thumb
 2267              	 .thumb_func
 2269              	XMC_USBD_IRQHandler:
 2270              	.LFB192:
 859:../Libraries/XMCLib/src/xmc_usbd.c **** 
 860:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 861:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Global interrupt handler
 862:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 863:../Libraries/XMCLib/src/xmc_usbd.c ****  * The handler first checks, which global interrupt has caused the interrupt
 864:../Libraries/XMCLib/src/xmc_usbd.c ****  * and then dispatches interrupt to the corresponding sub-handler.
 865:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 866:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_IRQHandler(const XMC_USBD_t *const obj) 
 867:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2271              	 .loc 1 867 0
 2272              	 .cfi_startproc
 2273              	 
 2274              	 
 2275 0000 80B5     	 push {r7,lr}
 2276              	.LCFI84:
 2277              	 .cfi_def_cfa_offset 8
 2278              	 .cfi_offset 7,-8
 2279              	 .cfi_offset 14,-4
 2280 0002 84B0     	 sub sp,sp,#16
 2281              	.LCFI85:
 2282              	 .cfi_def_cfa_offset 24
 2283 0004 00AF     	 add r7,sp,#0
 2284              	.LCFI86:
 2285              	 .cfi_def_cfa_register 7
 2286 0006 7860     	 str r0,[r7,#4]
 868:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
 869:../Libraries/XMCLib/src/xmc_usbd.c ****   gintsts_data_t data;
 870:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 871:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.d32 = xmc_device.global_register->gintmsk;
 2287              	 .loc 1 871 0
 2288 0008 4F4B     	 ldr r3,.L135
 2289 000a D3F8A031 	 ldr r3,[r3,#416]
 2290 000e 9B69     	 ldr r3,[r3,#24]
 2291 0010 FB60     	 str r3,[r7,#12]
 872:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->gintsts & gintmsk.d32;
 2292              	 .loc 1 872 0
 2293 0012 4D4B     	 ldr r3,.L135
 2294 0014 D3F8A031 	 ldr r3,[r3,#416]
 2295 0018 5A69     	 ldr r2,[r3,#20]
 2296 001a FB68     	 ldr r3,[r7,#12]
 2297 001c 1340     	 ands r3,r3,r2
 2298 001e BB60     	 str r3,[r7,#8]
 873:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 874:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sofintr)
 2299              	 .loc 1 874 0
 2300 0020 3B7A     	 ldrb r3,[r7,#8]
 2301 0022 03F00803 	 and r3,r3,#8
 2302 0026 DBB2     	 uxtb r3,r3
 2303 0028 002B     	 cmp r3,#0
 2304 002a 07D0     	 beq .L124
 875:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 876:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_SOF);
 2305              	 .loc 1 876 0
 2306 002c 464B     	 ldr r3,.L135
 2307 002e D3F80032 	 ldr r3,[r3,#512]
 2308 0032 0920     	 movs r0,#9
 2309 0034 9847     	 blx r3
 877:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SOF);
 2310              	 .loc 1 877 0
 2311 0036 0920     	 movs r0,#9
 2312 0038 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2313              	.L124:
 878:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 879:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2314              	 .loc 1 879 0
 2315 003c 7B68     	 ldr r3,[r7,#4]
 2316 003e 5B7B     	 ldrb r3,[r3,#13]
 2317 0040 012B     	 cmp r3,#1
 2318 0042 19D1     	 bne .L125
 880:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 881:../Libraries/XMCLib/src/xmc_usbd.c ****     if (data.b.rxstsqlvl)
 2319              	 .loc 1 881 0
 2320 0044 3B7A     	 ldrb r3,[r7,#8]
 2321 0046 03F01003 	 and r3,r3,#16
 2322 004a DBB2     	 uxtb r3,r3
 2323 004c 002B     	 cmp r3,#0
 2324 004e 13D0     	 beq .L125
 882:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 883:../Libraries/XMCLib/src/xmc_usbd.c ****       /* Masked that interrupt so its only done once */
 884:../Libraries/XMCLib/src/xmc_usbd.c ****       gintmsk.b.rxstsqlvl = 0U;
 2325              	 .loc 1 884 0
 2326 0050 3B7B     	 ldrb r3,[r7,#12]
 2327 0052 6FF30413 	 bfc r3,#4,#1
 2328 0056 3B73     	 strb r3,[r7,#12]
 885:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 2329              	 .loc 1 885 0
 2330 0058 3B4B     	 ldr r3,.L135
 2331 005a D3F8A031 	 ldr r3,[r3,#416]
 2332 005e FA68     	 ldr r2,[r7,#12]
 2333 0060 9A61     	 str r2,[r3,#24]
 886:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lHandleRxFLvl(); /* handle the interrupt */
 2334              	 .loc 1 886 0
 2335 0062 FFF7FEFF 	 bl XMC_USBD_lHandleRxFLvl
 887:../Libraries/XMCLib/src/xmc_usbd.c ****       gintmsk.b.rxstsqlvl = 1U;
 2336              	 .loc 1 887 0
 2337 0066 3B7B     	 ldrb r3,[r7,#12]
 2338 0068 43F01003 	 orr r3,r3,#16
 2339 006c 3B73     	 strb r3,[r7,#12]
 888:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 2340              	 .loc 1 888 0
 2341 006e 364B     	 ldr r3,.L135
 2342 0070 D3F8A031 	 ldr r3,[r3,#416]
 2343 0074 FA68     	 ldr r2,[r7,#12]
 2344 0076 9A61     	 str r2,[r3,#24]
 2345              	.L125:
 889:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 890:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 891:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.erlysuspend)
 2346              	 .loc 1 891 0
 2347 0078 7B7A     	 ldrb r3,[r7,#9]
 2348 007a 03F00403 	 and r3,r3,#4
 2349 007e DBB2     	 uxtb r3,r3
 2350 0080 002B     	 cmp r3,#0
 2351 0082 02D0     	 beq .L126
 892:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 893:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_EARLYSUSPEND);
 2352              	 .loc 1 893 0
 2353 0084 0A20     	 movs r0,#10
 2354 0086 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2355              	.L126:
 894:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 895:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.usbsuspend)
 2356              	 .loc 1 895 0
 2357 008a 7B7A     	 ldrb r3,[r7,#9]
 2358 008c 03F00803 	 and r3,r3,#8
 2359 0090 DBB2     	 uxtb r3,r3
 2360 0092 002B     	 cmp r3,#0
 2361 0094 07D0     	 beq .L127
 896:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 897:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_SUSPEND);
 2362              	 .loc 1 897 0
 2363 0096 2C4B     	 ldr r3,.L135
 2364 0098 D3F80032 	 ldr r3,[r3,#512]
 2365 009c 0620     	 movs r0,#6
 2366 009e 9847     	 blx r3
 898:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SUSPEND);
 2367              	 .loc 1 898 0
 2368 00a0 0620     	 movs r0,#6
 2369 00a2 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2370              	.L127:
 899:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 900:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.wkupintr)
 2371              	 .loc 1 900 0
 2372 00a6 FB7A     	 ldrb r3,[r7,#11]
 2373 00a8 23F07F03 	 bic r3,r3,#127
 2374 00ac DBB2     	 uxtb r3,r3
 2375 00ae 002B     	 cmp r3,#0
 2376 00b0 07D0     	 beq .L128
 901:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 902:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_REMOTE_WAKEUP);
 2377              	 .loc 1 902 0
 2378 00b2 254B     	 ldr r3,.L135
 2379 00b4 D3F80032 	 ldr r3,[r3,#512]
 2380 00b8 0820     	 movs r0,#8
 2381 00ba 9847     	 blx r3
 903:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_REMOTE_WAKEUP);
 2382              	 .loc 1 903 0
 2383 00bc 0820     	 movs r0,#8
 2384 00be FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2385              	.L128:
 904:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 905:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sessreqintr)
 2386              	 .loc 1 905 0
 2387 00c2 FB7A     	 ldrb r3,[r7,#11]
 2388 00c4 03F04003 	 and r3,r3,#64
 2389 00c8 DBB2     	 uxtb r3,r3
 2390 00ca 002B     	 cmp r3,#0
 2391 00cc 0ED0     	 beq .L129
 906:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 907:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.IsPowered = 1U;
 2392              	 .loc 1 907 0
 2393 00ce 1E4A     	 ldr r2,.L135
 2394 00d0 92F8FE31 	 ldrb r3,[r2,#510]
 2395 00d4 43F00403 	 orr r3,r3,#4
 2396 00d8 82F8FE31 	 strb r3,[r2,#510]
 908:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_ON);
 2397              	 .loc 1 908 0
 2398 00dc 1A4B     	 ldr r3,.L135
 2399 00de D3F80032 	 ldr r3,[r3,#512]
 2400 00e2 0020     	 movs r0,#0
 2401 00e4 9847     	 blx r3
 909:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_POWER_ON);
 2402              	 .loc 1 909 0
 2403 00e6 0020     	 movs r0,#0
 2404 00e8 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2405              	.L129:
 910:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 911:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.usbreset)
 2406              	 .loc 1 911 0
 2407 00ec 7B7A     	 ldrb r3,[r7,#9]
 2408 00ee 03F01003 	 and r3,r3,#16
 2409 00f2 DBB2     	 uxtb r3,r3
 2410 00f4 002B     	 cmp r3,#0
 2411 00f6 02D0     	 beq .L130
 912:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 913:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleUSBReset(obj);
 2412              	 .loc 1 913 0
 2413 00f8 7868     	 ldr r0,[r7,#4]
 2414 00fa FFF7FEFF 	 bl XMC_USBD_lHandleUSBReset
 2415              	.L130:
 914:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 915:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.enumdone)
 2416              	 .loc 1 915 0
 2417 00fe 7B7A     	 ldrb r3,[r7,#9]
 2418 0100 03F02003 	 and r3,r3,#32
 2419 0104 DBB2     	 uxtb r3,r3
 2420 0106 002B     	 cmp r3,#0
 2421 0108 01D0     	 beq .L131
 916:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 917:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleEnumDone();
 2422              	 .loc 1 917 0
 2423 010a FFF7FEFF 	 bl XMC_USBD_lHandleEnumDone
 2424              	.L131:
 918:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 919:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.inepint)
 2425              	 .loc 1 919 0
 2426 010e BB7A     	 ldrb r3,[r7,#10]
 2427 0110 03F00403 	 and r3,r3,#4
 2428 0114 DBB2     	 uxtb r3,r3
 2429 0116 002B     	 cmp r3,#0
 2430 0118 02D0     	 beq .L132
 920:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 921:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleIEPInt(obj);
 2431              	 .loc 1 921 0
 2432 011a 7868     	 ldr r0,[r7,#4]
 2433 011c FFF7FEFF 	 bl XMC_USBD_lHandleIEPInt
 2434              	.L132:
 922:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 923:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.outepintr)
 2435              	 .loc 1 923 0
 2436 0120 BB7A     	 ldrb r3,[r7,#10]
 2437 0122 03F00803 	 and r3,r3,#8
 2438 0126 DBB2     	 uxtb r3,r3
 2439 0128 002B     	 cmp r3,#0
 2440 012a 02D0     	 beq .L133
 924:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 925:../Libraries/XMCLib/src/xmc_usbd.c **** 		XMC_USBD_lHandleOEPInt(obj);
 2441              	 .loc 1 925 0
 2442 012c 7868     	 ldr r0,[r7,#4]
 2443 012e FFF7FEFF 	 bl XMC_USBD_lHandleOEPInt
 2444              	.L133:
 926:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 927:../Libraries/XMCLib/src/xmc_usbd.c **** 	if (data.b.otgintr)
 2445              	 .loc 1 927 0
 2446 0132 3B7A     	 ldrb r3,[r7,#8]
 2447 0134 03F00403 	 and r3,r3,#4
 2448 0138 DBB2     	 uxtb r3,r3
 2449 013a 002B     	 cmp r3,#0
 2450 013c 01D0     	 beq .L123
 928:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 929:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_lHandleOTGInt();
 2451              	 .loc 1 929 0
 2452 013e FFF7FEFF 	 bl XMC_USBD_lHandleOTGInt
 2453              	.L123:
 930:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 931:../Libraries/XMCLib/src/xmc_usbd.c **** 
 932:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2454              	 .loc 1 932 0
 2455 0142 1037     	 adds r7,r7,#16
 2456              	.LCFI87:
 2457              	 .cfi_def_cfa_offset 8
 2458 0144 BD46     	 mov sp,r7
 2459              	.LCFI88:
 2460              	 .cfi_def_cfa_register 13
 2461              	 
 2462 0146 80BD     	 pop {r7,pc}
 2463              	.L136:
 2464              	 .align 2
 2465              	.L135:
 2466 0148 00000000 	 .word xmc_device
 2467              	 .cfi_endproc
 2468              	.LFE192:
 2470              	 .section .text.XMC_USBD_Enable,"ax",%progbits
 2471              	 .align 2
 2472              	 .global XMC_USBD_Enable
 2473              	 .thumb
 2474              	 .thumb_func
 2476              	XMC_USBD_Enable:
 2477              	.LFB193:
 933:../Libraries/XMCLib/src/xmc_usbd.c **** 
 934:../Libraries/XMCLib/src/xmc_usbd.c **** 
 935:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
 936:../Libraries/XMCLib/src/xmc_usbd.c ****  * API IMPLEMENTATION
 937:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
 938:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 939:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enables the USB0 module
 940:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 941:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_Enable(void) 
 942:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2478              	 .loc 1 942 0
 2479              	 .cfi_startproc
 2480              	 
 2481              	 
 2482 0000 80B5     	 push {r7,lr}
 2483              	.LCFI89:
 2484              	 .cfi_def_cfa_offset 8
 2485              	 .cfi_offset 7,-8
 2486              	 .cfi_offset 14,-4
 2487 0002 00AF     	 add r7,sp,#0
 2488              	.LCFI90:
 2489              	 .cfi_def_cfa_register 7
 943:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 944:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 2490              	 .loc 1 944 0
 2491 0004 0448     	 ldr r0,.L138
 2492 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 945:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 946:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Reset and power up */
 947:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0);
 2493              	 .loc 1 947 0
 2494 000a 0348     	 ldr r0,.L138
 2495 000c FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 948:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_EnableUsb();
 2496              	 .loc 1 948 0
 2497 0010 FFF7FEFF 	 bl XMC_SCU_POWER_EnableUsb
 949:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2498              	 .loc 1 949 0
 2499 0014 80BD     	 pop {r7,pc}
 2500              	.L139:
 2501 0016 00BF     	 .align 2
 2502              	.L138:
 2503 0018 80000020 	 .word 536871040
 2504              	 .cfi_endproc
 2505              	.LFE193:
 2507              	 .section .text.XMC_USBD_Disable,"ax",%progbits
 2508              	 .align 2
 2509              	 .global XMC_USBD_Disable
 2510              	 .thumb
 2511              	 .thumb_func
 2513              	XMC_USBD_Disable:
 2514              	.LFB194:
 950:../Libraries/XMCLib/src/xmc_usbd.c **** 
 951:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 952:../Libraries/XMCLib/src/xmc_usbd.c ****  * Disables the USB0 module
 953:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 954:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_Disable(void) 
 955:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2515              	 .loc 1 955 0
 2516              	 .cfi_startproc
 2517              	 
 2518              	 
 2519 0000 80B5     	 push {r7,lr}
 2520              	.LCFI91:
 2521              	 .cfi_def_cfa_offset 8
 2522              	 .cfi_offset 7,-8
 2523              	 .cfi_offset 14,-4
 2524 0002 00AF     	 add r7,sp,#0
 2525              	.LCFI92:
 2526              	 .cfi_def_cfa_register 7
 956:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear Reset and power up */
 957:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0);
 2527              	 .loc 1 957 0
 2528 0004 0448     	 ldr r0,.L141
 2529 0006 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 958:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 959:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 2530              	 .loc 1 959 0
 2531 000a 0348     	 ldr r0,.L141
 2532 000c FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 960:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 961:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_DisableUsb();
 2533              	 .loc 1 961 0
 2534 0010 FFF7FEFF 	 bl XMC_SCU_POWER_DisableUsb
 962:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2535              	 .loc 1 962 0
 2536 0014 80BD     	 pop {r7,pc}
 2537              	.L142:
 2538 0016 00BF     	 .align 2
 2539              	.L141:
 2540 0018 80000020 	 .word 536871040
 2541              	 .cfi_endproc
 2542              	.LFE194:
 2544              	 .section .text.XMC_USBD_ClearEvent,"ax",%progbits
 2545              	 .align 2
 2546              	 .global XMC_USBD_ClearEvent
 2547              	 .thumb
 2548              	 .thumb_func
 2550              	XMC_USBD_ClearEvent:
 2551              	.LFB195:
 963:../Libraries/XMCLib/src/xmc_usbd.c **** 
 964:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 965:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB device event
 966:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 967:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEvent(const XMC_USBD_EVENT_t event) 
 968:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2552              	 .loc 1 968 0
 2553              	 .cfi_startproc
 2554              	 
 2555              	 
 2556              	 
 2557 0000 80B4     	 push {r7}
 2558              	.LCFI93:
 2559              	 .cfi_def_cfa_offset 4
 2560              	 .cfi_offset 7,-4
 2561 0002 85B0     	 sub sp,sp,#20
 2562              	.LCFI94:
 2563              	 .cfi_def_cfa_offset 24
 2564 0004 00AF     	 add r7,sp,#0
 2565              	.LCFI95:
 2566              	 .cfi_def_cfa_register 7
 2567 0006 0346     	 mov r3,r0
 2568 0008 FB71     	 strb r3,[r7,#7]
 969:../Libraries/XMCLib/src/xmc_usbd.c ****   gintsts_data_t clear;
 970:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = 0U;
 2569              	 .loc 1 970 0
 2570 000a 0023     	 movs r3,#0
 2571 000c FB60     	 str r3,[r7,#12]
 971:../Libraries/XMCLib/src/xmc_usbd.c ****   switch(event)
 2572              	 .loc 1 971 0
 2573 000e FB79     	 ldrb r3,[r7,#7]
 2574 0010 0D2B     	 cmp r3,#13
 2575 0012 4CD8     	 bhi .L156
 2576 0014 01A2     	 adr r2,.L146
 2577 0016 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2578 001a 00BF     	 .p2align 2
 2579              	.L146:
 2580 001c 55000000 	 .word .L145+1
 2581 0020 AF000000 	 .word .L156+1
 2582 0024 AF000000 	 .word .L156+1
 2583 0028 AF000000 	 .word .L156+1
 2584 002c 5F000000 	 .word .L147+1
 2585 0030 AF000000 	 .word .L156+1
 2586 0034 69000000 	 .word .L148+1
 2587 0038 73000000 	 .word .L149+1
 2588 003c 7D000000 	 .word .L150+1
 2589 0040 87000000 	 .word .L151+1
 2590 0044 91000000 	 .word .L152+1
 2591 0048 9B000000 	 .word .L153+1
 2592 004c AF000000 	 .word .L156+1
 2593 0050 A5000000 	 .word .L154+1
 2594              	 .p2align 1
 2595              	.L145:
 972:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 973:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_POWER_ON):
 974:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.sessreqintr = 1U;
 2596              	 .loc 1 974 0
 2597 0054 FB7B     	 ldrb r3,[r7,#15]
 2598 0056 43F04003 	 orr r3,r3,#64
 2599 005a FB73     	 strb r3,[r7,#15]
 975:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2600              	 .loc 1 975 0
 2601 005c 28E0     	 b .L155
 2602              	.L147:
 976:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESET):
 977:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.usbreset = 1U;
 2603              	 .loc 1 977 0
 2604 005e 7B7B     	 ldrb r3,[r7,#13]
 2605 0060 43F01003 	 orr r3,r3,#16
 2606 0064 7B73     	 strb r3,[r7,#13]
 978:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2607              	 .loc 1 978 0
 2608 0066 23E0     	 b .L155
 2609              	.L148:
 979:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SUSPEND):
 980:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.usbsuspend = 1U;
 2610              	 .loc 1 980 0
 2611 0068 7B7B     	 ldrb r3,[r7,#13]
 2612 006a 43F00803 	 orr r3,r3,#8
 2613 006e 7B73     	 strb r3,[r7,#13]
 981:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2614              	 .loc 1 981 0
 2615 0070 1EE0     	 b .L155
 2616              	.L149:
 982:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESUME):
 983:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.wkupintr = 1U;
 2617              	 .loc 1 983 0
 2618 0072 FB7B     	 ldrb r3,[r7,#15]
 2619 0074 43F08003 	 orr r3,r3,#128
 2620 0078 FB73     	 strb r3,[r7,#15]
 984:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2621              	 .loc 1 984 0
 2622 007a 19E0     	 b .L155
 2623              	.L150:
 985:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_REMOTE_WAKEUP):
 986:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.wkupintr = 1U;
 2624              	 .loc 1 986 0
 2625 007c FB7B     	 ldrb r3,[r7,#15]
 2626 007e 43F08003 	 orr r3,r3,#128
 2627 0082 FB73     	 strb r3,[r7,#15]
 987:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2628              	 .loc 1 987 0
 2629 0084 14E0     	 b .L155
 2630              	.L151:
 988:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SOF):
 989:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.sofintr = 1U;
 2631              	 .loc 1 989 0
 2632 0086 3B7B     	 ldrb r3,[r7,#12]
 2633 0088 43F00803 	 orr r3,r3,#8
 2634 008c 3B73     	 strb r3,[r7,#12]
 990:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2635              	 .loc 1 990 0
 2636 008e 0FE0     	 b .L155
 2637              	.L152:
 991:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_EARLYSUSPEND):
 992:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.erlysuspend = 1U;
 2638              	 .loc 1 992 0
 2639 0090 7B7B     	 ldrb r3,[r7,#13]
 2640 0092 43F00403 	 orr r3,r3,#4
 2641 0096 7B73     	 strb r3,[r7,#13]
 993:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2642              	 .loc 1 993 0
 2643 0098 0AE0     	 b .L155
 2644              	.L153:
 994:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_ENUMDONE):
 995:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.enumdone = 1U;
 2645              	 .loc 1 995 0
 2646 009a 7B7B     	 ldrb r3,[r7,#13]
 2647 009c 43F02003 	 orr r3,r3,#32
 2648 00a0 7B73     	 strb r3,[r7,#13]
 996:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2649              	 .loc 1 996 0
 2650 00a2 05E0     	 b .L155
 2651              	.L154:
 997:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_OUTEP):
 998:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.outepintr = 1U;
 2652              	 .loc 1 998 0
 2653 00a4 BB7B     	 ldrb r3,[r7,#14]
 2654 00a6 43F00803 	 orr r3,r3,#8
 2655 00aa BB73     	 strb r3,[r7,#14]
 999:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2656              	 .loc 1 999 0
 2657 00ac 00E0     	 b .L155
 2658              	.L156:
1000:../Libraries/XMCLib/src/xmc_usbd.c **** 		default:
1001:../Libraries/XMCLib/src/xmc_usbd.c **** 		break;
 2659              	 .loc 1 1001 0
 2660 00ae 00BF     	 nop
 2661              	.L155:
1002:../Libraries/XMCLib/src/xmc_usbd.c **** 	}
1003:../Libraries/XMCLib/src/xmc_usbd.c **** 	xmc_device.global_register->gintsts = clear.d32;
 2662              	 .loc 1 1003 0
 2663 00b0 044B     	 ldr r3,.L157
 2664 00b2 D3F8A031 	 ldr r3,[r3,#416]
 2665 00b6 FA68     	 ldr r2,[r7,#12]
 2666 00b8 5A61     	 str r2,[r3,#20]
1004:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2667              	 .loc 1 1004 0
 2668 00ba 1437     	 adds r7,r7,#20
 2669              	.LCFI96:
 2670              	 .cfi_def_cfa_offset 4
 2671 00bc BD46     	 mov sp,r7
 2672              	.LCFI97:
 2673              	 .cfi_def_cfa_register 13
 2674              	 
 2675 00be 5DF8047B 	 ldr r7,[sp],#4
 2676              	.LCFI98:
 2677              	 .cfi_restore 7
 2678              	 .cfi_def_cfa_offset 0
 2679 00c2 7047     	 bx lr
 2680              	.L158:
 2681              	 .align 2
 2682              	.L157:
 2683 00c4 00000000 	 .word xmc_device
 2684              	 .cfi_endproc
 2685              	.LFE195:
 2687              	 .section .text.XMC_USBD_lClearEventOTG,"ax",%progbits
 2688              	 .align 2
 2689              	 .thumb
 2690              	 .thumb_func
 2692              	XMC_USBD_lClearEventOTG:
 2693              	.LFB196:
1005:../Libraries/XMCLib/src/xmc_usbd.c **** 
1006:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1007:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB OTG events
1008:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1009:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lClearEventOTG(uint32_t event)
1010:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2694              	 .loc 1 1010 0
 2695              	 .cfi_startproc
 2696              	 
 2697              	 
 2698              	 
 2699 0000 80B4     	 push {r7}
 2700              	.LCFI99:
 2701              	 .cfi_def_cfa_offset 4
 2702              	 .cfi_offset 7,-4
 2703 0002 85B0     	 sub sp,sp,#20
 2704              	.LCFI100:
 2705              	 .cfi_def_cfa_offset 24
 2706 0004 00AF     	 add r7,sp,#0
 2707              	.LCFI101:
 2708              	 .cfi_def_cfa_register 7
 2709 0006 7860     	 str r0,[r7,#4]
1011:../Libraries/XMCLib/src/xmc_usbd.c ****   gotgint_data_t clear = { .d32 = 0U};
 2710              	 .loc 1 1011 0
 2711 0008 0023     	 movs r3,#0
 2712 000a FB60     	 str r3,[r7,#12]
1012:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
 2713              	 .loc 1 1012 0
 2714 000c 7B68     	 ldr r3,[r7,#4]
 2715 000e FB60     	 str r3,[r7,#12]
1013:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gotgint = clear.d32;
 2716              	 .loc 1 1013 0
 2717 0010 044B     	 ldr r3,.L160
 2718 0012 D3F8A031 	 ldr r3,[r3,#416]
 2719 0016 FA68     	 ldr r2,[r7,#12]
 2720 0018 5A60     	 str r2,[r3,#4]
1014:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2721              	 .loc 1 1014 0
 2722 001a 1437     	 adds r7,r7,#20
 2723              	.LCFI102:
 2724              	 .cfi_def_cfa_offset 4
 2725 001c BD46     	 mov sp,r7
 2726              	.LCFI103:
 2727              	 .cfi_def_cfa_register 13
 2728              	 
 2729 001e 5DF8047B 	 ldr r7,[sp],#4
 2730              	.LCFI104:
 2731              	 .cfi_restore 7
 2732              	 .cfi_def_cfa_offset 0
 2733 0022 7047     	 bx lr
 2734              	.L161:
 2735              	 .align 2
 2736              	.L160:
 2737 0024 00000000 	 .word xmc_device
 2738              	 .cfi_endproc
 2739              	.LFE196:
 2741              	 .section .text.XMC_USBD_ClearEventINEP,"ax",%progbits
 2742              	 .align 2
 2743              	 .global XMC_USBD_ClearEventINEP
 2744              	 .thumb
 2745              	 .thumb_func
 2747              	XMC_USBD_ClearEventINEP:
 2748              	.LFB197:
1015:../Libraries/XMCLib/src/xmc_usbd.c **** 
1016:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1017:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB IN EP events
1018:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1019:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEventINEP(uint32_t event,const uint8_t ep_num)
1020:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2749              	 .loc 1 1020 0
 2750              	 .cfi_startproc
 2751              	 
 2752              	 
 2753              	 
 2754 0000 80B4     	 push {r7}
 2755              	.LCFI105:
 2756              	 .cfi_def_cfa_offset 4
 2757              	 .cfi_offset 7,-4
 2758 0002 85B0     	 sub sp,sp,#20
 2759              	.LCFI106:
 2760              	 .cfi_def_cfa_offset 24
 2761 0004 00AF     	 add r7,sp,#0
 2762              	.LCFI107:
 2763              	 .cfi_def_cfa_register 7
 2764 0006 7860     	 str r0,[r7,#4]
 2765 0008 0B46     	 mov r3,r1
 2766 000a FB70     	 strb r3,[r7,#3]
1021:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t clear;
1022:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
 2767              	 .loc 1 1022 0
 2768 000c 7B68     	 ldr r3,[r7,#4]
 2769 000e FB60     	 str r3,[r7,#12]
1023:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep_num]->diepint = clear.d32;
 2770              	 .loc 1 1023 0
 2771 0010 FB78     	 ldrb r3,[r7,#3]
 2772 0012 054A     	 ldr r2,.L163
 2773 0014 6A33     	 adds r3,r3,#106
 2774 0016 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2775 001a FA68     	 ldr r2,[r7,#12]
 2776 001c 9A60     	 str r2,[r3,#8]
1024:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2777              	 .loc 1 1024 0
 2778 001e 1437     	 adds r7,r7,#20
 2779              	.LCFI108:
 2780              	 .cfi_def_cfa_offset 4
 2781 0020 BD46     	 mov sp,r7
 2782              	.LCFI109:
 2783              	 .cfi_def_cfa_register 13
 2784              	 
 2785 0022 5DF8047B 	 ldr r7,[sp],#4
 2786              	.LCFI110:
 2787              	 .cfi_restore 7
 2788              	 .cfi_def_cfa_offset 0
 2789 0026 7047     	 bx lr
 2790              	.L164:
 2791              	 .align 2
 2792              	.L163:
 2793 0028 00000000 	 .word xmc_device
 2794              	 .cfi_endproc
 2795              	.LFE197:
 2797              	 .section .text.XMC_USBD_ClearEventOUTEP,"ax",%progbits
 2798              	 .align 2
 2799              	 .global XMC_USBD_ClearEventOUTEP
 2800              	 .thumb
 2801              	 .thumb_func
 2803              	XMC_USBD_ClearEventOUTEP:
 2804              	.LFB198:
1025:../Libraries/XMCLib/src/xmc_usbd.c **** 
1026:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1027:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB OUT EP events
1028:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1029:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEventOUTEP(uint32_t event,const uint8_t ep_num)
1030:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2805              	 .loc 1 1030 0
 2806              	 .cfi_startproc
 2807              	 
 2808              	 
 2809              	 
 2810 0000 80B4     	 push {r7}
 2811              	.LCFI111:
 2812              	 .cfi_def_cfa_offset 4
 2813              	 .cfi_offset 7,-4
 2814 0002 85B0     	 sub sp,sp,#20
 2815              	.LCFI112:
 2816              	 .cfi_def_cfa_offset 24
 2817 0004 00AF     	 add r7,sp,#0
 2818              	.LCFI113:
 2819              	 .cfi_def_cfa_register 7
 2820 0006 7860     	 str r0,[r7,#4]
 2821 0008 0B46     	 mov r3,r1
 2822 000a FB70     	 strb r3,[r7,#3]
1031:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t clear;
1032:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
 2823              	 .loc 1 1032 0
 2824 000c 7B68     	 ldr r3,[r7,#4]
 2825 000e FB60     	 str r3,[r7,#12]
1033:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep_num]->doepint = clear.d32;
 2826              	 .loc 1 1033 0
 2827 0010 FB78     	 ldrb r3,[r7,#3]
 2828 0012 064A     	 ldr r2,.L166
 2829 0014 7033     	 adds r3,r3,#112
 2830 0016 9B00     	 lsls r3,r3,#2
 2831 0018 1344     	 add r3,r3,r2
 2832 001a 5B68     	 ldr r3,[r3,#4]
 2833 001c FA68     	 ldr r2,[r7,#12]
 2834 001e 9A60     	 str r2,[r3,#8]
1034:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2835              	 .loc 1 1034 0
 2836 0020 1437     	 adds r7,r7,#20
 2837              	.LCFI114:
 2838              	 .cfi_def_cfa_offset 4
 2839 0022 BD46     	 mov sp,r7
 2840              	.LCFI115:
 2841              	 .cfi_def_cfa_register 13
 2842              	 
 2843 0024 5DF8047B 	 ldr r7,[sp],#4
 2844              	.LCFI116:
 2845              	 .cfi_restore 7
 2846              	 .cfi_def_cfa_offset 0
 2847 0028 7047     	 bx lr
 2848              	.L167:
 2849 002a 00BF     	 .align 2
 2850              	.L166:
 2851 002c 00000000 	 .word xmc_device
 2852              	 .cfi_endproc
 2853              	.LFE198:
 2855              	 .section .text.XMC_USBD_EnableEventOUTEP,"ax",%progbits
 2856              	 .align 2
 2857              	 .global XMC_USBD_EnableEventOUTEP
 2858              	 .thumb
 2859              	 .thumb_func
 2861              	XMC_USBD_EnableEventOUTEP:
 2862              	.LFB199:
1035:../Libraries/XMCLib/src/xmc_usbd.c **** 
1036:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1037:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enable the USB OUT EP events
1038:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1039:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_EnableEventOUTEP(uint32_t event)
1040:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2863              	 .loc 1 1040 0
 2864              	 .cfi_startproc
 2865              	 
 2866              	 
 2867              	 
 2868 0000 80B4     	 push {r7}
 2869              	.LCFI117:
 2870              	 .cfi_def_cfa_offset 4
 2871              	 .cfi_offset 7,-4
 2872 0002 85B0     	 sub sp,sp,#20
 2873              	.LCFI118:
 2874              	 .cfi_def_cfa_offset 24
 2875 0004 00AF     	 add r7,sp,#0
 2876              	.LCFI119:
 2877              	 .cfi_def_cfa_register 7
 2878 0006 7860     	 str r0,[r7,#4]
1041:../Libraries/XMCLib/src/xmc_usbd.c **** 	doepint_data_t doepint;
1042:../Libraries/XMCLib/src/xmc_usbd.c **** 	doepint.d32 = event;
 2879              	 .loc 1 1042 0
 2880 0008 7B68     	 ldr r3,[r7,#4]
 2881 000a FB60     	 str r3,[r7,#12]
1043:../Libraries/XMCLib/src/xmc_usbd.c **** 	xmc_device.device_register->doepmsk |= doepint.d32;
 2882              	 .loc 1 1043 0
 2883 000c 074B     	 ldr r3,.L169
 2884 000e D3F8A431 	 ldr r3,[r3,#420]
 2885 0012 064A     	 ldr r2,.L169
 2886 0014 D2F8A421 	 ldr r2,[r2,#420]
 2887 0018 5169     	 ldr r1,[r2,#20]
 2888 001a FA68     	 ldr r2,[r7,#12]
 2889 001c 0A43     	 orrs r2,r2,r1
 2890 001e 5A61     	 str r2,[r3,#20]
1044:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2891              	 .loc 1 1044 0
 2892 0020 1437     	 adds r7,r7,#20
 2893              	.LCFI120:
 2894              	 .cfi_def_cfa_offset 4
 2895 0022 BD46     	 mov sp,r7
 2896              	.LCFI121:
 2897              	 .cfi_def_cfa_register 13
 2898              	 
 2899 0024 5DF8047B 	 ldr r7,[sp],#4
 2900              	.LCFI122:
 2901              	 .cfi_restore 7
 2902              	 .cfi_def_cfa_offset 0
 2903 0028 7047     	 bx lr
 2904              	.L170:
 2905 002a 00BF     	 .align 2
 2906              	.L169:
 2907 002c 00000000 	 .word xmc_device
 2908              	 .cfi_endproc
 2909              	.LFE199:
 2911              	 .section .text.XMC_USBD_EnableEventINEP,"ax",%progbits
 2912              	 .align 2
 2913              	 .global XMC_USBD_EnableEventINEP
 2914              	 .thumb
 2915              	 .thumb_func
 2917              	XMC_USBD_EnableEventINEP:
 2918              	.LFB200:
1045:../Libraries/XMCLib/src/xmc_usbd.c **** 
1046:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1047:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enable the USB IN EP events
1048:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1049:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_EnableEventINEP(uint32_t event)
1050:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2919              	 .loc 1 1050 0
 2920              	 .cfi_startproc
 2921              	 
 2922              	 
 2923              	 
 2924 0000 80B4     	 push {r7}
 2925              	.LCFI123:
 2926              	 .cfi_def_cfa_offset 4
 2927              	 .cfi_offset 7,-4
 2928 0002 85B0     	 sub sp,sp,#20
 2929              	.LCFI124:
 2930              	 .cfi_def_cfa_offset 24
 2931 0004 00AF     	 add r7,sp,#0
 2932              	.LCFI125:
 2933              	 .cfi_def_cfa_register 7
 2934 0006 7860     	 str r0,[r7,#4]
1051:../Libraries/XMCLib/src/xmc_usbd.c **** 	diepint_data_t diepint;
1052:../Libraries/XMCLib/src/xmc_usbd.c **** 	diepint.d32 = event;
 2935              	 .loc 1 1052 0
 2936 0008 7B68     	 ldr r3,[r7,#4]
 2937 000a FB60     	 str r3,[r7,#12]
1053:../Libraries/XMCLib/src/xmc_usbd.c **** 	xmc_device.device_register->diepmsk |= diepint.d32;
 2938              	 .loc 1 1053 0
 2939 000c 074B     	 ldr r3,.L172
 2940 000e D3F8A431 	 ldr r3,[r3,#420]
 2941 0012 064A     	 ldr r2,.L172
 2942 0014 D2F8A421 	 ldr r2,[r2,#420]
 2943 0018 1169     	 ldr r1,[r2,#16]
 2944 001a FA68     	 ldr r2,[r7,#12]
 2945 001c 0A43     	 orrs r2,r2,r1
 2946 001e 1A61     	 str r2,[r3,#16]
1054:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2947              	 .loc 1 1054 0
 2948 0020 1437     	 adds r7,r7,#20
 2949              	.LCFI126:
 2950              	 .cfi_def_cfa_offset 4
 2951 0022 BD46     	 mov sp,r7
 2952              	.LCFI127:
 2953              	 .cfi_def_cfa_register 13
 2954              	 
 2955 0024 5DF8047B 	 ldr r7,[sp],#4
 2956              	.LCFI128:
 2957              	 .cfi_restore 7
 2958              	 .cfi_def_cfa_offset 0
 2959 0028 7047     	 bx lr
 2960              	.L173:
 2961 002a 00BF     	 .align 2
 2962              	.L172:
 2963 002c 00000000 	 .word xmc_device
 2964              	 .cfi_endproc
 2965              	.LFE200:
 2967              	 .section .text.XMC_USBD_GetCapabilities,"ax",%progbits
 2968              	 .align 2
 2969              	 .global XMC_USBD_GetCapabilities
 2970              	 .thumb
 2971              	 .thumb_func
 2973              	XMC_USBD_GetCapabilities:
 2974              	.LFB201:
1055:../Libraries/XMCLib/src/xmc_usbd.c **** 
1056:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1057:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB device capabilities
1058:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1059:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_CAPABILITIES_t XMC_USBD_GetCapabilities()
1060:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2975              	 .loc 1 1060 0
 2976              	 .cfi_startproc
 2977              	 
 2978              	 
 2979              	 
 2980 0000 80B4     	 push {r7}
 2981              	.LCFI129:
 2982              	 .cfi_def_cfa_offset 4
 2983              	 .cfi_offset 7,-4
 2984 0002 83B0     	 sub sp,sp,#12
 2985              	.LCFI130:
 2986              	 .cfi_def_cfa_offset 16
 2987 0004 00AF     	 add r7,sp,#0
 2988              	.LCFI131:
 2989              	 .cfi_def_cfa_register 7
1061:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_CAPABILITIES_t cap={0U};
 2990              	 .loc 1 1061 0
 2991 0006 0023     	 movs r3,#0
 2992 0008 7B60     	 str r3,[r7,#4]
1062:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_connect = 1U;
 2993              	 .loc 1 1062 0
 2994 000a 3B79     	 ldrb r3,[r7,#4]
 2995 000c 43F00403 	 orr r3,r3,#4
 2996 0010 3B71     	 strb r3,[r7,#4]
1063:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_disconnect = 1U;
 2997              	 .loc 1 1063 0
 2998 0012 3B79     	 ldrb r3,[r7,#4]
 2999 0014 43F00803 	 orr r3,r3,#8
 3000 0018 3B71     	 strb r3,[r7,#4]
1064:../Libraries/XMCLib/src/xmc_usbd.c **** #if UC_SERIES == 45
1065:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_off = 1U;
1066:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_on = 1U;
1067:../Libraries/XMCLib/src/xmc_usbd.c **** #else
1068:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_off = 0U;
 3001              	 .loc 1 1068 0
 3002 001a 3B79     	 ldrb r3,[r7,#4]
 3003 001c 6FF34103 	 bfc r3,#1,#1
 3004 0020 3B71     	 strb r3,[r7,#4]
1069:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_on = 0U;
 3005              	 .loc 1 1069 0
 3006 0022 3B79     	 ldrb r3,[r7,#4]
 3007 0024 6FF30003 	 bfc r3,#0,#1
 3008 0028 3B71     	 strb r3,[r7,#4]
1070:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
1071:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_high_speed = 0U;
 3009              	 .loc 1 1071 0
 3010 002a 3B79     	 ldrb r3,[r7,#4]
 3011 002c 6FF34513 	 bfc r3,#5,#1
 3012 0030 3B71     	 strb r3,[r7,#4]
1072:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_remote_wakeup = 1U;
 3013              	 .loc 1 1072 0
 3014 0032 7B79     	 ldrb r3,[r7,#5]
 3015 0034 43F00103 	 orr r3,r3,#1
 3016 0038 7B71     	 strb r3,[r7,#5]
1073:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_reset = 1U;
 3017              	 .loc 1 1073 0
 3018 003a 3B79     	 ldrb r3,[r7,#4]
 3019 003c 43F01003 	 orr r3,r3,#16
 3020 0040 3B71     	 strb r3,[r7,#4]
1074:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_resume = 1U;
 3021              	 .loc 1 1074 0
 3022 0042 3B79     	 ldrb r3,[r7,#4]
 3023 0044 43F08003 	 orr r3,r3,#128
 3024 0048 3B71     	 strb r3,[r7,#4]
1075:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_suspend = 1U;
 3025              	 .loc 1 1075 0
 3026 004a 3B79     	 ldrb r3,[r7,#4]
 3027 004c 43F04003 	 orr r3,r3,#64
 3028 0050 3B71     	 strb r3,[r7,#4]
1076:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.reserved = 0U;
 3029              	 .loc 1 1076 0
 3030 0052 7B68     	 ldr r3,[r7,#4]
 3031 0054 6FF35F23 	 bfc r3,#9,#23
 3032 0058 7B60     	 str r3,[r7,#4]
1077:../Libraries/XMCLib/src/xmc_usbd.c ****   return cap;
 3033              	 .loc 1 1077 0
 3034 005a 7B68     	 ldr r3,[r7,#4]
1078:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3035              	 .loc 1 1078 0
 3036 005c 1846     	 mov r0,r3
 3037 005e 0C37     	 adds r7,r7,#12
 3038              	.LCFI132:
 3039              	 .cfi_def_cfa_offset 4
 3040 0060 BD46     	 mov sp,r7
 3041              	.LCFI133:
 3042              	 .cfi_def_cfa_register 13
 3043              	 
 3044 0062 5DF8047B 	 ldr r7,[sp],#4
 3045              	.LCFI134:
 3046              	 .cfi_restore 7
 3047              	 .cfi_def_cfa_offset 0
 3048 0066 7047     	 bx lr
 3049              	 .cfi_endproc
 3050              	.LFE201:
 3052              	 .section .text.XMC_USBD_Init,"ax",%progbits
 3053              	 .align 2
 3054              	 .global XMC_USBD_Init
 3055              	 .thumb
 3056              	 .thumb_func
 3058              	XMC_USBD_Init:
 3059              	.LFB202:
1079:../Libraries/XMCLib/src/xmc_usbd.c **** 
1080:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1081:../Libraries/XMCLib/src/xmc_usbd.c ****  * Initializes the USB device
1082:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1083:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_Init(XMC_USBD_t *obj)
1084:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3060              	 .loc 1 1084 0
 3061              	 .cfi_startproc
 3062              	 
 3063              	 
 3064 0000 80B5     	 push {r7,lr}
 3065              	.LCFI135:
 3066              	 .cfi_def_cfa_offset 8
 3067              	 .cfi_offset 7,-8
 3068              	 .cfi_offset 14,-4
 3069 0002 8AB0     	 sub sp,sp,#40
 3070              	.LCFI136:
 3071              	 .cfi_def_cfa_offset 48
 3072 0004 00AF     	 add r7,sp,#0
 3073              	.LCFI137:
 3074              	 .cfi_def_cfa_register 7
 3075 0006 7860     	 str r0,[r7,#4]
1085:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t *XMC_USBD_BASE_ADDRESS;
1086:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
1087:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg_data_t gahbcfg;
1088:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg_data_t gusbcfg;
1089:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t dcfg;
1090:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1091:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
1092:../Libraries/XMCLib/src/xmc_usbd.c **** 
1093:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_ASSERT("XMC_USBD_Init: obj.usbd_max_num_eps not of type XMC_USBD_MAX_NUM_EPS_t",
1094:../Libraries/XMCLib/src/xmc_usbd.c ****  		      XMC_USBD_CHECK_INPUT_MAX_NUM_EPS(obj->usbd_max_num_eps))
1095:../Libraries/XMCLib/src/xmc_usbd.c ****   
1096:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_Enable();
 3076              	 .loc 1 1096 0
 3077 0008 FFF7FEFF 	 bl XMC_USBD_Enable
1097:../Libraries/XMCLib/src/xmc_usbd.c ****   
1098:../Libraries/XMCLib/src/xmc_usbd.c ****   usbd_init = obj;
 3078              	 .loc 1 1098 0
 3079 000c 874A     	 ldr r2,.L189
 3080 000e 7B68     	 ldr r3,[r7,#4]
 3081 0010 1360     	 str r3,[r2]
1099:../Libraries/XMCLib/src/xmc_usbd.c **** 
1100:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Filling out buffer size */
1101:../Libraries/XMCLib/src/xmc_usbd.c ****   for(i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 3082              	 .loc 1 1101 0
 3083 0012 0023     	 movs r3,#0
 3084 0014 7B62     	 str r3,[r7,#36]
 3085 0016 0CE0     	 b .L177
 3086              	.L178:
1102:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1103:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_EP_OUT_BUFFERSIZE[i] = XMC_USBD_EP0_BUFFER_SIZE;
 3087              	 .loc 1 1103 0 discriminator 3
 3088 0018 854A     	 ldr r2,.L189+4
 3089 001a 7B6A     	 ldr r3,[r7,#36]
 3090 001c 4021     	 movs r1,#64
 3091 001e 42F82310 	 str r1,[r2,r3,lsl#2]
1104:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_EP_IN_BUFFERSIZE[i] 	= XMC_USBD_EP0_BUFFER_SIZE;
 3092              	 .loc 1 1104 0 discriminator 3
 3093 0022 844A     	 ldr r2,.L189+8
 3094 0024 7B6A     	 ldr r3,[r7,#36]
 3095 0026 4021     	 movs r1,#64
 3096 0028 42F82310 	 str r1,[r2,r3,lsl#2]
1101:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3097              	 .loc 1 1101 0 discriminator 3
 3098 002c 7B6A     	 ldr r3,[r7,#36]
 3099 002e 0133     	 adds r3,r3,#1
 3100 0030 7B62     	 str r3,[r7,#36]
 3101              	.L177:
1101:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3102              	 .loc 1 1101 0 is_stmt 0 discriminator 1
 3103 0032 7B6A     	 ldr r3,[r7,#36]
 3104 0034 062B     	 cmp r3,#6
 3105 0036 EFD9     	 bls .L178
1105:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1106:../Libraries/XMCLib/src/xmc_usbd.c **** 
1107:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear device status */
1108:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void*)&xmc_device,0x0U,sizeof(XMC_USBD_DEVICE_t));
 3106              	 .loc 1 1108 0 is_stmt 1
 3107 0038 7F48     	 ldr r0,.L189+12
 3108 003a 0021     	 movs r1,#0
 3109 003c 4FF40272 	 mov r2,#520
 3110 0040 FFF7FEFF 	 bl memset
1109:../Libraries/XMCLib/src/xmc_usbd.c **** 
1110:../Libraries/XMCLib/src/xmc_usbd.c ****   /* assign callbacks */
1111:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb = obj->cb_xmc_device_event;
 3111              	 .loc 1 1111 0
 3112 0044 7B68     	 ldr r3,[r7,#4]
 3113 0046 5B68     	 ldr r3,[r3,#4]
 3114 0048 7B4A     	 ldr r2,.L189+12
 3115 004a C2F80032 	 str r3,[r2,#512]
1112:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.EndpointEvent_cb = obj->cb_endpoint_event;
 3116              	 .loc 1 1112 0
 3117 004e 7B68     	 ldr r3,[r7,#4]
 3118 0050 9B68     	 ldr r3,[r3,#8]
 3119 0052 794A     	 ldr r2,.L189+12
 3120 0054 C2F80432 	 str r3,[r2,#516]
1113:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_BASE_ADDRESS = (uint8_t *)(obj->usbd);
 3121              	 .loc 1 1113 0
 3122 0058 7B68     	 ldr r3,[r7,#4]
 3123 005a 1B68     	 ldr r3,[r3]
 3124 005c 3B62     	 str r3,[r7,#32]
1114:../Libraries/XMCLib/src/xmc_usbd.c ****   /* assign register address */
1115:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register = (dwc_otg_core_global_regs_t*)(obj->usbd);
 3125              	 .loc 1 1115 0
 3126 005e 7B68     	 ldr r3,[r7,#4]
 3127 0060 1B68     	 ldr r3,[r3]
 3128 0062 754A     	 ldr r2,.L189+12
 3129 0064 C2F8A031 	 str r3,[r2,#416]
1116:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register = ((dwc_otg_device_global_regs_t*)(XMC_USBD_BASE_ADDRESS + DWC_DEV_GLO
 3130              	 .loc 1 1116 0
 3131 0068 3B6A     	 ldr r3,[r7,#32]
 3132 006a 03F50063 	 add r3,r3,#2048
 3133 006e 724A     	 ldr r2,.L189+12
 3134 0070 C2F8A431 	 str r3,[r2,#420]
1117:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 3135              	 .loc 1 1117 0
 3136 0074 0023     	 movs r3,#0
 3137 0076 7B62     	 str r3,[r7,#36]
 3138 0078 0CE0     	 b .L179
 3139              	.L180:
1118:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1119:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_in_register[i] = (dwc_otg_dev_in_ep_regs_t*)(XMC_USBD_BASE_ADDRESS + DWC_DE
 3140              	 .loc 1 1119 0 discriminator 3
 3141 007a 7B6A     	 ldr r3,[r7,#36]
 3142 007c 4833     	 adds r3,r3,#72
 3143 007e 5B01     	 lsls r3,r3,#5
 3144 0080 3A6A     	 ldr r2,[r7,#32]
 3145 0082 1A44     	 add r2,r2,r3
 3146 0084 6C49     	 ldr r1,.L189+12
 3147 0086 7B6A     	 ldr r3,[r7,#36]
 3148 0088 6A33     	 adds r3,r3,#106
 3149 008a 41F82320 	 str r2,[r1,r3,lsl#2]
1117:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 3150              	 .loc 1 1117 0 discriminator 3
 3151 008e 7B6A     	 ldr r3,[r7,#36]
 3152 0090 0133     	 adds r3,r3,#1
 3153 0092 7B62     	 str r3,[r7,#36]
 3154              	.L179:
1117:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 3155              	 .loc 1 1117 0 is_stmt 0 discriminator 1
 3156 0094 7B6A     	 ldr r3,[r7,#36]
 3157 0096 062B     	 cmp r3,#6
 3158 0098 EFD9     	 bls .L180
1120:../Libraries/XMCLib/src/xmc_usbd.c ****     ((uint32_t)DWC_EP_REG_OFFSET*i));
1121:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1122:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 3159              	 .loc 1 1122 0 is_stmt 1
 3160 009a 0023     	 movs r3,#0
 3161 009c 7B62     	 str r3,[r7,#36]
 3162 009e 0DE0     	 b .L181
 3163              	.L182:
1123:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1124:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[i] = (dwc_otg_dev_out_ep_regs_t*)(XMC_USBD_BASE_ADDRESS +
1125:../Libraries/XMCLib/src/xmc_usbd.c ****     									  DWC_DEV_OUT_EP_REG_OFFSET +
 3164              	 .loc 1 1125 0 discriminator 3
 3165 00a0 7B6A     	 ldr r3,[r7,#36]
 3166 00a2 5833     	 adds r3,r3,#88
 3167 00a4 5B01     	 lsls r3,r3,#5
 3168 00a6 3A6A     	 ldr r2,[r7,#32]
 3169 00a8 1A44     	 add r2,r2,r3
1124:../Libraries/XMCLib/src/xmc_usbd.c ****     									  DWC_DEV_OUT_EP_REG_OFFSET +
 3170              	 .loc 1 1124 0 discriminator 3
 3171 00aa 6349     	 ldr r1,.L189+12
 3172 00ac 7B6A     	 ldr r3,[r7,#36]
 3173 00ae 7033     	 adds r3,r3,#112
 3174 00b0 9B00     	 lsls r3,r3,#2
 3175 00b2 0B44     	 add r3,r3,r1
 3176 00b4 5A60     	 str r2,[r3,#4]
1122:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3177              	 .loc 1 1122 0 discriminator 3
 3178 00b6 7B6A     	 ldr r3,[r7,#36]
 3179 00b8 0133     	 adds r3,r3,#1
 3180 00ba 7B62     	 str r3,[r7,#36]
 3181              	.L181:
1122:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3182              	 .loc 1 1122 0 is_stmt 0 discriminator 1
 3183 00bc 7B6A     	 ldr r3,[r7,#36]
 3184 00be 062B     	 cmp r3,#6
 3185 00c0 EED9     	 bls .L182
1126:../Libraries/XMCLib/src/xmc_usbd.c ****     									  ((uint32_t)DWC_EP_REG_OFFSET*i));
1127:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1128:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_TX_FIFOS;i++)
 3186              	 .loc 1 1128 0 is_stmt 1
 3187 00c2 0023     	 movs r3,#0
 3188 00c4 7B62     	 str r3,[r7,#36]
 3189 00c6 0CE0     	 b .L183
 3190              	.L184:
1129:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1130:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.fifo[i] = (uint32_t*)(XMC_USBD_BASE_ADDRESS +
1131:../Libraries/XMCLib/src/xmc_usbd.c ****     						XMC_USBD_TX_FIFO_REG_OFFSET +
 3191              	 .loc 1 1131 0 discriminator 3
 3192 00c8 7B6A     	 ldr r3,[r7,#36]
 3193 00ca 0133     	 adds r3,r3,#1
 3194 00cc 1B03     	 lsls r3,r3,#12
 3195 00ce 3A6A     	 ldr r2,[r7,#32]
 3196 00d0 1A44     	 add r2,r2,r3
1130:../Libraries/XMCLib/src/xmc_usbd.c ****     						XMC_USBD_TX_FIFO_REG_OFFSET +
 3197              	 .loc 1 1130 0 discriminator 3
 3198 00d2 5949     	 ldr r1,.L189+12
 3199 00d4 7B6A     	 ldr r3,[r7,#36]
 3200 00d6 7833     	 adds r3,r3,#120
 3201 00d8 41F82320 	 str r2,[r1,r3,lsl#2]
1128:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3202              	 .loc 1 1128 0 discriminator 3
 3203 00dc 7B6A     	 ldr r3,[r7,#36]
 3204 00de 0133     	 adds r3,r3,#1
 3205 00e0 7B62     	 str r3,[r7,#36]
 3206              	.L183:
1128:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3207              	 .loc 1 1128 0 is_stmt 0 discriminator 1
 3208 00e2 7B6A     	 ldr r3,[r7,#36]
 3209 00e4 062B     	 cmp r3,#6
 3210 00e6 EFD9     	 bls .L184
1132:../Libraries/XMCLib/src/xmc_usbd.c ****     						(i * XMC_USBD_TX_FIFO_OFFSET));
1133:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1134:../Libraries/XMCLib/src/xmc_usbd.c ****   /* obj data structure for endpoint 0 */
1135:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Done by driver core */
1136:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure ahb details */  
1137:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.d32 = xmc_device.global_register->gahbcfg;
 3211              	 .loc 1 1137 0 is_stmt 1
 3212 00e8 534B     	 ldr r3,.L189+12
 3213 00ea D3F8A031 	 ldr r3,[r3,#416]
 3214 00ee 9B68     	 ldr r3,[r3,#8]
 3215 00f0 FB61     	 str r3,[r7,#28]
1138:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.b.glblintrmsk = 1U; /* enable interrupts ( global mask ) */
 3216              	 .loc 1 1138 0
 3217 00f2 3B7F     	 ldrb r3,[r7,#28]
 3218 00f4 43F00103 	 orr r3,r3,#1
 3219 00f8 3B77     	 strb r3,[r7,#28]
1139:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.b.nptxfemplvl_txfemplvl = 1U;
 3220              	 .loc 1 1139 0
 3221 00fa 3B7F     	 ldrb r3,[r7,#28]
 3222 00fc 43F08003 	 orr r3,r3,#128
 3223 0100 3B77     	 strb r3,[r7,#28]
1140:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 3224              	 .loc 1 1140 0
 3225 0102 7B68     	 ldr r3,[r7,#4]
 3226 0104 5B7B     	 ldrb r3,[r3,#13]
 3227 0106 002B     	 cmp r3,#0
 3228 0108 04D1     	 bne .L185
1141:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1142:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Enable dma if needed */
1143:../Libraries/XMCLib/src/xmc_usbd.c ****     gahbcfg.b.dmaenable = 1U; /* enable dma if needed */
 3229              	 .loc 1 1143 0
 3230 010a 3B7F     	 ldrb r3,[r7,#28]
 3231 010c 43F02003 	 orr r3,r3,#32
 3232 0110 3B77     	 strb r3,[r7,#28]
 3233 0112 03E0     	 b .L186
 3234              	.L185:
1144:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1145:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1146:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1147:../Libraries/XMCLib/src/xmc_usbd.c ****     gahbcfg.b.dmaenable = 0U;
 3235              	 .loc 1 1147 0
 3236 0114 3B7F     	 ldrb r3,[r7,#28]
 3237 0116 6FF34513 	 bfc r3,#5,#1
 3238 011a 3B77     	 strb r3,[r7,#28]
 3239              	.L186:
1148:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1149:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gahbcfg = gahbcfg.d32;
 3240              	 .loc 1 1149 0
 3241 011c 464B     	 ldr r3,.L189+12
 3242 011e D3F8A031 	 ldr r3,[r3,#416]
 3243 0122 FA69     	 ldr r2,[r7,#28]
 3244 0124 9A60     	 str r2,[r3,#8]
1150:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure usb details */  
1151:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.d32= xmc_device.global_register->gusbcfg;
 3245              	 .loc 1 1151 0
 3246 0126 444B     	 ldr r3,.L189+12
 3247 0128 D3F8A031 	 ldr r3,[r3,#416]
 3248 012c DB68     	 ldr r3,[r3,#12]
 3249 012e BB61     	 str r3,[r7,#24]
1152:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.force_dev_mode = 1U; /* force us into device mode */
 3250              	 .loc 1 1152 0
 3251 0130 FB7E     	 ldrb r3,[r7,#27]
 3252 0132 43F04003 	 orr r3,r3,#64
 3253 0136 FB76     	 strb r3,[r7,#27]
1153:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.srpcap = 1U; /* enable session request protocoll */
 3254              	 .loc 1 1153 0
 3255 0138 7B7E     	 ldrb r3,[r7,#25]
 3256 013a 43F00103 	 orr r3,r3,#1
 3257 013e 7B76     	 strb r3,[r7,#25]
1154:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
 3258              	 .loc 1 1154 0
 3259 0140 3D4B     	 ldr r3,.L189+12
 3260 0142 D3F8A031 	 ldr r3,[r3,#416]
 3261 0146 BA69     	 ldr r2,[r7,#24]
 3262 0148 DA60     	 str r2,[r3,#12]
1155:../Libraries/XMCLib/src/xmc_usbd.c **** 
1156:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Device init */
1157:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure device speed */  
1158:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.d32 = xmc_device.device_register->dcfg;
 3263              	 .loc 1 1158 0
 3264 014a 3B4B     	 ldr r3,.L189+12
 3265 014c D3F8A431 	 ldr r3,[r3,#420]
 3266 0150 1B68     	 ldr r3,[r3]
 3267 0152 7B61     	 str r3,[r7,#20]
1159:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devspd = XMC_USBD_DCFG_DEVSPD_FS;
 3268              	 .loc 1 1159 0
 3269 0154 3B7D     	 ldrb r3,[r7,#20]
 3270 0156 43F00303 	 orr r3,r3,#3
 3271 015a 3B75     	 strb r3,[r7,#20]
1160:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.descdma = 0U;
 3272              	 .loc 1 1160 0
 3273 015c BB7D     	 ldrb r3,[r7,#22]
 3274 015e 6FF3C713 	 bfc r3,#7,#1
 3275 0162 BB75     	 strb r3,[r7,#22]
1161:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
 3276              	 .loc 1 1161 0
 3277 0164 344B     	 ldr r3,.L189+12
 3278 0166 D3F8A431 	 ldr r3,[r3,#420]
 3279 016a 7A69     	 ldr r2,[r7,#20]
 3280 016c 1A60     	 str r2,[r3]
1162:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure device functions */  
1163:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 3281              	 .loc 1 1163 0
 3282 016e 324B     	 ldr r3,.L189+12
 3283 0170 D3F8A431 	 ldr r3,[r3,#420]
 3284 0174 5B68     	 ldr r3,[r3,#4]
 3285 0176 3B61     	 str r3,[r7,#16]
1164:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U; /* disconnect the device until its connected by the user */
 3286              	 .loc 1 1164 0
 3287 0178 3B7C     	 ldrb r3,[r7,#16]
 3288 017a 43F00203 	 orr r3,r3,#2
 3289 017e 3B74     	 strb r3,[r7,#16]
1165:../Libraries/XMCLib/src/xmc_usbd.c ****   /* all other config is done by default register value */
1166:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3290              	 .loc 1 1166 0
 3291 0180 2D4B     	 ldr r3,.L189+12
 3292 0182 D3F8A431 	 ldr r3,[r3,#420]
 3293 0186 3A69     	 ldr r2,[r7,#16]
 3294 0188 5A60     	 str r2,[r3,#4]
1167:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush the fifos for proper operation */
1168:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo((uint8_t)0x10U); /* 0x10 == all fifos, see doc */
 3295              	 .loc 1 1168 0
 3296 018a 1020     	 movs r0,#16
 3297 018c FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
1169:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
 3298              	 .loc 1 1169 0
 3299 0190 FFF7FEFF 	 bl XMC_USBD_lFlushRXFifo
1170:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Enable Global Interrupts */
1171:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt status bits prior to unmasking */
1172:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintmsk = 0U; /* disable all interrupts */
 3300              	 .loc 1 1172 0
 3301 0194 284B     	 ldr r3,.L189+12
 3302 0196 D3F8A031 	 ldr r3,[r3,#416]
 3303 019a 0022     	 movs r2,#0
 3304 019c 9A61     	 str r2,[r3,#24]
1173:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintsts = 0xFFFFFFFFU; /* clear all interrupts */
 3305              	 .loc 1 1173 0
 3306 019e 264B     	 ldr r3,.L189+12
 3307 01a0 D3F8A031 	 ldr r3,[r3,#416]
 3308 01a4 4FF0FF32 	 mov r2,#-1
 3309 01a8 5A61     	 str r2,[r3,#20]
1174:../Libraries/XMCLib/src/xmc_usbd.c ****  
1175:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.d32 = 0U;
 3310              	 .loc 1 1175 0
 3311 01aa 0023     	 movs r3,#0
 3312 01ac FB60     	 str r3,[r7,#12]
1176:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable common interrupts */
1177:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.modemismatch = 1U;
 3313              	 .loc 1 1177 0
 3314 01ae 3B7B     	 ldrb r3,[r7,#12]
 3315 01b0 43F00203 	 orr r3,r3,#2
 3316 01b4 3B73     	 strb r3,[r7,#12]
1178:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.otgintr = 1U;
 3317              	 .loc 1 1178 0
 3318 01b6 3B7B     	 ldrb r3,[r7,#12]
 3319 01b8 43F00403 	 orr r3,r3,#4
 3320 01bc 3B73     	 strb r3,[r7,#12]
1179:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.sessreqintr = 1U;
 3321              	 .loc 1 1179 0
 3322 01be FB7B     	 ldrb r3,[r7,#15]
 3323 01c0 43F04003 	 orr r3,r3,#64
 3324 01c4 FB73     	 strb r3,[r7,#15]
1180:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable device interrupts */
1181:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.usbreset = 1U;
 3325              	 .loc 1 1181 0
 3326 01c6 7B7B     	 ldrb r3,[r7,#13]
 3327 01c8 43F01003 	 orr r3,r3,#16
 3328 01cc 7B73     	 strb r3,[r7,#13]
1182:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.enumdone = 1U;
 3329              	 .loc 1 1182 0
 3330 01ce 7B7B     	 ldrb r3,[r7,#13]
 3331 01d0 43F02003 	 orr r3,r3,#32
 3332 01d4 7B73     	 strb r3,[r7,#13]
1183:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.erlysuspend = 1U;
 3333              	 .loc 1 1183 0
 3334 01d6 7B7B     	 ldrb r3,[r7,#13]
 3335 01d8 43F00403 	 orr r3,r3,#4
 3336 01dc 7B73     	 strb r3,[r7,#13]
1184:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.usbsuspend = 1U;
 3337              	 .loc 1 1184 0
 3338 01de 7B7B     	 ldrb r3,[r7,#13]
 3339 01e0 43F00803 	 orr r3,r3,#8
 3340 01e4 7B73     	 strb r3,[r7,#13]
1185:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.wkupintr = 1U;
 3341              	 .loc 1 1185 0
 3342 01e6 FB7B     	 ldrb r3,[r7,#15]
 3343 01e8 43F08003 	 orr r3,r3,#128
 3344 01ec FB73     	 strb r3,[r7,#15]
1186:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.sofintr = 1U;
 3345              	 .loc 1 1186 0
 3346 01ee 3B7B     	 ldrb r3,[r7,#12]
 3347 01f0 43F00803 	 orr r3,r3,#8
 3348 01f4 3B73     	 strb r3,[r7,#12]
1187:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 3349              	 .loc 1 1187 0
 3350 01f6 7B68     	 ldr r3,[r7,#4]
 3351 01f8 5B7B     	 ldrb r3,[r3,#13]
 3352 01fa 012B     	 cmp r3,#1
 3353 01fc 03D1     	 bne .L187
1188:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1189:../Libraries/XMCLib/src/xmc_usbd.c ****     gintmsk.b.rxstsqlvl = 1U;
 3354              	 .loc 1 1189 0
 3355 01fe 3B7B     	 ldrb r3,[r7,#12]
 3356 0200 43F01003 	 orr r3,r3,#16
 3357 0204 3B73     	 strb r3,[r7,#12]
 3358              	.L187:
1190:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1191:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.outepintr = 1U;
 3359              	 .loc 1 1191 0
 3360 0206 BB7B     	 ldrb r3,[r7,#14]
 3361 0208 43F00803 	 orr r3,r3,#8
 3362 020c BB73     	 strb r3,[r7,#14]
1192:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.inepintr = 1U;
 3363              	 .loc 1 1192 0
 3364 020e BB7B     	 ldrb r3,[r7,#14]
 3365 0210 43F00403 	 orr r3,r3,#4
 3366 0214 BB73     	 strb r3,[r7,#14]
1193:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintmsk = gintmsk.d32;
 3367              	 .loc 1 1193 0
 3368 0216 084B     	 ldr r3,.L189+12
 3369 0218 D3F8A031 	 ldr r3,[r3,#416]
 3370 021c FA68     	 ldr r2,[r7,#12]
 3371 021e 9A61     	 str r2,[r3,#24]
1194:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3372              	 .loc 1 1194 0
 3373 0220 0023     	 movs r3,#0
1195:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3374              	 .loc 1 1195 0
 3375 0222 1846     	 mov r0,r3
 3376 0224 2837     	 adds r7,r7,#40
 3377              	.LCFI138:
 3378              	 .cfi_def_cfa_offset 8
 3379 0226 BD46     	 mov sp,r7
 3380              	.LCFI139:
 3381              	 .cfi_def_cfa_register 13
 3382              	 
 3383 0228 80BD     	 pop {r7,pc}
 3384              	.L190:
 3385 022a 00BF     	 .align 2
 3386              	.L189:
 3387 022c 00000000 	 .word usbd_init
 3388 0230 00000000 	 .word XMC_USBD_EP_OUT_BUFFERSIZE
 3389 0234 00000000 	 .word XMC_USBD_EP_IN_BUFFERSIZE
 3390 0238 00000000 	 .word xmc_device
 3391              	 .cfi_endproc
 3392              	.LFE202:
 3394              	 .section .text.XMC_USBD_Uninitialize,"ax",%progbits
 3395              	 .align 2
 3396              	 .global XMC_USBD_Uninitialize
 3397              	 .thumb
 3398              	 .thumb_func
 3400              	XMC_USBD_Uninitialize:
 3401              	.LFB203:
1196:../Libraries/XMCLib/src/xmc_usbd.c **** 
1197:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1198:../Libraries/XMCLib/src/xmc_usbd.c ****  * Uninitializes the USB device
1199:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1200:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_Uninitialize() 
1201:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3402              	 .loc 1 1201 0
 3403              	 .cfi_startproc
 3404              	 
 3405              	 
 3406 0000 80B5     	 push {r7,lr}
 3407              	.LCFI140:
 3408              	 .cfi_def_cfa_offset 8
 3409              	 .cfi_offset 7,-8
 3410              	 .cfi_offset 14,-4
 3411 0002 82B0     	 sub sp,sp,#8
 3412              	.LCFI141:
 3413              	 .cfi_def_cfa_offset 16
 3414 0004 00AF     	 add r7,sp,#0
 3415              	.LCFI142:
 3416              	 .cfi_def_cfa_register 7
1202:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Disconnect the device */
1203:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1204:../Libraries/XMCLib/src/xmc_usbd.c **** 	dctl.d32 = xmc_device.device_register->dctl;
 3417              	 .loc 1 1204 0
 3418 0006 0C4B     	 ldr r3,.L193
 3419 0008 D3F8A431 	 ldr r3,[r3,#420]
 3420 000c 5B68     	 ldr r3,[r3,#4]
 3421 000e 7B60     	 str r3,[r7,#4]
1205:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
 3422              	 .loc 1 1205 0
 3423 0010 3B79     	 ldrb r3,[r7,#4]
 3424 0012 43F00203 	 orr r3,r3,#2
 3425 0016 3B71     	 strb r3,[r7,#4]
1206:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3426              	 .loc 1 1206 0
 3427 0018 074B     	 ldr r3,.L193
 3428 001a D3F8A431 	 ldr r3,[r3,#420]
 3429 001e 7A68     	 ldr r2,[r7,#4]
 3430 0020 5A60     	 str r2,[r3,#4]
1207:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clean up */
1208:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void*)&xmc_device,0U,sizeof(xmc_device));
 3431              	 .loc 1 1208 0
 3432 0022 0548     	 ldr r0,.L193
 3433 0024 0021     	 movs r1,#0
 3434 0026 4FF40272 	 mov r2,#520
 3435 002a FFF7FEFF 	 bl memset
1209:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3436              	 .loc 1 1209 0
 3437 002e 0023     	 movs r3,#0
1210:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3438              	 .loc 1 1210 0
 3439 0030 1846     	 mov r0,r3
 3440 0032 0837     	 adds r7,r7,#8
 3441              	.LCFI143:
 3442              	 .cfi_def_cfa_offset 8
 3443 0034 BD46     	 mov sp,r7
 3444              	.LCFI144:
 3445              	 .cfi_def_cfa_register 13
 3446              	 
 3447 0036 80BD     	 pop {r7,pc}
 3448              	.L194:
 3449              	 .align 2
 3450              	.L193:
 3451 0038 00000000 	 .word xmc_device
 3452              	 .cfi_endproc
 3453              	.LFE203:
 3455              	 .section .text.XMC_USBD_DeviceConnect,"ax",%progbits
 3456              	 .align 2
 3457              	 .global XMC_USBD_DeviceConnect
 3458              	 .thumb
 3459              	 .thumb_func
 3461              	XMC_USBD_DeviceConnect:
 3462              	.LFB204:
1211:../Libraries/XMCLib/src/xmc_usbd.c **** 
1212:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1213:../Libraries/XMCLib/src/xmc_usbd.c ****  * Connects the USB device to host
1214:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1215:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceConnect() 
1216:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3463              	 .loc 1 1216 0
 3464              	 .cfi_startproc
 3465              	 
 3466              	 
 3467              	 
 3468 0000 80B4     	 push {r7}
 3469              	.LCFI145:
 3470              	 .cfi_def_cfa_offset 4
 3471              	 .cfi_offset 7,-4
 3472 0002 83B0     	 sub sp,sp,#12
 3473              	.LCFI146:
 3474              	 .cfi_def_cfa_offset 16
 3475 0004 00AF     	 add r7,sp,#0
 3476              	.LCFI147:
 3477              	 .cfi_def_cfa_register 7
1217:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Just disable softdisconnect */
1218:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1219:../Libraries/XMCLib/src/xmc_usbd.c **** 	dctl.d32 = xmc_device.device_register->dctl;
 3478              	 .loc 1 1219 0
 3479 0006 0A4B     	 ldr r3,.L197
 3480 0008 D3F8A431 	 ldr r3,[r3,#420]
 3481 000c 5B68     	 ldr r3,[r3,#4]
 3482 000e 7B60     	 str r3,[r7,#4]
1220:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 0U;
 3483              	 .loc 1 1220 0
 3484 0010 3B79     	 ldrb r3,[r7,#4]
 3485 0012 6FF34103 	 bfc r3,#1,#1
 3486 0016 3B71     	 strb r3,[r7,#4]
1221:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3487              	 .loc 1 1221 0
 3488 0018 054B     	 ldr r3,.L197
 3489 001a D3F8A431 	 ldr r3,[r3,#420]
 3490 001e 7A68     	 ldr r2,[r7,#4]
 3491 0020 5A60     	 str r2,[r3,#4]
1222:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3492              	 .loc 1 1222 0
 3493 0022 0023     	 movs r3,#0
1223:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3494              	 .loc 1 1223 0
 3495 0024 1846     	 mov r0,r3
 3496 0026 0C37     	 adds r7,r7,#12
 3497              	.LCFI148:
 3498              	 .cfi_def_cfa_offset 4
 3499 0028 BD46     	 mov sp,r7
 3500              	.LCFI149:
 3501              	 .cfi_def_cfa_register 13
 3502              	 
 3503 002a 5DF8047B 	 ldr r7,[sp],#4
 3504              	.LCFI150:
 3505              	 .cfi_restore 7
 3506              	 .cfi_def_cfa_offset 0
 3507 002e 7047     	 bx lr
 3508              	.L198:
 3509              	 .align 2
 3510              	.L197:
 3511 0030 00000000 	 .word xmc_device
 3512              	 .cfi_endproc
 3513              	.LFE204:
 3515              	 .section .text.XMC_USBD_DeviceDisconnect,"ax",%progbits
 3516              	 .align 2
 3517              	 .global XMC_USBD_DeviceDisconnect
 3518              	 .thumb
 3519              	 .thumb_func
 3521              	XMC_USBD_DeviceDisconnect:
 3522              	.LFB205:
1224:../Libraries/XMCLib/src/xmc_usbd.c **** 
1225:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1226:../Libraries/XMCLib/src/xmc_usbd.c ****  * Disconnects the USB device from host
1227:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1228:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceDisconnect() 
1229:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3523              	 .loc 1 1229 0
 3524              	 .cfi_startproc
 3525              	 
 3526              	 
 3527              	 
 3528 0000 80B4     	 push {r7}
 3529              	.LCFI151:
 3530              	 .cfi_def_cfa_offset 4
 3531              	 .cfi_offset 7,-4
 3532 0002 83B0     	 sub sp,sp,#12
 3533              	.LCFI152:
 3534              	 .cfi_def_cfa_offset 16
 3535 0004 00AF     	 add r7,sp,#0
 3536              	.LCFI153:
 3537              	 .cfi_def_cfa_register 7
1230:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1231:../Libraries/XMCLib/src/xmc_usbd.c **** 	dctl.d32 = xmc_device.device_register->dctl;
 3538              	 .loc 1 1231 0
 3539 0006 0A4B     	 ldr r3,.L201
 3540 0008 D3F8A431 	 ldr r3,[r3,#420]
 3541 000c 5B68     	 ldr r3,[r3,#4]
 3542 000e 7B60     	 str r3,[r7,#4]
1232:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
 3543              	 .loc 1 1232 0
 3544 0010 3B79     	 ldrb r3,[r7,#4]
 3545 0012 43F00203 	 orr r3,r3,#2
 3546 0016 3B71     	 strb r3,[r7,#4]
1233:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3547              	 .loc 1 1233 0
 3548 0018 054B     	 ldr r3,.L201
 3549 001a D3F8A431 	 ldr r3,[r3,#420]
 3550 001e 7A68     	 ldr r2,[r7,#4]
 3551 0020 5A60     	 str r2,[r3,#4]
1234:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3552              	 .loc 1 1234 0
 3553 0022 0023     	 movs r3,#0
1235:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3554              	 .loc 1 1235 0
 3555 0024 1846     	 mov r0,r3
 3556 0026 0C37     	 adds r7,r7,#12
 3557              	.LCFI154:
 3558              	 .cfi_def_cfa_offset 4
 3559 0028 BD46     	 mov sp,r7
 3560              	.LCFI155:
 3561              	 .cfi_def_cfa_register 13
 3562              	 
 3563 002a 5DF8047B 	 ldr r7,[sp],#4
 3564              	.LCFI156:
 3565              	 .cfi_restore 7
 3566              	 .cfi_def_cfa_offset 0
 3567 002e 7047     	 bx lr
 3568              	.L202:
 3569              	 .align 2
 3570              	.L201:
 3571 0030 00000000 	 .word xmc_device
 3572              	 .cfi_endproc
 3573              	.LFE205:
 3575              	 .section .text.XMC_USBD_DeviceGetState,"ax",%progbits
 3576              	 .align 2
 3577              	 .global XMC_USBD_DeviceGetState
 3578              	 .thumb
 3579              	 .thumb_func
 3581              	XMC_USBD_DeviceGetState:
 3582              	.LFB206:
1236:../Libraries/XMCLib/src/xmc_usbd.c **** 
1237:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1238:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB device state.
1239:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1240:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATE_t XMC_USBD_DeviceGetState(const XMC_USBD_t *const obj) 
1241:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3583              	 .loc 1 1241 0
 3584              	 .cfi_startproc
 3585              	 
 3586              	 
 3587 0000 80B5     	 push {r7,lr}
 3588              	.LCFI157:
 3589              	 .cfi_def_cfa_offset 8
 3590              	 .cfi_offset 7,-8
 3591              	 .cfi_offset 14,-4
 3592 0002 84B0     	 sub sp,sp,#16
 3593              	.LCFI158:
 3594              	 .cfi_def_cfa_offset 24
 3595 0004 00AF     	 add r7,sp,#0
 3596              	.LCFI159:
 3597              	 .cfi_def_cfa_register 7
 3598 0006 7860     	 str r0,[r7,#4]
1242:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATE_t state={0U};
 3599              	 .loc 1 1242 0
 3600 0008 0023     	 movs r3,#0
 3601 000a FB60     	 str r3,[r7,#12]
1243:../Libraries/XMCLib/src/xmc_usbd.c ****   state.speed = XMC_USBD_SPEED_FULL;
 3602              	 .loc 1 1243 0
 3603 000c 3B7B     	 ldrb r3,[r7,#12]
 3604 000e 0122     	 movs r2,#1
 3605 0010 62F3C403 	 bfi r3,r2,#3,#2
 3606 0014 3B73     	 strb r3,[r7,#12]
1244:../Libraries/XMCLib/src/xmc_usbd.c ****   state.connected = xmc_device.IsConnected;
 3607              	 .loc 1 1244 0
 3608 0016 124B     	 ldr r3,.L205
 3609 0018 93F8FE31 	 ldrb r3,[r3,#510]
 3610 001c C3F30003 	 ubfx r3,r3,#0,#1
 3611 0020 DAB2     	 uxtb r2,r3
 3612 0022 3B7B     	 ldrb r3,[r7,#12]
 3613 0024 62F34103 	 bfi r3,r2,#1,#1
 3614 0028 3B73     	 strb r3,[r7,#12]
1245:../Libraries/XMCLib/src/xmc_usbd.c ****   state.active = XMC_USBD_lDeviceActive(obj);
 3615              	 .loc 1 1245 0
 3616 002a 7868     	 ldr r0,[r7,#4]
 3617 002c FFF7FEFF 	 bl XMC_USBD_lDeviceActive
 3618 0030 0346     	 mov r3,r0
 3619 0032 03F00103 	 and r3,r3,#1
 3620 0036 DAB2     	 uxtb r2,r3
 3621 0038 3B7B     	 ldrb r3,[r7,#12]
 3622 003a 62F38203 	 bfi r3,r2,#2,#1
 3623 003e 3B73     	 strb r3,[r7,#12]
1246:../Libraries/XMCLib/src/xmc_usbd.c ****   state.powered = xmc_device.IsPowered;
 3624              	 .loc 1 1246 0
 3625 0040 074B     	 ldr r3,.L205
 3626 0042 93F8FE31 	 ldrb r3,[r3,#510]
 3627 0046 C3F38003 	 ubfx r3,r3,#2,#1
 3628 004a DAB2     	 uxtb r2,r3
 3629 004c 3B7B     	 ldrb r3,[r7,#12]
 3630 004e 62F30003 	 bfi r3,r2,#0,#1
 3631 0052 3B73     	 strb r3,[r7,#12]
1247:../Libraries/XMCLib/src/xmc_usbd.c ****   return state;
 3632              	 .loc 1 1247 0
 3633 0054 FB68     	 ldr r3,[r7,#12]
1248:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3634              	 .loc 1 1248 0
 3635 0056 1846     	 mov r0,r3
 3636 0058 1037     	 adds r7,r7,#16
 3637              	.LCFI160:
 3638              	 .cfi_def_cfa_offset 8
 3639 005a BD46     	 mov sp,r7
 3640              	.LCFI161:
 3641              	 .cfi_def_cfa_register 13
 3642              	 
 3643 005c 80BD     	 pop {r7,pc}
 3644              	.L206:
 3645 005e 00BF     	 .align 2
 3646              	.L205:
 3647 0060 00000000 	 .word xmc_device
 3648              	 .cfi_endproc
 3649              	.LFE206:
 3651              	 .section .text.XMC_USBD_EndpointReadStart,"ax",%progbits
 3652              	 .align 2
 3653              	 .global XMC_USBD_EndpointReadStart
 3654              	 .thumb
 3655              	 .thumb_func
 3657              	XMC_USBD_EndpointReadStart:
 3658              	.LFB207:
1249:../Libraries/XMCLib/src/xmc_usbd.c **** 
1250:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1251:../Libraries/XMCLib/src/xmc_usbd.c ****  * Prepares the endpoint to read next OUT packet
1252:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1253:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointReadStart(const uint8_t ep_addr, uint32_t size) 
1254:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3659              	 .loc 1 1254 0
 3660              	 .cfi_startproc
 3661              	 
 3662              	 
 3663 0000 80B5     	 push {r7,lr}
 3664              	.LCFI162:
 3665              	 .cfi_def_cfa_offset 8
 3666              	 .cfi_offset 7,-8
 3667              	 .cfi_offset 14,-4
 3668 0002 84B0     	 sub sp,sp,#16
 3669              	.LCFI163:
 3670              	 .cfi_def_cfa_offset 24
 3671 0004 00AF     	 add r7,sp,#0
 3672              	.LCFI164:
 3673              	 .cfi_def_cfa_register 7
 3674 0006 0346     	 mov r3,r0
 3675 0008 3960     	 str r1,[r7]
 3676 000a FB71     	 strb r3,[r7,#7]
1255:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK];
 3677              	 .loc 1 1255 0
 3678 000c FB79     	 ldrb r3,[r7,#7]
 3679 000e 03F00F03 	 and r3,r3,#15
 3680 0012 3422     	 movs r2,#52
 3681 0014 02FB03F3 	 mul r3,r2,r3
 3682 0018 1B4A     	 ldr r2,.L213
 3683 001a 1344     	 add r3,r3,r2
 3684 001c BB60     	 str r3,[r7,#8]
1256:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATUS_t result;
1257:../Libraries/XMCLib/src/xmc_usbd.c **** 	
1258:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->outInUse || !ep->isConfigured)
 3685              	 .loc 1 1258 0
 3686 001e BB68     	 ldr r3,[r7,#8]
 3687 0020 5B68     	 ldr r3,[r3,#4]
 3688 0022 1B09     	 lsrs r3,r3,#4
 3689 0024 03F00103 	 and r3,r3,#1
 3690 0028 DBB2     	 uxtb r3,r3
 3691 002a 002B     	 cmp r3,#0
 3692 002c 06D1     	 bne .L208
 3693              	 .loc 1 1258 0 is_stmt 0 discriminator 1
 3694 002e BB68     	 ldr r3,[r7,#8]
 3695 0030 1B79     	 ldrb r3,[r3,#4]
 3696 0032 03F00403 	 and r3,r3,#4
 3697 0036 DBB2     	 uxtb r3,r3
 3698 0038 002B     	 cmp r3,#0
 3699 003a 02D1     	 bne .L209
 3700              	.L208:
1259:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1260:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_ERROR;
 3701              	 .loc 1 1260 0 is_stmt 1
 3702 003c 0123     	 movs r3,#1
 3703 003e FB73     	 strb r3,[r7,#15]
 3704 0040 1CE0     	 b .L210
 3705              	.L209:
1261:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1262:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1263:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1264:../Libraries/XMCLib/src/xmc_usbd.c ****     /* short the length to buffer size if needed */
1265:../Libraries/XMCLib/src/xmc_usbd.c ****     if (size > ep->outBufferSize)
 3706              	 .loc 1 1265 0
 3707 0042 BB68     	 ldr r3,[r7,#8]
 3708 0044 5A69     	 ldr r2,[r3,#20]
 3709 0046 3B68     	 ldr r3,[r7]
 3710 0048 9A42     	 cmp r2,r3
 3711 004a 02D2     	 bcs .L211
1266:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1267:../Libraries/XMCLib/src/xmc_usbd.c ****       size = ep->outBufferSize;
 3712              	 .loc 1 1267 0
 3713 004c BB68     	 ldr r3,[r7,#8]
 3714 004e 5B69     	 ldr r3,[r3,#20]
 3715 0050 3B60     	 str r3,[r7]
 3716              	.L211:
1268:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1269:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set ep values */
1270:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferTotal = size;
 3717              	 .loc 1 1270 0
 3718 0052 BB68     	 ldr r3,[r7,#8]
 3719 0054 3A68     	 ldr r2,[r7]
 3720 0056 1A63     	 str r2,[r3,#48]
1271:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
 3721              	 .loc 1 1271 0
 3722 0058 BB68     	 ldr r3,[r7,#8]
 3723 005a 0022     	 movs r2,#0
 3724 005c DA62     	 str r2,[r3,#44]
1272:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = 0U;
 3725              	 .loc 1 1272 0
 3726 005e BB68     	 ldr r3,[r7,#8]
 3727 0060 0022     	 movs r2,#0
 3728 0062 9A62     	 str r2,[r3,#40]
1273:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer = ep->outBuffer;
 3729              	 .loc 1 1273 0
 3730 0064 BB68     	 ldr r3,[r7,#8]
 3731 0066 DA68     	 ldr r2,[r3,#12]
 3732 0068 BB68     	 ldr r3,[r7,#8]
 3733 006a 5A62     	 str r2,[r3,#36]
1274:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outBytesAvailable = 0U;
 3734              	 .loc 1 1274 0
 3735 006c BB68     	 ldr r3,[r7,#8]
 3736 006e 0022     	 movs r2,#0
 3737 0070 1A61     	 str r2,[r3,#16]
1275:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lStartReadXfer(ep);
 3738              	 .loc 1 1275 0
 3739 0072 B868     	 ldr r0,[r7,#8]
 3740 0074 FFF7FEFF 	 bl XMC_USBD_lStartReadXfer
1276:../Libraries/XMCLib/src/xmc_usbd.c ****     result= XMC_USBD_STATUS_OK;
 3741              	 .loc 1 1276 0
 3742 0078 0023     	 movs r3,#0
 3743 007a FB73     	 strb r3,[r7,#15]
 3744              	.L210:
1277:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1278:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 3745              	 .loc 1 1278 0
 3746 007c FB7B     	 ldrb r3,[r7,#15]
1279:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3747              	 .loc 1 1279 0
 3748 007e 1846     	 mov r0,r3
 3749 0080 1037     	 adds r7,r7,#16
 3750              	.LCFI165:
 3751              	 .cfi_def_cfa_offset 8
 3752 0082 BD46     	 mov sp,r7
 3753              	.LCFI166:
 3754              	 .cfi_def_cfa_register 13
 3755              	 
 3756 0084 80BD     	 pop {r7,pc}
 3757              	.L214:
 3758 0086 00BF     	 .align 2
 3759              	.L213:
 3760 0088 00000000 	 .word xmc_device
 3761              	 .cfi_endproc
 3762              	.LFE207:
 3764              	 .section .text.XMC_USBD_EndpointRead,"ax",%progbits
 3765              	 .align 2
 3766              	 .global XMC_USBD_EndpointRead
 3767              	 .thumb
 3768              	 .thumb_func
 3770              	XMC_USBD_EndpointRead:
 3771              	.LFB208:
1280:../Libraries/XMCLib/src/xmc_usbd.c **** 
1281:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1282:../Libraries/XMCLib/src/xmc_usbd.c ****  * Reads the number of bytes from the USB OUT endpoint
1283:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1284:../Libraries/XMCLib/src/xmc_usbd.c **** int32_t XMC_USBD_EndpointRead(const uint8_t ep_num,uint8_t * buffer,uint32_t length) 
1285:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3772              	 .loc 1 1285 0
 3773              	 .cfi_startproc
 3774              	 
 3775              	 
 3776 0000 80B5     	 push {r7,lr}
 3777              	.LCFI167:
 3778              	 .cfi_def_cfa_offset 8
 3779              	 .cfi_offset 7,-8
 3780              	 .cfi_offset 14,-4
 3781 0002 86B0     	 sub sp,sp,#24
 3782              	.LCFI168:
 3783              	 .cfi_def_cfa_offset 32
 3784 0004 00AF     	 add r7,sp,#0
 3785              	.LCFI169:
 3786              	 .cfi_def_cfa_register 7
 3787 0006 0346     	 mov r3,r0
 3788 0008 B960     	 str r1,[r7,#8]
 3789 000a 7A60     	 str r2,[r7,#4]
 3790 000c FB73     	 strb r3,[r7,#15]
1286:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_num];
 3791              	 .loc 1 1286 0
 3792 000e FB7B     	 ldrb r3,[r7,#15]
 3793 0010 3422     	 movs r2,#52
 3794 0012 02FB03F3 	 mul r3,r2,r3
 3795 0016 174A     	 ldr r2,.L220
 3796 0018 1344     	 add r3,r3,r2
 3797 001a 7B61     	 str r3,[r7,#20]
1287:../Libraries/XMCLib/src/xmc_usbd.c ****   if (length > ep->outBytesAvailable)
 3798              	 .loc 1 1287 0
 3799 001c 7B69     	 ldr r3,[r7,#20]
 3800 001e 1A69     	 ldr r2,[r3,#16]
 3801 0020 7B68     	 ldr r3,[r7,#4]
 3802 0022 9A42     	 cmp r2,r3
 3803 0024 02D2     	 bcs .L216
1288:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1289:../Libraries/XMCLib/src/xmc_usbd.c ****     length = ep->outBytesAvailable;
 3804              	 .loc 1 1289 0
 3805 0026 7B69     	 ldr r3,[r7,#20]
 3806 0028 1B69     	 ldr r3,[r3,#16]
 3807 002a 7B60     	 str r3,[r7,#4]
 3808              	.L216:
1290:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1291:../Libraries/XMCLib/src/xmc_usbd.c ****   memcpy(buffer,&ep->outBuffer[ep->outOffset],length);
 3809              	 .loc 1 1291 0
 3810 002c 7B69     	 ldr r3,[r7,#20]
 3811 002e DA68     	 ldr r2,[r3,#12]
 3812 0030 7B69     	 ldr r3,[r7,#20]
 3813 0032 9B69     	 ldr r3,[r3,#24]
 3814 0034 1344     	 add r3,r3,r2
 3815 0036 B868     	 ldr r0,[r7,#8]
 3816 0038 1946     	 mov r1,r3
 3817 003a 7A68     	 ldr r2,[r7,#4]
 3818 003c FFF7FEFF 	 bl memcpy
1292:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable -= length;
 3819              	 .loc 1 1292 0
 3820 0040 7B69     	 ldr r3,[r7,#20]
 3821 0042 1A69     	 ldr r2,[r3,#16]
 3822 0044 7B68     	 ldr r3,[r7,#4]
 3823 0046 D21A     	 subs r2,r2,r3
 3824 0048 7B69     	 ldr r3,[r7,#20]
 3825 004a 1A61     	 str r2,[r3,#16]
1293:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->outBytesAvailable)
 3826              	 .loc 1 1293 0
 3827 004c 7B69     	 ldr r3,[r7,#20]
 3828 004e 1B69     	 ldr r3,[r3,#16]
 3829 0050 002B     	 cmp r3,#0
 3830 0052 06D0     	 beq .L217
1294:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1295:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outOffset += length;
 3831              	 .loc 1 1295 0
 3832 0054 7B69     	 ldr r3,[r7,#20]
 3833 0056 9A69     	 ldr r2,[r3,#24]
 3834 0058 7B68     	 ldr r3,[r7,#4]
 3835 005a 1A44     	 add r2,r2,r3
 3836 005c 7B69     	 ldr r3,[r7,#20]
 3837 005e 9A61     	 str r2,[r3,#24]
 3838 0060 02E0     	 b .L218
 3839              	.L217:
1296:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1297:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1298:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1299:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outOffset = 0U;
 3840              	 .loc 1 1299 0
 3841 0062 7B69     	 ldr r3,[r7,#20]
 3842 0064 0022     	 movs r2,#0
 3843 0066 9A61     	 str r2,[r3,#24]
 3844              	.L218:
1300:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1301:../Libraries/XMCLib/src/xmc_usbd.c ****   return (int32_t)length;
 3845              	 .loc 1 1301 0
 3846 0068 7B68     	 ldr r3,[r7,#4]
1302:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3847              	 .loc 1 1302 0
 3848 006a 1846     	 mov r0,r3
 3849 006c 1837     	 adds r7,r7,#24
 3850              	.LCFI170:
 3851              	 .cfi_def_cfa_offset 8
 3852 006e BD46     	 mov sp,r7
 3853              	.LCFI171:
 3854              	 .cfi_def_cfa_register 13
 3855              	 
 3856 0070 80BD     	 pop {r7,pc}
 3857              	.L221:
 3858 0072 00BF     	 .align 2
 3859              	.L220:
 3860 0074 00000000 	 .word xmc_device
 3861              	 .cfi_endproc
 3862              	.LFE208:
 3864              	 .section .text.XMC_USBD_EndpointWrite,"ax",%progbits
 3865              	 .align 2
 3866              	 .global XMC_USBD_EndpointWrite
 3867              	 .thumb
 3868              	 .thumb_func
 3870              	XMC_USBD_EndpointWrite:
 3871              	.LFB209:
1303:../Libraries/XMCLib/src/xmc_usbd.c **** 
1304:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1305:../Libraries/XMCLib/src/xmc_usbd.c ****  * Writes number of bytes in to the USB IN endpoint.
1306:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1307:../Libraries/XMCLib/src/xmc_usbd.c **** int32_t XMC_USBD_EndpointWrite(const uint8_t ep_num,const uint8_t * buffer,uint32_t length) 
1308:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3872              	 .loc 1 1308 0
 3873              	 .cfi_startproc
 3874              	 
 3875              	 
 3876 0000 80B5     	 push {r7,lr}
 3877              	.LCFI172:
 3878              	 .cfi_def_cfa_offset 8
 3879              	 .cfi_offset 7,-8
 3880              	 .cfi_offset 14,-4
 3881 0002 86B0     	 sub sp,sp,#24
 3882              	.LCFI173:
 3883              	 .cfi_def_cfa_offset 32
 3884 0004 00AF     	 add r7,sp,#0
 3885              	.LCFI174:
 3886              	 .cfi_def_cfa_register 7
 3887 0006 0346     	 mov r3,r0
 3888 0008 B960     	 str r1,[r7,#8]
 3889 000a 7A60     	 str r2,[r7,#4]
 3890 000c FB73     	 strb r3,[r7,#15]
1309:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t * ep = &xmc_device.ep[ep_num & (uint8_t)XMC_USBD_EP_NUM_MASK];
 3891              	 .loc 1 1309 0
 3892 000e FB7B     	 ldrb r3,[r7,#15]
 3893 0010 03F00F03 	 and r3,r3,#15
 3894 0014 3422     	 movs r2,#52
 3895 0016 02FB03F3 	 mul r3,r2,r3
 3896 001a 224A     	 ldr r2,.L228
 3897 001c 1344     	 add r3,r3,r2
 3898 001e 3B61     	 str r3,[r7,#16]
1310:../Libraries/XMCLib/src/xmc_usbd.c ****   int32_t result;
1311:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->isConfigured)
 3899              	 .loc 1 1311 0
 3900 0020 3B69     	 ldr r3,[r7,#16]
 3901 0022 1B79     	 ldrb r3,[r3,#4]
 3902 0024 03F00403 	 and r3,r3,#4
 3903 0028 DBB2     	 uxtb r3,r3
 3904 002a 002B     	 cmp r3,#0
 3905 002c 02D1     	 bne .L223
1312:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1313:../Libraries/XMCLib/src/xmc_usbd.c ****     result = (int32_t)XMC_USBD_STATUS_ERROR;
 3906              	 .loc 1 1313 0
 3907 002e 0123     	 movs r3,#1
 3908 0030 7B61     	 str r3,[r7,#20]
 3909 0032 31E0     	 b .L224
 3910              	.L223:
1314:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1315:../Libraries/XMCLib/src/xmc_usbd.c ****   else if (ep->inInUse == 1U)
 3911              	 .loc 1 1315 0
 3912 0034 3B69     	 ldr r3,[r7,#16]
 3913 0036 5B68     	 ldr r3,[r3,#4]
 3914 0038 DB08     	 lsrs r3,r3,#3
 3915 003a 03F00103 	 and r3,r3,#1
 3916 003e DBB2     	 uxtb r3,r3
 3917 0040 012B     	 cmp r3,#1
 3918 0042 02D1     	 bne .L225
1316:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1317:../Libraries/XMCLib/src/xmc_usbd.c ****     result=(int32_t)0;
 3919              	 .loc 1 1317 0
 3920 0044 0023     	 movs r3,#0
 3921 0046 7B61     	 str r3,[r7,#20]
 3922 0048 26E0     	 b .L224
 3923              	.L225:
1318:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1319:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1320:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1321:../Libraries/XMCLib/src/xmc_usbd.c ****     if (length > ep->inBufferSize)
 3924              	 .loc 1 1321 0
 3925 004a 3B69     	 ldr r3,[r7,#16]
 3926 004c 1A6A     	 ldr r2,[r3,#32]
 3927 004e 7B68     	 ldr r3,[r7,#4]
 3928 0050 9A42     	 cmp r2,r3
 3929 0052 02D2     	 bcs .L226
1322:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1323:../Libraries/XMCLib/src/xmc_usbd.c ****       length = ep->inBufferSize;
 3930              	 .loc 1 1323 0
 3931 0054 3B69     	 ldr r3,[r7,#16]
 3932 0056 1B6A     	 ldr r3,[r3,#32]
 3933 0058 7B60     	 str r3,[r7,#4]
 3934              	.L226:
1324:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1325:../Libraries/XMCLib/src/xmc_usbd.c ****     /* copy data into input buffer for DMA and FIFO mode */
1326:../Libraries/XMCLib/src/xmc_usbd.c **** 		memcpy(ep->inBuffer,(const void *)buffer,length);
 3935              	 .loc 1 1326 0
 3936 005a 3B69     	 ldr r3,[r7,#16]
 3937 005c DB69     	 ldr r3,[r3,#28]
 3938 005e 1846     	 mov r0,r3
 3939 0060 B968     	 ldr r1,[r7,#8]
 3940 0062 7A68     	 ldr r2,[r7,#4]
 3941 0064 FFF7FEFF 	 bl memcpy
1327:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->xferBuffer = ep->inBuffer;
 3942              	 .loc 1 1327 0
 3943 0068 3B69     	 ldr r3,[r7,#16]
 3944 006a DA69     	 ldr r2,[r3,#28]
 3945 006c 3B69     	 ldr r3,[r7,#16]
 3946 006e 5A62     	 str r2,[r3,#36]
1328:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferTotal = length;
 3947              	 .loc 1 1328 0
 3948 0070 3B69     	 ldr r3,[r7,#16]
 3949 0072 7A68     	 ldr r2,[r7,#4]
 3950 0074 1A63     	 str r2,[r3,#48]
1329:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set transfer values */
1330:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = 0U;
 3951              	 .loc 1 1330 0
 3952 0076 3B69     	 ldr r3,[r7,#16]
 3953 0078 0022     	 movs r2,#0
 3954 007a 9A62     	 str r2,[r3,#40]
1331:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
 3955              	 .loc 1 1331 0
 3956 007c 3B69     	 ldr r3,[r7,#16]
 3957 007e 0022     	 movs r2,#0
 3958 0080 DA62     	 str r2,[r3,#44]
1332:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 1U;
 3959              	 .loc 1 1332 0
 3960 0082 3B69     	 ldr r3,[r7,#16]
 3961 0084 5A68     	 ldr r2,[r3,#4]
 3962 0086 42F00802 	 orr r2,r2,#8
 3963 008a 5A60     	 str r2,[r3,#4]
1333:../Libraries/XMCLib/src/xmc_usbd.c ****     /* start the transfer */
1334:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lStartWriteXfer(ep);
 3964              	 .loc 1 1334 0
 3965 008c 3869     	 ldr r0,[r7,#16]
 3966 008e FFF7FEFF 	 bl XMC_USBD_lStartWriteXfer
1335:../Libraries/XMCLib/src/xmc_usbd.c ****     result=(int32_t)ep->xferTotal;
 3967              	 .loc 1 1335 0
 3968 0092 3B69     	 ldr r3,[r7,#16]
 3969 0094 1B6B     	 ldr r3,[r3,#48]
 3970 0096 7B61     	 str r3,[r7,#20]
 3971              	.L224:
1336:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1337:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 3972              	 .loc 1 1337 0
 3973 0098 7B69     	 ldr r3,[r7,#20]
1338:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3974              	 .loc 1 1338 0
 3975 009a 1846     	 mov r0,r3
 3976 009c 1837     	 adds r7,r7,#24
 3977              	.LCFI175:
 3978              	 .cfi_def_cfa_offset 8
 3979 009e BD46     	 mov sp,r7
 3980              	.LCFI176:
 3981              	 .cfi_def_cfa_register 13
 3982              	 
 3983 00a0 80BD     	 pop {r7,pc}
 3984              	.L229:
 3985 00a2 00BF     	 .align 2
 3986              	.L228:
 3987 00a4 00000000 	 .word xmc_device
 3988              	 .cfi_endproc
 3989              	.LFE209:
 3991              	 .section .text.XMC_USBD_DeviceSetAddress,"ax",%progbits
 3992              	 .align 2
 3993              	 .global XMC_USBD_DeviceSetAddress
 3994              	 .thumb
 3995              	 .thumb_func
 3997              	XMC_USBD_DeviceSetAddress:
 3998              	.LFB210:
1339:../Libraries/XMCLib/src/xmc_usbd.c **** 
1340:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1341:../Libraries/XMCLib/src/xmc_usbd.c ****  * Sets the USB device address.
1342:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1343:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceSetAddress(const uint8_t address,const XMC_USBD_SET_ADDRESS_STAGE_
1344:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3999              	 .loc 1 1344 0
 4000              	 .cfi_startproc
 4001              	 
 4002              	 
 4003              	 
 4004 0000 80B4     	 push {r7}
 4005              	.LCFI177:
 4006              	 .cfi_def_cfa_offset 4
 4007              	 .cfi_offset 7,-4
 4008 0002 85B0     	 sub sp,sp,#20
 4009              	.LCFI178:
 4010              	 .cfi_def_cfa_offset 24
 4011 0004 00AF     	 add r7,sp,#0
 4012              	.LCFI179:
 4013              	 .cfi_def_cfa_register 7
 4014 0006 0346     	 mov r3,r0
 4015 0008 0A46     	 mov r2,r1
 4016 000a FB71     	 strb r3,[r7,#7]
 4017 000c 1346     	 mov r3,r2
 4018 000e BB71     	 strb r3,[r7,#6]
1345:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t data;
1346:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.device_register->dcfg;
 4019              	 .loc 1 1346 0
 4020 0010 0D4B     	 ldr r3,.L233
 4021 0012 D3F8A431 	 ldr r3,[r3,#420]
 4022 0016 1B68     	 ldr r3,[r3]
 4023 0018 FB60     	 str r3,[r7,#12]
1347:../Libraries/XMCLib/src/xmc_usbd.c ****   if (stage == XMC_USBD_SET_ADDRESS_STAGE_SETUP)
 4024              	 .loc 1 1347 0
 4025 001a BB79     	 ldrb r3,[r7,#6]
 4026 001c 002B     	 cmp r3,#0
 4027 001e 0CD1     	 bne .L231
1348:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1349:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.devaddr = address;
 4028              	 .loc 1 1349 0
 4029 0020 FB79     	 ldrb r3,[r7,#7]
 4030 0022 03F07F03 	 and r3,r3,#127
 4031 0026 DAB2     	 uxtb r2,r3
 4032 0028 BB89     	 ldrh r3,[r7,#12]
 4033 002a 62F30A13 	 bfi r3,r2,#4,#7
 4034 002e BB81     	 strh r3,[r7,#12]
1350:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->dcfg = data.d32;
 4035              	 .loc 1 1350 0
 4036 0030 054B     	 ldr r3,.L233
 4037 0032 D3F8A431 	 ldr r3,[r3,#420]
 4038 0036 FA68     	 ldr r2,[r7,#12]
 4039 0038 1A60     	 str r2,[r3]
 4040              	.L231:
1351:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1352:../Libraries/XMCLib/src/xmc_usbd.c **** 	return XMC_USBD_STATUS_OK;
 4041              	 .loc 1 1352 0
 4042 003a 0023     	 movs r3,#0
1353:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4043              	 .loc 1 1353 0
 4044 003c 1846     	 mov r0,r3
 4045 003e 1437     	 adds r7,r7,#20
 4046              	.LCFI180:
 4047              	 .cfi_def_cfa_offset 4
 4048 0040 BD46     	 mov sp,r7
 4049              	.LCFI181:
 4050              	 .cfi_def_cfa_register 13
 4051              	 
 4052 0042 5DF8047B 	 ldr r7,[sp],#4
 4053              	.LCFI182:
 4054              	 .cfi_restore 7
 4055              	 .cfi_def_cfa_offset 0
 4056 0046 7047     	 bx lr
 4057              	.L234:
 4058              	 .align 2
 4059              	.L233:
 4060 0048 00000000 	 .word xmc_device
 4061              	 .cfi_endproc
 4062              	.LFE210:
 4064              	 .section .text.XMC_USBD_EndpointStall,"ax",%progbits
 4065              	 .align 2
 4066              	 .global XMC_USBD_EndpointStall
 4067              	 .thumb
 4068              	 .thumb_func
 4070              	XMC_USBD_EndpointStall:
 4071              	.LFB211:
1354:../Libraries/XMCLib/src/xmc_usbd.c **** 
1355:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1356:../Libraries/XMCLib/src/xmc_usbd.c ****  * Set/clear stall on the selected endpoint.
1357:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1358:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointStall(const uint8_t ep_addr, const bool stall) 
1359:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4072              	 .loc 1 1359 0
 4073              	 .cfi_startproc
 4074              	 
 4075              	 
 4076              	 
 4077 0000 80B4     	 push {r7}
 4078              	.LCFI183:
 4079              	 .cfi_def_cfa_offset 4
 4080              	 .cfi_offset 7,-4
 4081 0002 85B0     	 sub sp,sp,#20
 4082              	.LCFI184:
 4083              	 .cfi_def_cfa_offset 24
 4084 0004 00AF     	 add r7,sp,#0
 4085              	.LCFI185:
 4086              	 .cfi_def_cfa_register 7
 4087 0006 0346     	 mov r3,r0
 4088 0008 0A46     	 mov r2,r1
 4089 000a FB71     	 strb r3,[r7,#7]
 4090 000c 1346     	 mov r3,r2
 4091 000e BB71     	 strb r3,[r7,#6]
1360:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
1361:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[(ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK)];
 4092              	 .loc 1 1361 0
 4093 0010 FB79     	 ldrb r3,[r7,#7]
 4094 0012 03F00F03 	 and r3,r3,#15
 4095 0016 3422     	 movs r2,#52
 4096 0018 02FB03F3 	 mul r3,r2,r3
 4097 001c 4A4A     	 ldr r2,.L243
 4098 001e 1344     	 add r3,r3,r2
 4099 0020 FB60     	 str r3,[r7,#12]
1362:../Libraries/XMCLib/src/xmc_usbd.c ****   if (stall)
 4100              	 .loc 1 1362 0
 4101 0022 BB79     	 ldrb r3,[r7,#6]
 4102 0024 002B     	 cmp r3,#0
 4103 0026 40D0     	 beq .L236
1363:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1364:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_addr & (uint8_t)XMC_USBD_ENDPOINT_DIRECTION_MASK)
 4104              	 .loc 1 1364 0
 4105 0028 FB79     	 ldrb r3,[r7,#7]
 4106 002a 5BB2     	 sxtb r3,r3
 4107 002c 002B     	 cmp r3,#0
 4108 002e 1ADA     	 bge .L237
1365:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1366:../Libraries/XMCLib/src/xmc_usbd.c ****       /*set stall bit */
1367:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 4109              	 .loc 1 1367 0
 4110 0030 FB68     	 ldr r3,[r7,#12]
 4111 0032 1B78     	 ldrb r3,[r3]
 4112 0034 C3F30303 	 ubfx r3,r3,#0,#4
 4113 0038 DBB2     	 uxtb r3,r3
 4114 003a 434A     	 ldr r2,.L243
 4115 003c 6A33     	 adds r3,r3,#106
 4116 003e 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4117 0042 1B68     	 ldr r3,[r3]
 4118 0044 BB60     	 str r3,[r7,#8]
1368:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
 4119              	 .loc 1 1368 0
 4120 0046 BB7A     	 ldrb r3,[r7,#10]
 4121 0048 43F02003 	 orr r3,r3,#32
 4122 004c BB72     	 strb r3,[r7,#10]
1369:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 4123              	 .loc 1 1369 0
 4124 004e FB68     	 ldr r3,[r7,#12]
 4125 0050 1B78     	 ldrb r3,[r3]
 4126 0052 C3F30303 	 ubfx r3,r3,#0,#4
 4127 0056 DBB2     	 uxtb r3,r3
 4128 0058 3B4A     	 ldr r2,.L243
 4129 005a 6A33     	 adds r3,r3,#106
 4130 005c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4131 0060 BA68     	 ldr r2,[r7,#8]
 4132 0062 1A60     	 str r2,[r3]
 4133 0064 1BE0     	 b .L238
 4134              	.L237:
1370:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1371:../Libraries/XMCLib/src/xmc_usbd.c ****     else
1372:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1373:../Libraries/XMCLib/src/xmc_usbd.c ****       /*set stall bit */
1374:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 4135              	 .loc 1 1374 0
 4136 0066 FB68     	 ldr r3,[r7,#12]
 4137 0068 1B78     	 ldrb r3,[r3]
 4138 006a C3F30303 	 ubfx r3,r3,#0,#4
 4139 006e DBB2     	 uxtb r3,r3
 4140 0070 354A     	 ldr r2,.L243
 4141 0072 7033     	 adds r3,r3,#112
 4142 0074 9B00     	 lsls r3,r3,#2
 4143 0076 1344     	 add r3,r3,r2
 4144 0078 5B68     	 ldr r3,[r3,#4]
 4145 007a 1B68     	 ldr r3,[r3]
 4146 007c BB60     	 str r3,[r7,#8]
1375:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
 4147              	 .loc 1 1375 0
 4148 007e BB7A     	 ldrb r3,[r7,#10]
 4149 0080 43F02003 	 orr r3,r3,#32
 4150 0084 BB72     	 strb r3,[r7,#10]
1376:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 4151              	 .loc 1 1376 0
 4152 0086 FB68     	 ldr r3,[r7,#12]
 4153 0088 1B78     	 ldrb r3,[r3]
 4154 008a C3F30303 	 ubfx r3,r3,#0,#4
 4155 008e DBB2     	 uxtb r3,r3
 4156 0090 2D4A     	 ldr r2,.L243
 4157 0092 7033     	 adds r3,r3,#112
 4158 0094 9B00     	 lsls r3,r3,#2
 4159 0096 1344     	 add r3,r3,r2
 4160 0098 5B68     	 ldr r3,[r3,#4]
 4161 009a BA68     	 ldr r2,[r7,#8]
 4162 009c 1A60     	 str r2,[r3]
 4163              	.L238:
1377:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1378:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isStalled = 1U;
 4164              	 .loc 1 1378 0
 4165 009e FA68     	 ldr r2,[r7,#12]
 4166 00a0 1379     	 ldrb r3,[r2,#4]
 4167 00a2 43F02003 	 orr r3,r3,#32
 4168 00a6 1371     	 strb r3,[r2,#4]
 4169 00a8 47E0     	 b .L239
 4170              	.L236:
1379:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1380:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1381:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1382:../Libraries/XMCLib/src/xmc_usbd.c ****     /* just clear stall bit */
1383:../Libraries/XMCLib/src/xmc_usbd.c **** 		if (ep_addr & (uint8_t)XMC_USBD_ENDPOINT_DIRECTION_MASK)
 4171              	 .loc 1 1383 0
 4172 00aa FB79     	 ldrb r3,[r7,#7]
 4173 00ac 5BB2     	 sxtb r3,r3
 4174 00ae 002B     	 cmp r3,#0
 4175 00b0 1EDA     	 bge .L240
1384:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1385:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 4176              	 .loc 1 1385 0
 4177 00b2 FB68     	 ldr r3,[r7,#12]
 4178 00b4 1B78     	 ldrb r3,[r3]
 4179 00b6 C3F30303 	 ubfx r3,r3,#0,#4
 4180 00ba DBB2     	 uxtb r3,r3
 4181 00bc 224A     	 ldr r2,.L243
 4182 00be 6A33     	 adds r3,r3,#106
 4183 00c0 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4184 00c4 1B68     	 ldr r3,[r3]
 4185 00c6 BB60     	 str r3,[r7,#8]
1386:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.stall = 0U;
 4186              	 .loc 1 1386 0
 4187 00c8 BB7A     	 ldrb r3,[r7,#10]
 4188 00ca 6FF34513 	 bfc r3,#5,#1
 4189 00ce BB72     	 strb r3,[r7,#10]
1387:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.setd0pid = 1U; /* reset pid to 0 */
 4190              	 .loc 1 1387 0
 4191 00d0 FB7A     	 ldrb r3,[r7,#11]
 4192 00d2 43F01003 	 orr r3,r3,#16
 4193 00d6 FB72     	 strb r3,[r7,#11]
1388:../Libraries/XMCLib/src/xmc_usbd.c **** 			xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 4194              	 .loc 1 1388 0
 4195 00d8 FB68     	 ldr r3,[r7,#12]
 4196 00da 1B78     	 ldrb r3,[r3]
 4197 00dc C3F30303 	 ubfx r3,r3,#0,#4
 4198 00e0 DBB2     	 uxtb r3,r3
 4199 00e2 194A     	 ldr r2,.L243
 4200 00e4 6A33     	 adds r3,r3,#106
 4201 00e6 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4202 00ea BA68     	 ldr r2,[r7,#8]
 4203 00ec 1A60     	 str r2,[r3]
 4204 00ee 1FE0     	 b .L241
 4205              	.L240:
1389:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1390:../Libraries/XMCLib/src/xmc_usbd.c **** 		else
1391:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1392:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 4206              	 .loc 1 1392 0
 4207 00f0 FB68     	 ldr r3,[r7,#12]
 4208 00f2 1B78     	 ldrb r3,[r3]
 4209 00f4 C3F30303 	 ubfx r3,r3,#0,#4
 4210 00f8 DBB2     	 uxtb r3,r3
 4211 00fa 134A     	 ldr r2,.L243
 4212 00fc 7033     	 adds r3,r3,#112
 4213 00fe 9B00     	 lsls r3,r3,#2
 4214 0100 1344     	 add r3,r3,r2
 4215 0102 5B68     	 ldr r3,[r3,#4]
 4216 0104 1B68     	 ldr r3,[r3]
 4217 0106 BB60     	 str r3,[r7,#8]
1393:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.stall = 0U;
 4218              	 .loc 1 1393 0
 4219 0108 BB7A     	 ldrb r3,[r7,#10]
 4220 010a 6FF34513 	 bfc r3,#5,#1
 4221 010e BB72     	 strb r3,[r7,#10]
1394:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.setd0pid = 1U; /* reset pid to 0 */
 4222              	 .loc 1 1394 0
 4223 0110 FB7A     	 ldrb r3,[r7,#11]
 4224 0112 43F01003 	 orr r3,r3,#16
 4225 0116 FB72     	 strb r3,[r7,#11]
1395:../Libraries/XMCLib/src/xmc_usbd.c **** 			xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 4226              	 .loc 1 1395 0
 4227 0118 FB68     	 ldr r3,[r7,#12]
 4228 011a 1B78     	 ldrb r3,[r3]
 4229 011c C3F30303 	 ubfx r3,r3,#0,#4
 4230 0120 DBB2     	 uxtb r3,r3
 4231 0122 094A     	 ldr r2,.L243
 4232 0124 7033     	 adds r3,r3,#112
 4233 0126 9B00     	 lsls r3,r3,#2
 4234 0128 1344     	 add r3,r3,r2
 4235 012a 5B68     	 ldr r3,[r3,#4]
 4236 012c BA68     	 ldr r2,[r7,#8]
 4237 012e 1A60     	 str r2,[r3]
 4238              	.L241:
1396:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1397:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->isStalled = 0U;
 4239              	 .loc 1 1397 0
 4240 0130 FA68     	 ldr r2,[r7,#12]
 4241 0132 1379     	 ldrb r3,[r2,#4]
 4242 0134 6FF34513 	 bfc r3,#5,#1
 4243 0138 1371     	 strb r3,[r2,#4]
 4244              	.L239:
1398:../Libraries/XMCLib/src/xmc_usbd.c **** 	}
1399:../Libraries/XMCLib/src/xmc_usbd.c **** 	return XMC_USBD_STATUS_OK;
 4245              	 .loc 1 1399 0
 4246 013a 0023     	 movs r3,#0
1400:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4247              	 .loc 1 1400 0
 4248 013c 1846     	 mov r0,r3
 4249 013e 1437     	 adds r7,r7,#20
 4250              	.LCFI186:
 4251              	 .cfi_def_cfa_offset 4
 4252 0140 BD46     	 mov sp,r7
 4253              	.LCFI187:
 4254              	 .cfi_def_cfa_register 13
 4255              	 
 4256 0142 5DF8047B 	 ldr r7,[sp],#4
 4257              	.LCFI188:
 4258              	 .cfi_restore 7
 4259              	 .cfi_def_cfa_offset 0
 4260 0146 7047     	 bx lr
 4261              	.L244:
 4262              	 .align 2
 4263              	.L243:
 4264 0148 00000000 	 .word xmc_device
 4265              	 .cfi_endproc
 4266              	.LFE211:
 4268              	 .section .text.XMC_USBD_EndpointAbort,"ax",%progbits
 4269              	 .align 2
 4270              	 .global XMC_USBD_EndpointAbort
 4271              	 .thumb
 4272              	 .thumb_func
 4274              	XMC_USBD_EndpointAbort:
 4275              	.LFB212:
1401:../Libraries/XMCLib/src/xmc_usbd.c **** 
1402:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1403:../Libraries/XMCLib/src/xmc_usbd.c ****  * Aborts the data transfer on the selected endpoint
1404:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1405:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointAbort(const uint8_t ep_addr) {
 4276              	 .loc 1 1405 0
 4277              	 .cfi_startproc
 4278              	 
 4279              	 
 4280              	 
 4281 0000 80B4     	 push {r7}
 4282              	.LCFI189:
 4283              	 .cfi_def_cfa_offset 4
 4284              	 .cfi_offset 7,-4
 4285 0002 85B0     	 sub sp,sp,#20
 4286              	.LCFI190:
 4287              	 .cfi_def_cfa_offset 24
 4288 0004 00AF     	 add r7,sp,#0
 4289              	.LCFI191:
 4290              	 .cfi_def_cfa_register 7
 4291 0006 0346     	 mov r3,r0
 4292 0008 FB71     	 strb r3,[r7,#7]
1406:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 4293              	 .loc 1 1406 0
 4294 000a FB79     	 ldrb r3,[r7,#7]
 4295 000c 03F00F03 	 and r3,r3,#15
 4296 0010 3422     	 movs r2,#52
 4297 0012 02FB03F3 	 mul r3,r2,r3
 4298 0016 1B4A     	 ldr r2,.L249
 4299 0018 1344     	 add r3,r3,r2
 4300 001a FB60     	 str r3,[r7,#12]
1407:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address_st.direction)
 4301              	 .loc 1 1407 0
 4302 001c FB68     	 ldr r3,[r7,#12]
 4303 001e 1B78     	 ldrb r3,[r3]
 4304 0020 23F07F03 	 bic r3,r3,#127
 4305 0024 DBB2     	 uxtb r3,r3
 4306 0026 002B     	 cmp r3,#0
 4307 0028 04D0     	 beq .L246
1408:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1409:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 0U;
 4308              	 .loc 1 1409 0
 4309 002a FB68     	 ldr r3,[r7,#12]
 4310 002c 5A68     	 ldr r2,[r3,#4]
 4311 002e 22F00802 	 bic r2,r2,#8
 4312 0032 5A60     	 str r2,[r3,#4]
 4313              	.L246:
1410:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1411:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->address_u.address_st.direction)
 4314              	 .loc 1 1411 0
 4315 0034 FB68     	 ldr r3,[r7,#12]
 4316 0036 1B78     	 ldrb r3,[r3]
 4317 0038 23F07F03 	 bic r3,r3,#127
 4318 003c DBB2     	 uxtb r3,r3
 4319 003e 002B     	 cmp r3,#0
 4320 0040 04D1     	 bne .L247
1412:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1413:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outInUse = 0U;
 4321              	 .loc 1 1413 0
 4322 0042 FB68     	 ldr r3,[r7,#12]
 4323 0044 5A68     	 ldr r2,[r3,#4]
 4324 0046 22F01002 	 bic r2,r2,#16
 4325 004a 5A60     	 str r2,[r3,#4]
 4326              	.L247:
1414:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1415:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->isStalled = 0U;
 4327              	 .loc 1 1415 0
 4328 004c FA68     	 ldr r2,[r7,#12]
 4329 004e 1379     	 ldrb r3,[r2,#4]
 4330 0050 6FF34513 	 bfc r3,#5,#1
 4331 0054 1371     	 strb r3,[r2,#4]
1416:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable = 0U;
 4332              	 .loc 1 1416 0
 4333 0056 FB68     	 ldr r3,[r7,#12]
 4334 0058 0022     	 movs r2,#0
 4335 005a 1A61     	 str r2,[r3,#16]
1417:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outOffset = 0U;
 4336              	 .loc 1 1417 0
 4337 005c FB68     	 ldr r3,[r7,#12]
 4338 005e 0022     	 movs r2,#0
 4339 0060 9A61     	 str r2,[r3,#24]
1418:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferLength = 0U;
 4340              	 .loc 1 1418 0
 4341 0062 FB68     	 ldr r3,[r7,#12]
 4342 0064 0022     	 movs r2,#0
 4343 0066 9A62     	 str r2,[r3,#40]
1419:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferCount = 0U;
 4344              	 .loc 1 1419 0
 4345 0068 FB68     	 ldr r3,[r7,#12]
 4346 006a 0022     	 movs r2,#0
 4347 006c DA62     	 str r2,[r3,#44]
1420:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferTotal = 0U;
 4348              	 .loc 1 1420 0
 4349 006e FB68     	 ldr r3,[r7,#12]
 4350 0070 0022     	 movs r2,#0
 4351 0072 1A63     	 str r2,[r3,#48]
1421:../Libraries/XMCLib/src/xmc_usbd.c **** 
1422:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 4352              	 .loc 1 1422 0
 4353 0074 0023     	 movs r3,#0
1423:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4354              	 .loc 1 1423 0
 4355 0076 1846     	 mov r0,r3
 4356 0078 1437     	 adds r7,r7,#20
 4357              	.LCFI192:
 4358              	 .cfi_def_cfa_offset 4
 4359 007a BD46     	 mov sp,r7
 4360              	.LCFI193:
 4361              	 .cfi_def_cfa_register 13
 4362              	 
 4363 007c 5DF8047B 	 ldr r7,[sp],#4
 4364              	.LCFI194:
 4365              	 .cfi_restore 7
 4366              	 .cfi_def_cfa_offset 0
 4367 0080 7047     	 bx lr
 4368              	.L250:
 4369 0082 00BF     	 .align 2
 4370              	.L249:
 4371 0084 00000000 	 .word xmc_device
 4372              	 .cfi_endproc
 4373              	.LFE212:
 4375              	 .section .text.XMC_USBD_EndpointConfigure,"ax",%progbits
 4376              	 .align 2
 4377              	 .global XMC_USBD_EndpointConfigure
 4378              	 .thumb
 4379              	 .thumb_func
 4381              	XMC_USBD_EndpointConfigure:
 4382              	.LFB213:
1424:../Libraries/XMCLib/src/xmc_usbd.c **** 
1425:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1426:../Libraries/XMCLib/src/xmc_usbd.c ****  * Configures the given endpoint
1427:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1428:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointConfigure(const uint8_t ep_addr,
1429:../Libraries/XMCLib/src/xmc_usbd.c **** 		                                     const XMC_USBD_ENDPOINT_TYPE_t ep_type,
1430:../Libraries/XMCLib/src/xmc_usbd.c **** 		                                     const uint16_t ep_max_packet_size) 
1431:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4383              	 .loc 1 1431 0
 4384              	 .cfi_startproc
 4385              	 
 4386              	 
 4387 0000 80B5     	 push {r7,lr}
 4388              	.LCFI195:
 4389              	 .cfi_def_cfa_offset 8
 4390              	 .cfi_offset 7,-8
 4391              	 .cfi_offset 14,-4
 4392 0002 86B0     	 sub sp,sp,#24
 4393              	.LCFI196:
 4394              	 .cfi_def_cfa_offset 32
 4395 0004 00AF     	 add r7,sp,#0
 4396              	.LCFI197:
 4397              	 .cfi_def_cfa_register 7
 4398 0006 0346     	 mov r3,r0
 4399 0008 FB71     	 strb r3,[r7,#7]
 4400 000a 0B46     	 mov r3,r1
 4401 000c BB71     	 strb r3,[r7,#6]
 4402 000e 1346     	 mov r3,r2
 4403 0010 BB80     	 strh r3,[r7,#4]
1432:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
1433:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
1434:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;  
 4404              	 .loc 1 1434 0
 4405 0012 984B     	 ldr r3,.L277
 4406 0014 D3F8A431 	 ldr r3,[r3,#420]
 4407 0018 DB69     	 ldr r3,[r3,#28]
 4408 001a 3B61     	 str r3,[r7,#16]
1435:../Libraries/XMCLib/src/xmc_usbd.c ****   ep =&xmc_device.ep[ep_addr & (uint32_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 4409              	 .loc 1 1435 0
 4410 001c FB79     	 ldrb r3,[r7,#7]
 4411 001e 03F00F03 	 and r3,r3,#15
 4412 0022 3422     	 movs r2,#52
 4413 0024 02FB03F3 	 mul r3,r2,r3
 4414 0028 924A     	 ldr r2,.L277
 4415 002a 1344     	 add r3,r3,r2
 4416 002c 7B61     	 str r3,[r7,#20]
1436:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void*)ep,0x0U,sizeof(XMC_USBD_EP_t)); /* clear endpoint structure */
 4417              	 .loc 1 1436 0
 4418 002e 7869     	 ldr r0,[r7,#20]
 4419 0030 0021     	 movs r1,#0
 4420 0032 3422     	 movs r2,#52
 4421 0034 FFF7FEFF 	 bl memset
1437:../Libraries/XMCLib/src/xmc_usbd.c ****   /* do ep configuration */
1438:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->address_u.address = ep_addr;
 4422              	 .loc 1 1438 0
 4423 0038 7B69     	 ldr r3,[r7,#20]
 4424 003a FA79     	 ldrb r2,[r7,#7]
 4425 003c 1A70     	 strb r2,[r3]
1439:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->isConfigured = 1U;
 4426              	 .loc 1 1439 0
 4427 003e 7A69     	 ldr r2,[r7,#20]
 4428 0040 1379     	 ldrb r3,[r2,#4]
 4429 0042 43F00403 	 orr r3,r3,#4
 4430 0046 1371     	 strb r3,[r2,#4]
1440:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->maxPacketSize = (uint8_t)ep_max_packet_size;
 4431              	 .loc 1 1440 0
 4432 0048 BB88     	 ldrh r3,[r7,#4]
 4433 004a DBB2     	 uxtb r3,r3
 4434 004c 03F07F03 	 and r3,r3,#127
 4435 0050 D9B2     	 uxtb r1,r3
 4436 0052 7A69     	 ldr r2,[r7,#20]
 4437 0054 5368     	 ldr r3,[r2,#4]
 4438 0056 61F3D123 	 bfi r3,r1,#11,#7
 4439 005a 5360     	 str r3,[r2,#4]
1441:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address != 0U)
 4440              	 .loc 1 1441 0
 4441 005c 7B69     	 ldr r3,[r7,#20]
 4442 005e 1B78     	 ldrb r3,[r3]
 4443 0060 002B     	 cmp r3,#0
 4444 0062 07D0     	 beq .L252
1442:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1443:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->maxTransferSize = (uint32_t)XMC_USBD_MAX_TRANSFER_SIZE;
 4445              	 .loc 1 1443 0
 4446 0064 7A69     	 ldr r2,[r7,#20]
 4447 0066 9368     	 ldr r3,[r2,#8]
 4448 0068 4FF6C071 	 movw r1,#65472
 4449 006c 61F31203 	 bfi r3,r1,#0,#19
 4450 0070 9360     	 str r3,[r2,#8]
 4451 0072 05E0     	 b .L253
 4452              	.L252:
1444:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1445:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1446:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1447:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->maxTransferSize = (uint32_t)XMC_USBD_MAX_TRANSFER_SIZE_EP0;
 4453              	 .loc 1 1447 0
 4454 0074 7A69     	 ldr r2,[r7,#20]
 4455 0076 9368     	 ldr r3,[r2,#8]
 4456 0078 4021     	 movs r1,#64
 4457 007a 61F31203 	 bfi r3,r1,#0,#19
 4458 007e 9360     	 str r3,[r2,#8]
 4459              	.L253:
1448:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1449:../Libraries/XMCLib/src/xmc_usbd.c ****   /* transfer buffer */
1450:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->inBuffer = XMC_USBD_EP_IN_BUFFER[ep->address_u.address_st.number];
 4460              	 .loc 1 1450 0
 4461 0080 7B69     	 ldr r3,[r7,#20]
 4462 0082 1B78     	 ldrb r3,[r3]
 4463 0084 C3F30303 	 ubfx r3,r3,#0,#4
 4464 0088 DBB2     	 uxtb r3,r3
 4465 008a 1B02     	 lsls r3,r3,#8
 4466 008c 7A4A     	 ldr r2,.L277+4
 4467 008e 1A44     	 add r2,r2,r3
 4468 0090 7B69     	 ldr r3,[r7,#20]
 4469 0092 DA61     	 str r2,[r3,#28]
1451:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBuffer = XMC_USBD_EP_OUT_BUFFER[ep->address_u.address_st.number];
 4470              	 .loc 1 1451 0
 4471 0094 7B69     	 ldr r3,[r7,#20]
 4472 0096 1B78     	 ldrb r3,[r3]
 4473 0098 C3F30303 	 ubfx r3,r3,#0,#4
 4474 009c DBB2     	 uxtb r3,r3
 4475 009e 1B02     	 lsls r3,r3,#8
 4476 00a0 764A     	 ldr r2,.L277+8
 4477 00a2 1A44     	 add r2,r2,r3
 4478 00a4 7B69     	 ldr r3,[r7,#20]
 4479 00a6 DA60     	 str r2,[r3,#12]
1452:../Libraries/XMCLib/src/xmc_usbd.c ****   /* buffer size*/
1453:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->inBufferSize = XMC_USBD_EP_IN_BUFFERSIZE[ep->address_u.address_st.number];
 4480              	 .loc 1 1453 0
 4481 00a8 7B69     	 ldr r3,[r7,#20]
 4482 00aa 1B78     	 ldrb r3,[r3]
 4483 00ac C3F30303 	 ubfx r3,r3,#0,#4
 4484 00b0 DBB2     	 uxtb r3,r3
 4485 00b2 1A46     	 mov r2,r3
 4486 00b4 724B     	 ldr r3,.L277+12
 4487 00b6 53F82220 	 ldr r2,[r3,r2,lsl#2]
 4488 00ba 7B69     	 ldr r3,[r7,#20]
 4489 00bc 1A62     	 str r2,[r3,#32]
1454:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBufferSize = XMC_USBD_EP_OUT_BUFFERSIZE[ep->address_u.address_st.number];
 4490              	 .loc 1 1454 0
 4491 00be 7B69     	 ldr r3,[r7,#20]
 4492 00c0 1B78     	 ldrb r3,[r3]
 4493 00c2 C3F30303 	 ubfx r3,r3,#0,#4
 4494 00c6 DBB2     	 uxtb r3,r3
 4495 00c8 1A46     	 mov r2,r3
 4496 00ca 6E4B     	 ldr r3,.L277+16
 4497 00cc 53F82220 	 ldr r2,[r3,r2,lsl#2]
 4498 00d0 7B69     	 ldr r3,[r7,#20]
 4499 00d2 5A61     	 str r2,[r3,#20]
1455:../Libraries/XMCLib/src/xmc_usbd.c ****   /* is in */
1456:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->address_u.address_st.direction == 1U) || (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL))
 4500              	 .loc 1 1456 0
 4501 00d4 7B69     	 ldr r3,[r7,#20]
 4502 00d6 1B78     	 ldrb r3,[r3]
 4503 00d8 23F07F03 	 bic r3,r3,#127
 4504 00dc DBB2     	 uxtb r3,r3
 4505 00de 002B     	 cmp r3,#0
 4506 00e0 02D1     	 bne .L254
 4507              	 .loc 1 1456 0 is_stmt 0 discriminator 1
 4508 00e2 BB79     	 ldrb r3,[r7,#6]
 4509 00e4 002B     	 cmp r3,#0
 4510 00e6 7AD1     	 bne .L255
 4511              	.L254:
 4512              	.LBB6:
1457:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1458:../Libraries/XMCLib/src/xmc_usbd.c ****     depctl_data_t data;
1459:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 4513              	 .loc 1 1459 0 is_stmt 1
 4514 00e8 7B69     	 ldr r3,[r7,#20]
 4515 00ea 1B78     	 ldrb r3,[r3]
 4516 00ec C3F30303 	 ubfx r3,r3,#0,#4
 4517 00f0 DBB2     	 uxtb r3,r3
 4518 00f2 604A     	 ldr r2,.L277
 4519 00f4 6A33     	 adds r3,r3,#106
 4520 00f6 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4521 00fa 1B68     	 ldr r3,[r3]
 4522 00fc FB60     	 str r3,[r7,#12]
1460:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
1461:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.usbactep = 1U;
 4523              	 .loc 1 1461 0
 4524 00fe 7B7B     	 ldrb r3,[r7,#13]
 4525 0100 43F08003 	 orr r3,r3,#128
 4526 0104 7B73     	 strb r3,[r7,#13]
1462:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
1463:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.eptype = (uint8_t)ep_type;
 4527              	 .loc 1 1463 0
 4528 0106 BB79     	 ldrb r3,[r7,#6]
 4529 0108 03F00303 	 and r3,r3,#3
 4530 010c DAB2     	 uxtb r2,r3
 4531 010e BB7B     	 ldrb r3,[r7,#14]
 4532 0110 62F38303 	 bfi r3,r2,#2,#2
 4533 0114 BB73     	 strb r3,[r7,#14]
1464:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set mps */
1465:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL)
 4534              	 .loc 1 1465 0
 4535 0116 BB79     	 ldrb r3,[r7,#6]
 4536 0118 002B     	 cmp r3,#0
 4537 011a 24D1     	 bne .L256
1466:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1467:../Libraries/XMCLib/src/xmc_usbd.c **** 			switch(ep_max_packet_size)
 4538              	 .loc 1 1467 0
 4539 011c BB88     	 ldrh r3,[r7,#4]
 4540 011e 102B     	 cmp r3,#16
 4541 0120 14D0     	 beq .L258
 4542 0122 102B     	 cmp r3,#16
 4543 0124 02DC     	 bgt .L259
 4544 0126 082B     	 cmp r3,#8
 4545 0128 16D0     	 beq .L260
1468:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
1469:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (64U):
1470:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x0U;
1471:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1472:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
1473:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x1U;
1474:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1475:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (16U):
1476:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x2U;
1477:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1478:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (8U):
1479:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x3U;
1480:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1481:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
1482:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 4546              	 .loc 1 1482 0
 4547 012a 1BE0     	 b .L263
 4548              	.L259:
1467:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
 4549              	 .loc 1 1467 0
 4550 012c 202B     	 cmp r3,#32
 4551 012e 07D0     	 beq .L261
 4552 0130 402B     	 cmp r3,#64
 4553 0132 00D0     	 beq .L262
 4554              	 .loc 1 1482 0
 4555 0134 16E0     	 b .L263
 4556              	.L262:
1470:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 4557              	 .loc 1 1470 0
 4558 0136 BB89     	 ldrh r3,[r7,#12]
 4559 0138 6FF30A03 	 bfc r3,#0,#11
 4560 013c BB81     	 strh r3,[r7,#12]
1471:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
 4561              	 .loc 1 1471 0
 4562 013e 11E0     	 b .L263
 4563              	.L261:
1473:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 4564              	 .loc 1 1473 0
 4565 0140 BB89     	 ldrh r3,[r7,#12]
 4566 0142 0122     	 movs r2,#1
 4567 0144 62F30A03 	 bfi r3,r2,#0,#11
 4568 0148 BB81     	 strh r3,[r7,#12]
1474:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (16U):
 4569              	 .loc 1 1474 0
 4570 014a 0BE0     	 b .L263
 4571              	.L258:
1476:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 4572              	 .loc 1 1476 0
 4573 014c BB89     	 ldrh r3,[r7,#12]
 4574 014e 0222     	 movs r2,#2
 4575 0150 62F30A03 	 bfi r3,r2,#0,#11
 4576 0154 BB81     	 strh r3,[r7,#12]
1477:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (8U):
 4577              	 .loc 1 1477 0
 4578 0156 05E0     	 b .L263
 4579              	.L260:
1479:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 4580              	 .loc 1 1479 0
 4581 0158 BB89     	 ldrh r3,[r7,#12]
 4582 015a 0322     	 movs r2,#3
 4583 015c 62F30A03 	 bfi r3,r2,#0,#11
 4584 0160 BB81     	 strh r3,[r7,#12]
1480:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
 4585              	 .loc 1 1480 0
 4586 0162 00BF     	 nop
 4587              	.L263:
 4588 0164 07E0     	 b .L264
 4589              	.L256:
1483:../Libraries/XMCLib/src/xmc_usbd.c **** 			}
1484:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1485:../Libraries/XMCLib/src/xmc_usbd.c **** 		else
1486:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1487:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.mps = ep_max_packet_size;
 4590              	 .loc 1 1487 0
 4591 0166 BB88     	 ldrh r3,[r7,#4]
 4592 0168 C3F30A03 	 ubfx r3,r3,#0,#11
 4593 016c 9AB2     	 uxth r2,r3
 4594 016e BB89     	 ldrh r3,[r7,#12]
 4595 0170 62F30A03 	 bfi r3,r2,#0,#11
 4596 0174 BB81     	 strh r3,[r7,#12]
 4597              	.L264:
1488:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1489:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set first data0 pid */
1490:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.setd0pid = 1U;
 4598              	 .loc 1 1490 0 discriminator 2
 4599 0176 FB7B     	 ldrb r3,[r7,#15]
 4600 0178 43F01003 	 orr r3,r3,#16
 4601 017c FB73     	 strb r3,[r7,#15]
1491:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* clear stall */
1492:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.stall = 0U;
 4602              	 .loc 1 1492 0 discriminator 2
 4603 017e BB7B     	 ldrb r3,[r7,#14]
 4604 0180 6FF34513 	 bfc r3,#5,#1
 4605 0184 BB73     	 strb r3,[r7,#14]
1493:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set tx fifo */
1494:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->txFifoNum = XMC_USBD_lAssignTXFifo(); /* get tx fifo */
 4606              	 .loc 1 1494 0 discriminator 2
 4607 0186 FFF7FEFF 	 bl XMC_USBD_lAssignTXFifo
 4608 018a 0346     	 mov r3,r0
 4609 018c 03F00F03 	 and r3,r3,#15
 4610 0190 D9B2     	 uxtb r1,r3
 4611 0192 7A69     	 ldr r2,[r7,#20]
 4612 0194 9388     	 ldrh r3,[r2,#4]
 4613 0196 61F38913 	 bfi r3,r1,#6,#4
 4614 019a 9380     	 strh r3,[r2,#4]
1495:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.txfnum = ep->txFifoNum;
 4615              	 .loc 1 1495 0 discriminator 2
 4616 019c 7B69     	 ldr r3,[r7,#20]
 4617 019e 9B88     	 ldrh r3,[r3,#4]
 4618 01a0 C3F38313 	 ubfx r3,r3,#6,#4
 4619 01a4 DAB2     	 uxtb r2,r3
 4620 01a6 FB89     	 ldrh r3,[r7,#14]
 4621 01a8 62F38913 	 bfi r3,r2,#6,#4
 4622 01ac FB81     	 strh r3,[r7,#14]
1496:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32; /* configur
 4623              	 .loc 1 1496 0 discriminator 2
 4624 01ae 7B69     	 ldr r3,[r7,#20]
 4625 01b0 1B78     	 ldrb r3,[r3]
 4626 01b2 C3F30303 	 ubfx r3,r3,#0,#4
 4627 01b6 DBB2     	 uxtb r3,r3
 4628 01b8 2E4A     	 ldr r2,.L277
 4629 01ba 6A33     	 adds r3,r3,#106
 4630 01bc 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4631 01c0 FA68     	 ldr r2,[r7,#12]
 4632 01c2 1A60     	 str r2,[r3]
1497:../Libraries/XMCLib/src/xmc_usbd.c **** 		daintmsk.ep.in |= (uint16_t)((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* enable
 4633              	 .loc 1 1497 0 discriminator 2
 4634 01c4 3A8A     	 ldrh r2,[r7,#16]
 4635 01c6 7B69     	 ldr r3,[r7,#20]
 4636 01c8 1B78     	 ldrb r3,[r3]
 4637 01ca C3F30303 	 ubfx r3,r3,#0,#4
 4638 01ce DBB2     	 uxtb r3,r3
 4639 01d0 1946     	 mov r1,r3
 4640 01d2 0123     	 movs r3,#1
 4641 01d4 8B40     	 lsls r3,r3,r1
 4642 01d6 9BB2     	 uxth r3,r3
 4643 01d8 1343     	 orrs r3,r3,r2
 4644 01da 9BB2     	 uxth r3,r3
 4645 01dc 3B82     	 strh r3,[r7,#16]
 4646              	.L255:
 4647              	.LBE6:
1498:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1499:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->address_u.address_st.direction == 0U) || (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL))
 4648              	 .loc 1 1499 0
 4649 01de 7B69     	 ldr r3,[r7,#20]
 4650 01e0 1B78     	 ldrb r3,[r3]
 4651 01e2 23F07F03 	 bic r3,r3,#127
 4652 01e6 DBB2     	 uxtb r3,r3
 4653 01e8 002B     	 cmp r3,#0
 4654 01ea 02D0     	 beq .L265
 4655              	 .loc 1 1499 0 is_stmt 0 discriminator 1
 4656 01ec BB79     	 ldrb r3,[r7,#6]
 4657 01ee 002B     	 cmp r3,#0
 4658 01f0 73D1     	 bne .L266
 4659              	.L265:
 4660              	.LBB7:
1500:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1501:../Libraries/XMCLib/src/xmc_usbd.c ****     /* is out */
1502:../Libraries/XMCLib/src/xmc_usbd.c **** 		depctl_data_t data;
1503:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 4661              	 .loc 1 1503 0 is_stmt 1
 4662 01f2 7B69     	 ldr r3,[r7,#20]
 4663 01f4 1B78     	 ldrb r3,[r3]
 4664 01f6 C3F30303 	 ubfx r3,r3,#0,#4
 4665 01fa DBB2     	 uxtb r3,r3
 4666 01fc 1D4A     	 ldr r2,.L277
 4667 01fe 7033     	 adds r3,r3,#112
 4668 0200 9B00     	 lsls r3,r3,#2
 4669 0202 1344     	 add r3,r3,r2
 4670 0204 5B68     	 ldr r3,[r3,#4]
 4671 0206 1B68     	 ldr r3,[r3]
 4672 0208 BB60     	 str r3,[r7,#8]
1504:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
1505:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.usbactep = 1U;
 4673              	 .loc 1 1505 0
 4674 020a 7B7A     	 ldrb r3,[r7,#9]
 4675 020c 43F08003 	 orr r3,r3,#128
 4676 0210 7B72     	 strb r3,[r7,#9]
1506:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
1507:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.eptype = (uint8_t)ep_type;
 4677              	 .loc 1 1507 0
 4678 0212 BB79     	 ldrb r3,[r7,#6]
 4679 0214 03F00303 	 and r3,r3,#3
 4680 0218 DAB2     	 uxtb r2,r3
 4681 021a BB7A     	 ldrb r3,[r7,#10]
 4682 021c 62F38303 	 bfi r3,r2,#2,#2
 4683 0220 BB72     	 strb r3,[r7,#10]
1508:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set mps */
1509:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL)
 4684              	 .loc 1 1509 0
 4685 0222 BB79     	 ldrb r3,[r7,#6]
 4686 0224 002B     	 cmp r3,#0
 4687 0226 2FD1     	 bne .L267
1510:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1511:../Libraries/XMCLib/src/xmc_usbd.c **** 			switch(ep_max_packet_size)
 4688              	 .loc 1 1511 0
 4689 0228 BB88     	 ldrh r3,[r7,#4]
 4690 022a 102B     	 cmp r3,#16
 4691 022c 14D0     	 beq .L269
 4692 022e 102B     	 cmp r3,#16
 4693 0230 02DC     	 bgt .L270
 4694 0232 082B     	 cmp r3,#8
 4695 0234 16D0     	 beq .L271
1512:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
1513:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (64U):
1514:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x0U;
1515:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1516:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
1517:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x1U;
1518:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1519:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (16U):
1520:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x2U;
1521:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1522:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (8U):
1523:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x3U;
1524:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1525:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
1526:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 4696              	 .loc 1 1526 0
 4697 0236 1BE0     	 b .L274
 4698              	.L270:
1511:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
 4699              	 .loc 1 1511 0
 4700 0238 202B     	 cmp r3,#32
 4701 023a 07D0     	 beq .L272
 4702 023c 402B     	 cmp r3,#64
 4703 023e 00D0     	 beq .L273
 4704              	 .loc 1 1526 0
 4705 0240 16E0     	 b .L274
 4706              	.L273:
1514:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 4707              	 .loc 1 1514 0
 4708 0242 3B89     	 ldrh r3,[r7,#8]
 4709 0244 6FF30A03 	 bfc r3,#0,#11
 4710 0248 3B81     	 strh r3,[r7,#8]
1515:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
 4711              	 .loc 1 1515 0
 4712 024a 11E0     	 b .L274
 4713              	.L272:
1517:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 4714              	 .loc 1 1517 0
 4715 024c 3B89     	 ldrh r3,[r7,#8]
 4716 024e 0122     	 movs r2,#1
 4717 0250 62F30A03 	 bfi r3,r2,#0,#11
 4718 0254 3B81     	 strh r3,[r7,#8]
1518:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (16U):
 4719              	 .loc 1 1518 0
 4720 0256 0BE0     	 b .L274
 4721              	.L269:
1520:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 4722              	 .loc 1 1520 0
 4723 0258 3B89     	 ldrh r3,[r7,#8]
 4724 025a 0222     	 movs r2,#2
 4725 025c 62F30A03 	 bfi r3,r2,#0,#11
 4726 0260 3B81     	 strh r3,[r7,#8]
1521:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (8U):
 4727              	 .loc 1 1521 0
 4728 0262 05E0     	 b .L274
 4729              	.L271:
1523:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 4730              	 .loc 1 1523 0
 4731 0264 3B89     	 ldrh r3,[r7,#8]
 4732 0266 0322     	 movs r2,#3
 4733 0268 62F30A03 	 bfi r3,r2,#0,#11
 4734 026c 3B81     	 strh r3,[r7,#8]
1524:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
 4735              	 .loc 1 1524 0
 4736 026e 00BF     	 nop
 4737              	.L274:
 4738 0270 12E0     	 b .L275
 4739              	.L278:
 4740 0272 00BF     	 .align 2
 4741              	.L277:
 4742 0274 00000000 	 .word xmc_device
 4743 0278 00070000 	 .word XMC_USBD_EP_IN_BUFFER
 4744 027c 00000000 	 .word XMC_USBD_EP_OUT_BUFFER
 4745 0280 00000000 	 .word XMC_USBD_EP_IN_BUFFERSIZE
 4746 0284 00000000 	 .word XMC_USBD_EP_OUT_BUFFERSIZE
 4747              	.L267:
1527:../Libraries/XMCLib/src/xmc_usbd.c **** 			}
1528:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1529:../Libraries/XMCLib/src/xmc_usbd.c **** 		else
1530:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1531:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.mps = ep_max_packet_size;
 4748              	 .loc 1 1531 0
 4749 0288 BB88     	 ldrh r3,[r7,#4]
 4750 028a C3F30A03 	 ubfx r3,r3,#0,#11
 4751 028e 9AB2     	 uxth r2,r3
 4752 0290 3B89     	 ldrh r3,[r7,#8]
 4753 0292 62F30A03 	 bfi r3,r2,#0,#11
 4754 0296 3B81     	 strh r3,[r7,#8]
 4755              	.L275:
1532:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1533:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set first data0 pid */
1534:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.setd0pid = 1U;
 4756              	 .loc 1 1534 0 discriminator 4
 4757 0298 FB7A     	 ldrb r3,[r7,#11]
 4758 029a 43F01003 	 orr r3,r3,#16
 4759 029e FB72     	 strb r3,[r7,#11]
1535:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* clear stall */
1536:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.stall =(uint8_t) 0U;
 4760              	 .loc 1 1536 0 discriminator 4
 4761 02a0 BB7A     	 ldrb r3,[r7,#10]
 4762 02a2 6FF34513 	 bfc r3,#5,#1
 4763 02a6 BB72     	 strb r3,[r7,#10]
1537:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32; /* configu
 4764              	 .loc 1 1537 0 discriminator 4
 4765 02a8 7B69     	 ldr r3,[r7,#20]
 4766 02aa 1B78     	 ldrb r3,[r3]
 4767 02ac C3F30303 	 ubfx r3,r3,#0,#4
 4768 02b0 DBB2     	 uxtb r3,r3
 4769 02b2 0F4A     	 ldr r2,.L279
 4770 02b4 7033     	 adds r3,r3,#112
 4771 02b6 9B00     	 lsls r3,r3,#2
 4772 02b8 1344     	 add r3,r3,r2
 4773 02ba 5B68     	 ldr r3,[r3,#4]
 4774 02bc BA68     	 ldr r2,[r7,#8]
 4775 02be 1A60     	 str r2,[r3]
1538:../Libraries/XMCLib/src/xmc_usbd.c **** 		daintmsk.ep.out |=(uint16_t) ((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* enabl
 4776              	 .loc 1 1538 0 discriminator 4
 4777 02c0 7A8A     	 ldrh r2,[r7,#18]
 4778 02c2 7B69     	 ldr r3,[r7,#20]
 4779 02c4 1B78     	 ldrb r3,[r3]
 4780 02c6 C3F30303 	 ubfx r3,r3,#0,#4
 4781 02ca DBB2     	 uxtb r3,r3
 4782 02cc 1946     	 mov r1,r3
 4783 02ce 0123     	 movs r3,#1
 4784 02d0 8B40     	 lsls r3,r3,r1
 4785 02d2 9BB2     	 uxth r3,r3
 4786 02d4 1343     	 orrs r3,r3,r2
 4787 02d6 9BB2     	 uxth r3,r3
 4788 02d8 7B82     	 strh r3,[r7,#18]
 4789              	.L266:
 4790              	.LBE7:
1539:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1540:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->daintmsk = daintmsk.d32;
 4791              	 .loc 1 1540 0
 4792 02da 054B     	 ldr r3,.L279
 4793 02dc D3F8A431 	 ldr r3,[r3,#420]
 4794 02e0 3A69     	 ldr r2,[r7,#16]
 4795 02e2 DA61     	 str r2,[r3,#28]
1541:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 4796              	 .loc 1 1541 0
 4797 02e4 0023     	 movs r3,#0
1542:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4798              	 .loc 1 1542 0
 4799 02e6 1846     	 mov r0,r3
 4800 02e8 1837     	 adds r7,r7,#24
 4801              	.LCFI198:
 4802              	 .cfi_def_cfa_offset 8
 4803 02ea BD46     	 mov sp,r7
 4804              	.LCFI199:
 4805              	 .cfi_def_cfa_register 13
 4806              	 
 4807 02ec 80BD     	 pop {r7,pc}
 4808              	.L280:
 4809 02ee 00BF     	 .align 2
 4810              	.L279:
 4811 02f0 00000000 	 .word xmc_device
 4812              	 .cfi_endproc
 4813              	.LFE213:
 4815              	 .section .text.XMC_USBD_EndpointUnconfigure,"ax",%progbits
 4816              	 .align 2
 4817              	 .global XMC_USBD_EndpointUnconfigure
 4818              	 .thumb
 4819              	 .thumb_func
 4821              	XMC_USBD_EndpointUnconfigure:
 4822              	.LFB214:
1543:../Libraries/XMCLib/src/xmc_usbd.c **** 
1544:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1545:../Libraries/XMCLib/src/xmc_usbd.c ****  * Unconfigure the selected endpoint.
1546:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1547:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointUnconfigure(const uint8_t ep_addr) 
1548:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4823              	 .loc 1 1548 0
 4824              	 .cfi_startproc
 4825              	 
 4826              	 
 4827 0000 80B5     	 push {r7,lr}
 4828              	.LCFI200:
 4829              	 .cfi_def_cfa_offset 8
 4830              	 .cfi_offset 7,-8
 4831              	 .cfi_offset 14,-4
 4832 0002 88B0     	 sub sp,sp,#32
 4833              	.LCFI201:
 4834              	 .cfi_def_cfa_offset 40
 4835 0004 00AF     	 add r7,sp,#0
 4836              	.LCFI202:
 4837              	 .cfi_def_cfa_register 7
 4838 0006 0346     	 mov r3,r0
 4839 0008 FB71     	 strb r3,[r7,#7]
1549:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 4840              	 .loc 1 1549 0
 4841 000a FB79     	 ldrb r3,[r7,#7]
 4842 000c 03F00F03 	 and r3,r3,#15
 4843 0010 3422     	 movs r2,#52
 4844 0012 02FB03F3 	 mul r3,r2,r3
 4845 0016 544A     	 ldr r2,.L289
 4846 0018 1344     	 add r3,r3,r2
 4847 001a BB61     	 str r3,[r7,#24]
1550:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
1551:../Libraries/XMCLib/src/xmc_usbd.c **** 	daint_data_t daintmsk;
1552:../Libraries/XMCLib/src/xmc_usbd.c **** 	XMC_USBD_STATUS_t result;
1553:../Libraries/XMCLib/src/xmc_usbd.c **** 	uint32_t number_temp;
1554:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = 0U;  
 4848              	 .loc 1 1554 0
 4849 001c 0023     	 movs r3,#0
 4850 001e 3B61     	 str r3,[r7,#16]
1555:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;  
 4851              	 .loc 1 1555 0
 4852 0020 514B     	 ldr r3,.L289
 4853 0022 D3F8A431 	 ldr r3,[r3,#420]
 4854 0026 DB69     	 ldr r3,[r3,#28]
 4855 0028 FB60     	 str r3,[r7,#12]
1556:../Libraries/XMCLib/src/xmc_usbd.c ****   number_temp = (uint32_t)((uint32_t)1U << (uint8_t)ep->address_u.address_st.number);
 4856              	 .loc 1 1556 0
 4857 002a BB69     	 ldr r3,[r7,#24]
 4858 002c 1B78     	 ldrb r3,[r3]
 4859 002e C3F30303 	 ubfx r3,r3,#0,#4
 4860 0032 DBB2     	 uxtb r3,r3
 4861 0034 1A46     	 mov r2,r3
 4862 0036 0123     	 movs r3,#1
 4863 0038 9340     	 lsls r3,r3,r2
 4864 003a 7B61     	 str r3,[r7,#20]
1557:../Libraries/XMCLib/src/xmc_usbd.c ****   /* if not configured return an error */
1558:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->isConfigured)
 4865              	 .loc 1 1558 0
 4866 003c BB69     	 ldr r3,[r7,#24]
 4867 003e 1B79     	 ldrb r3,[r3,#4]
 4868 0040 03F00403 	 and r3,r3,#4
 4869 0044 DBB2     	 uxtb r3,r3
 4870 0046 002B     	 cmp r3,#0
 4871 0048 02D1     	 bne .L282
1559:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1560:../Libraries/XMCLib/src/xmc_usbd.c ****      result = XMC_USBD_STATUS_ERROR;
 4872              	 .loc 1 1560 0
 4873 004a 0123     	 movs r3,#1
 4874 004c FB77     	 strb r3,[r7,#31]
 4875 004e 85E0     	 b .L283
 4876              	.L282:
1561:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1562:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1563:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1564:../Libraries/XMCLib/src/xmc_usbd.c ****     /* disable the endpoint, deactivate it and only send naks */
1565:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.usbactep = 0U;
 4877              	 .loc 1 1565 0
 4878 0050 7B7C     	 ldrb r3,[r7,#17]
 4879 0052 6FF3C713 	 bfc r3,#7,#1
 4880 0056 7B74     	 strb r3,[r7,#17]
1566:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.epdis =  1U;
 4881              	 .loc 1 1566 0
 4882 0058 FB7C     	 ldrb r3,[r7,#19]
 4883 005a 43F04003 	 orr r3,r3,#64
 4884 005e FB74     	 strb r3,[r7,#19]
1567:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.snak =  1U;
 4885              	 .loc 1 1567 0
 4886 0060 FB7C     	 ldrb r3,[r7,#19]
 4887 0062 43F00803 	 orr r3,r3,#8
 4888 0066 FB74     	 strb r3,[r7,#19]
1568:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.stall =  0U;
 4889              	 .loc 1 1568 0
 4890 0068 BB7C     	 ldrb r3,[r7,#18]
 4891 006a 6FF34513 	 bfc r3,#5,#1
 4892 006e BB74     	 strb r3,[r7,#18]
1569:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isConfigured =  0U;
 4893              	 .loc 1 1569 0
 4894 0070 BA69     	 ldr r2,[r7,#24]
 4895 0072 1379     	 ldrb r3,[r2,#4]
 4896 0074 6FF38203 	 bfc r3,#2,#1
 4897 0078 1371     	 strb r3,[r2,#4]
1570:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isStalled =  0U;
 4898              	 .loc 1 1570 0
 4899 007a BA69     	 ldr r2,[r7,#24]
 4900 007c 1379     	 ldrb r3,[r2,#4]
 4901 007e 6FF34513 	 bfc r3,#5,#1
 4902 0082 1371     	 strb r3,[r2,#4]
1571:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outInUse =  0U;
 4903              	 .loc 1 1571 0
 4904 0084 BB69     	 ldr r3,[r7,#24]
 4905 0086 5A68     	 ldr r2,[r3,#4]
 4906 0088 22F01002 	 bic r2,r2,#16
 4907 008c 5A60     	 str r2,[r3,#4]
1572:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse =  0U;
 4908              	 .loc 1 1572 0
 4909 008e BB69     	 ldr r3,[r7,#24]
 4910 0090 5A68     	 ldr r2,[r3,#4]
 4911 0092 22F00802 	 bic r2,r2,#8
 4912 0096 5A60     	 str r2,[r3,#4]
1573:../Libraries/XMCLib/src/xmc_usbd.c ****     /* chose register based on the direction. Control Endpoint need both */
1574:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((ep->address_u.address_st.direction == 1U) || (ep->type == (uint8_t)XMC_USBD_ENDPOINT_TYPE_
 4913              	 .loc 1 1574 0
 4914 0098 BB69     	 ldr r3,[r7,#24]
 4915 009a 1B78     	 ldrb r3,[r3]
 4916 009c 23F07F03 	 bic r3,r3,#127
 4917 00a0 DBB2     	 uxtb r3,r3
 4918 00a2 002B     	 cmp r3,#0
 4919 00a4 06D1     	 bne .L284
 4920              	 .loc 1 1574 0 is_stmt 0 discriminator 1
 4921 00a6 BB69     	 ldr r3,[r7,#24]
 4922 00a8 1B79     	 ldrb r3,[r3,#4]
 4923 00aa 03F00303 	 and r3,r3,#3
 4924 00ae DBB2     	 uxtb r3,r3
 4925 00b0 002B     	 cmp r3,#0
 4926 00b2 12D1     	 bne .L285
 4927              	.L284:
1575:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1576:../Libraries/XMCLib/src/xmc_usbd.c ****       /* disable endpoint configuration */
1577:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 4928              	 .loc 1 1577 0 is_stmt 1
 4929 00b4 BB69     	 ldr r3,[r7,#24]
 4930 00b6 1B78     	 ldrb r3,[r3]
 4931 00b8 C3F30303 	 ubfx r3,r3,#0,#4
 4932 00bc DBB2     	 uxtb r3,r3
 4933 00be 2A4A     	 ldr r2,.L289
 4934 00c0 6A33     	 adds r3,r3,#106
 4935 00c2 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4936 00c6 3A69     	 ldr r2,[r7,#16]
 4937 00c8 1A60     	 str r2,[r3]
1578:../Libraries/XMCLib/src/xmc_usbd.c ****       /* disable interrupts */
1579:../Libraries/XMCLib/src/xmc_usbd.c ****       daintmsk.ep.in = (uint16_t)((uint32_t)daintmsk.ep.in & (~(uint32_t)number_temp));
 4938              	 .loc 1 1579 0
 4939 00ca BA89     	 ldrh r2,[r7,#12]
 4940 00cc 7B69     	 ldr r3,[r7,#20]
 4941 00ce 9BB2     	 uxth r3,r3
 4942 00d0 DB43     	 mvns r3,r3
 4943 00d2 9BB2     	 uxth r3,r3
 4944 00d4 1340     	 ands r3,r3,r2
 4945 00d6 9BB2     	 uxth r3,r3
 4946 00d8 BB81     	 strh r3,[r7,#12]
 4947              	.L285:
1580:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1581:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((ep->address_u.address_st.direction == 0U) || (ep->type == (uint8_t)XMC_USBD_ENDPOINT_TYPE_
 4948              	 .loc 1 1581 0
 4949 00da BB69     	 ldr r3,[r7,#24]
 4950 00dc 1B78     	 ldrb r3,[r3]
 4951 00de 23F07F03 	 bic r3,r3,#127
 4952 00e2 DBB2     	 uxtb r3,r3
 4953 00e4 002B     	 cmp r3,#0
 4954 00e6 06D0     	 beq .L286
 4955              	 .loc 1 1581 0 is_stmt 0 discriminator 1
 4956 00e8 BB69     	 ldr r3,[r7,#24]
 4957 00ea 1B79     	 ldrb r3,[r3,#4]
 4958 00ec 03F00303 	 and r3,r3,#3
 4959 00f0 DBB2     	 uxtb r3,r3
 4960 00f2 002B     	 cmp r3,#0
 4961 00f4 23D1     	 bne .L287
 4962              	.L286:
1582:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1583:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 4963              	 .loc 1 1583 0 is_stmt 1
 4964 00f6 BB69     	 ldr r3,[r7,#24]
 4965 00f8 1B78     	 ldrb r3,[r3]
 4966 00fa C3F30303 	 ubfx r3,r3,#0,#4
 4967 00fe DBB2     	 uxtb r3,r3
 4968 0100 194A     	 ldr r2,.L289
 4969 0102 7033     	 adds r3,r3,#112
 4970 0104 9B00     	 lsls r3,r3,#2
 4971 0106 1344     	 add r3,r3,r2
 4972 0108 5B68     	 ldr r3,[r3,#4]
 4973 010a 3A69     	 ldr r2,[r7,#16]
 4974 010c 1A60     	 str r2,[r3]
1584:../Libraries/XMCLib/src/xmc_usbd.c ****       daintmsk.ep.out = (uint16_t)((uint32_t)daintmsk.ep.out & (~(uint32_t)number_temp));
 4975              	 .loc 1 1584 0
 4976 010e FA89     	 ldrh r2,[r7,#14]
 4977 0110 7B69     	 ldr r3,[r7,#20]
 4978 0112 9BB2     	 uxth r3,r3
 4979 0114 DB43     	 mvns r3,r3
 4980 0116 9BB2     	 uxth r3,r3
 4981 0118 1340     	 ands r3,r3,r2
 4982 011a 9BB2     	 uxth r3,r3
 4983 011c FB81     	 strh r3,[r7,#14]
1585:../Libraries/XMCLib/src/xmc_usbd.c ****       if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 4984              	 .loc 1 1585 0
 4985 011e 134B     	 ldr r3,.L289+4
 4986 0120 1B68     	 ldr r3,[r3]
 4987 0122 5B7B     	 ldrb r3,[r3,#13]
 4988 0124 012B     	 cmp r3,#1
 4989 0126 0AD1     	 bne .L287
1586:../Libraries/XMCLib/src/xmc_usbd.c ****       {
1587:../Libraries/XMCLib/src/xmc_usbd.c ****         xmc_device.device_register->dtknqr4_fifoemptymsk &= ~number_temp;
 4990              	 .loc 1 1587 0
 4991 0128 0F4B     	 ldr r3,.L289
 4992 012a D3F8A431 	 ldr r3,[r3,#420]
 4993 012e 0E4A     	 ldr r2,.L289
 4994 0130 D2F8A421 	 ldr r2,[r2,#420]
 4995 0134 516B     	 ldr r1,[r2,#52]
 4996 0136 7A69     	 ldr r2,[r7,#20]
 4997 0138 D243     	 mvns r2,r2
 4998 013a 0A40     	 ands r2,r2,r1
 4999 013c 5A63     	 str r2,[r3,#52]
 5000              	.L287:
1588:../Libraries/XMCLib/src/xmc_usbd.c ****       }
1589:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1590:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->daintmsk = daintmsk.d32;
 5001              	 .loc 1 1590 0
 5002 013e 0A4B     	 ldr r3,.L289
 5003 0140 D3F8A431 	 ldr r3,[r3,#420]
 5004 0144 FA68     	 ldr r2,[r7,#12]
 5005 0146 DA61     	 str r2,[r3,#28]
1591:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lUnassignFifo(ep->txFifoNum); /* free fifo */
 5006              	 .loc 1 1591 0
 5007 0148 BB69     	 ldr r3,[r7,#24]
 5008 014a 9B88     	 ldrh r3,[r3,#4]
 5009 014c C3F38313 	 ubfx r3,r3,#6,#4
 5010 0150 DBB2     	 uxtb r3,r3
 5011 0152 1846     	 mov r0,r3
 5012 0154 FFF7FEFF 	 bl XMC_USBD_lUnassignFifo
1592:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_OK;
 5013              	 .loc 1 1592 0
 5014 0158 0023     	 movs r3,#0
 5015 015a FB77     	 strb r3,[r7,#31]
 5016              	.L283:
1593:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1594:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 5017              	 .loc 1 1594 0
 5018 015c FB7F     	 ldrb r3,[r7,#31]
1595:../Libraries/XMCLib/src/xmc_usbd.c **** }
 5019              	 .loc 1 1595 0
 5020 015e 1846     	 mov r0,r3
 5021 0160 2037     	 adds r7,r7,#32
 5022              	.LCFI203:
 5023              	 .cfi_def_cfa_offset 8
 5024 0162 BD46     	 mov sp,r7
 5025              	.LCFI204:
 5026              	 .cfi_def_cfa_register 13
 5027              	 
 5028 0164 80BD     	 pop {r7,pc}
 5029              	.L290:
 5030 0166 00BF     	 .align 2
 5031              	.L289:
 5032 0168 00000000 	 .word xmc_device
 5033 016c 00000000 	 .word usbd_init
 5034              	 .cfi_endproc
 5035              	.LFE214:
 5037              	 .section .text.XMC_USBD_GetFrameNumber,"ax",%progbits
 5038              	 .align 2
 5039              	 .global XMC_USBD_GetFrameNumber
 5040              	 .thumb
 5041              	 .thumb_func
 5043              	XMC_USBD_GetFrameNumber:
 5044              	.LFB215:
1596:../Libraries/XMCLib/src/xmc_usbd.c **** 
1597:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1598:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the current USB frame number
1599:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1600:../Libraries/XMCLib/src/xmc_usbd.c **** uint16_t XMC_USBD_GetFrameNumber(void) 
1601:../Libraries/XMCLib/src/xmc_usbd.c **** {
 5045              	 .loc 1 1601 0
 5046              	 .cfi_startproc
 5047              	 
 5048              	 
 5049              	 
 5050 0000 80B4     	 push {r7}
 5051              	.LCFI205:
 5052              	 .cfi_def_cfa_offset 4
 5053              	 .cfi_offset 7,-4
 5054 0002 83B0     	 sub sp,sp,#12
 5055              	.LCFI206:
 5056              	 .cfi_def_cfa_offset 16
 5057 0004 00AF     	 add r7,sp,#0
 5058              	.LCFI207:
 5059              	 .cfi_def_cfa_register 7
1602:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t result;
1603:../Libraries/XMCLib/src/xmc_usbd.c ****   dsts_data_t dsts;
1604:../Libraries/XMCLib/src/xmc_usbd.c ****   dsts.d32 = xmc_device.device_register->dsts;
 5060              	 .loc 1 1604 0
 5061 0006 084B     	 ldr r3,.L293
 5062 0008 D3F8A431 	 ldr r3,[r3,#420]
 5063 000c 9B68     	 ldr r3,[r3,#8]
 5064 000e 3B60     	 str r3,[r7]
1605:../Libraries/XMCLib/src/xmc_usbd.c ****   result = (uint16_t)dsts.b.soffn;
 5065              	 .loc 1 1605 0
 5066 0010 3B68     	 ldr r3,[r7]
 5067 0012 C3F30D23 	 ubfx r3,r3,#8,#14
 5068 0016 9BB2     	 uxth r3,r3
 5069 0018 FB80     	 strh r3,[r7,#6]
1606:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 5070              	 .loc 1 1606 0
 5071 001a FB88     	 ldrh r3,[r7,#6]
1607:../Libraries/XMCLib/src/xmc_usbd.c **** }
 5072              	 .loc 1 1607 0
 5073 001c 1846     	 mov r0,r3
 5074 001e 0C37     	 adds r7,r7,#12
 5075              	.LCFI208:
 5076              	 .cfi_def_cfa_offset 4
 5077 0020 BD46     	 mov sp,r7
 5078              	.LCFI209:
 5079              	 .cfi_def_cfa_register 13
 5080              	 
 5081 0022 5DF8047B 	 ldr r7,[sp],#4
 5082              	.LCFI210:
 5083              	 .cfi_restore 7
 5084              	 .cfi_def_cfa_offset 0
 5085 0026 7047     	 bx lr
 5086              	.L294:
 5087              	 .align 2
 5088              	.L293:
 5089 0028 00000000 	 .word xmc_device
 5090              	 .cfi_endproc
 5091              	.LFE215:
 5093              	 .section .text.XMC_USBD_IsEnumDone,"ax",%progbits
 5094              	 .align 2
 5095              	 .global XMC_USBD_IsEnumDone
 5096              	 .thumb
 5097              	 .thumb_func
 5099              	XMC_USBD_IsEnumDone:
 5100              	.LFB216:
1608:../Libraries/XMCLib/src/xmc_usbd.c **** 
1609:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1610:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB speed enumeration completion status.
1611:../Libraries/XMCLib/src/xmc_usbd.c ****  * This should not be used for the actual USB enumeration completion status. For the actual USB enu
1612:../Libraries/XMCLib/src/xmc_usbd.c ****  * the application layer should check for the completion of USB standard request Set configuration.
1613:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1614:../Libraries/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_IsEnumDone(void)
1615:../Libraries/XMCLib/src/xmc_usbd.c **** {
 5101              	 .loc 1 1615 0
 5102              	 .cfi_startproc
 5103              	 
 5104              	 
 5105              	 
 5106 0000 80B4     	 push {r7}
 5107              	.LCFI211:
 5108              	 .cfi_def_cfa_offset 4
 5109              	 .cfi_offset 7,-4
 5110 0002 00AF     	 add r7,sp,#0
 5111              	.LCFI212:
 5112              	 .cfi_def_cfa_register 7
1616:../Libraries/XMCLib/src/xmc_usbd.c ****   return (uint32_t)((uint8_t)xmc_device.IsConnected && (uint8_t)xmc_device.IsPowered);
 5113              	 .loc 1 1616 0
 5114 0004 0B4B     	 ldr r3,.L299
 5115 0006 93F8FE31 	 ldrb r3,[r3,#510]
 5116 000a 03F00103 	 and r3,r3,#1
 5117 000e DBB2     	 uxtb r3,r3
 5118 0010 002B     	 cmp r3,#0
 5119 0012 09D0     	 beq .L296
 5120              	 .loc 1 1616 0 is_stmt 0 discriminator 1
 5121 0014 074B     	 ldr r3,.L299
 5122 0016 93F8FE31 	 ldrb r3,[r3,#510]
 5123 001a 03F00403 	 and r3,r3,#4
 5124 001e DBB2     	 uxtb r3,r3
 5125 0020 002B     	 cmp r3,#0
 5126 0022 01D0     	 beq .L296
 5127              	 .loc 1 1616 0 discriminator 3
 5128 0024 0123     	 movs r3,#1
 5129 0026 00E0     	 b .L297
 5130              	.L296:
 5131              	 .loc 1 1616 0 discriminator 4
 5132 0028 0023     	 movs r3,#0
 5133              	.L297:
1617:../Libraries/XMCLib/src/xmc_usbd.c **** }
 5134              	 .loc 1 1617 0 is_stmt 1 discriminator 6
 5135 002a 1846     	 mov r0,r3
 5136 002c BD46     	 mov sp,r7
 5137              	.LCFI213:
 5138              	 .cfi_def_cfa_register 13
 5139              	 
 5140 002e 5DF8047B 	 ldr r7,[sp],#4
 5141              	.LCFI214:
 5142              	 .cfi_restore 7
 5143              	 .cfi_def_cfa_offset 0
 5144 0032 7047     	 bx lr
 5145              	.L300:
 5146              	 .align 2
 5147              	.L299:
 5148 0034 00000000 	 .word xmc_device
 5149              	 .cfi_endproc
 5150              	.LFE216:
 5152              	 .text
 5153              	.Letext0:
 5154              	 .file 2 "c:\\tools\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 5155              	 .file 3 "c:\\tools\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 5156              	 .file 4 "C:/Users/Admin/DaveWorkspaces/XMC4300_PWMTest/Libraries/CMSIS/Infineon/XMC4300_series/Include/XMC4300.h"
 5157              	 .file 5 "C:/Users/Admin/DaveWorkspaces/XMC4300_PWMTest/Libraries/XMCLib/inc/xmc_usbd_regs.h"
 5158              	 .file 6 "C:/Users/Admin/DaveWorkspaces/XMC4300_PWMTest/Libraries/XMCLib/inc/xmc4_scu.h"
 5159              	 .file 7 "C:/Users/Admin/DaveWorkspaces/XMC4300_PWMTest/Libraries/XMCLib/inc/xmc_usbd.h"
 5160              	 .file 8 "C:/Users/Admin/DaveWorkspaces/XMC4300_PWMTest/Libraries/CMSIS/Include/cmsis_gcc.h"
 5161              	 .file 9 "C:/Users/Admin/DaveWorkspaces/XMC4300_PWMTest/Libraries/CMSIS/Include/core_cm4.h"
 5162              	 .file 10 "C:/Users/Admin/DaveWorkspaces/XMC4300_PWMTest/Libraries/CMSIS/Infineon/XMC4300_series/Include/system_XMC4300.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usbd.c
    {standard input}:24     .bss.XMC_USBD_EP_OUT_BUFFERSIZE:00000000 XMC_USBD_EP_OUT_BUFFERSIZE
    {standard input}:21     .bss.XMC_USBD_EP_OUT_BUFFERSIZE:00000000 $d
    {standard input}:31     .bss.XMC_USBD_EP_IN_BUFFERSIZE:00000000 XMC_USBD_EP_IN_BUFFERSIZE
    {standard input}:28     .bss.XMC_USBD_EP_IN_BUFFERSIZE:00000000 $d
                            *COM*:00000208 xmc_device
    {standard input}:35     USB_RAM:00000000 $d
    {standard input}:38     USB_RAM:00000000 XMC_USBD_EP_OUT_BUFFER
    {standard input}:43     USB_RAM:00000700 XMC_USBD_EP_IN_BUFFER
                            *COM*:00000004 usbd_init
    {standard input}:51     .rodata.Driver_USBD0:00000000 Driver_USBD0
    {standard input}:48     .rodata.Driver_USBD0:00000000 $d
    {standard input}:2973   .text.XMC_USBD_GetCapabilities:00000000 XMC_USBD_GetCapabilities
    {standard input}:3058   .text.XMC_USBD_Init:00000000 XMC_USBD_Init
    {standard input}:3400   .text.XMC_USBD_Uninitialize:00000000 XMC_USBD_Uninitialize
    {standard input}:3461   .text.XMC_USBD_DeviceConnect:00000000 XMC_USBD_DeviceConnect
    {standard input}:3521   .text.XMC_USBD_DeviceDisconnect:00000000 XMC_USBD_DeviceDisconnect
    {standard input}:3581   .text.XMC_USBD_DeviceGetState:00000000 XMC_USBD_DeviceGetState
    {standard input}:3997   .text.XMC_USBD_DeviceSetAddress:00000000 XMC_USBD_DeviceSetAddress
    {standard input}:4381   .text.XMC_USBD_EndpointConfigure:00000000 XMC_USBD_EndpointConfigure
    {standard input}:4821   .text.XMC_USBD_EndpointUnconfigure:00000000 XMC_USBD_EndpointUnconfigure
    {standard input}:4070   .text.XMC_USBD_EndpointStall:00000000 XMC_USBD_EndpointStall
    {standard input}:3657   .text.XMC_USBD_EndpointReadStart:00000000 XMC_USBD_EndpointReadStart
    {standard input}:3770   .text.XMC_USBD_EndpointRead:00000000 XMC_USBD_EndpointRead
    {standard input}:3870   .text.XMC_USBD_EndpointWrite:00000000 XMC_USBD_EndpointWrite
    {standard input}:4274   .text.XMC_USBD_EndpointAbort:00000000 XMC_USBD_EndpointAbort
    {standard input}:5043   .text.XMC_USBD_GetFrameNumber:00000000 XMC_USBD_GetFrameNumber
    {standard input}:5099   .text.XMC_USBD_IsEnumDone:00000000 XMC_USBD_IsEnumDone
    {standard input}:69     .text.XMC_USBD_lDeviceActive:00000000 $t
    {standard input}:74     .text.XMC_USBD_lDeviceActive:00000000 XMC_USBD_lDeviceActive
    {standard input}:160    .text.XMC_USBD_lDeviceActive:00000068 $d
    {standard input}:165    .text.XMC_USBD_lReadFifo:00000000 $t
    {standard input}:169    .text.XMC_USBD_lReadFifo:00000000 XMC_USBD_lReadFifo
    {standard input}:329    .text.XMC_USBD_lReadFifo:000000e4 $d
    {standard input}:334    .text.XMC_USBD_lWriteFifo:00000000 $t
    {standard input}:338    .text.XMC_USBD_lWriteFifo:00000000 XMC_USBD_lWriteFifo
    {standard input}:460    .text.XMC_USBD_lWriteFifo:000000a0 $d
    {standard input}:465    .text.XMC_USBD_lFlushTXFifo:00000000 $t
    {standard input}:469    .text.XMC_USBD_lFlushTXFifo:00000000 XMC_USBD_lFlushTXFifo
    {standard input}:565    .text.XMC_USBD_lFlushTXFifo:00000080 $d
    {standard input}:570    .text.XMC_USBD_lFlushRXFifo:00000000 $t
    {standard input}:574    .text.XMC_USBD_lFlushRXFifo:00000000 XMC_USBD_lFlushRXFifo
    {standard input}:658    .text.XMC_USBD_lFlushRXFifo:00000064 $d
    {standard input}:663    .text.XMC_USBD_lAssignTXFifo:00000000 $t
    {standard input}:667    .text.XMC_USBD_lAssignTXFifo:00000000 XMC_USBD_lAssignTXFifo
    {standard input}:757    .text.XMC_USBD_lAssignTXFifo:0000006c $d
    {standard input}:762    .text.XMC_USBD_lUnassignFifo:00000000 $t
    {standard input}:766    .text.XMC_USBD_lUnassignFifo:00000000 XMC_USBD_lUnassignFifo
    {standard input}:814    .text.XMC_USBD_lUnassignFifo:00000034 $d
    {standard input}:819    .text.XMC_USBD_lStartReadXfer:00000000 $t
    {standard input}:823    .text.XMC_USBD_lStartReadXfer:00000000 XMC_USBD_lStartReadXfer
    {standard input}:1037   .text.XMC_USBD_lStartReadXfer:00000170 $d
    {standard input}:1043   .text.XMC_USBD_lStartWriteXfer:00000000 $t
    {standard input}:1047   .text.XMC_USBD_lStartWriteXfer:00000000 XMC_USBD_lStartWriteXfer
    {standard input}:1272   .text.XMC_USBD_lStartWriteXfer:0000018c $d
    {standard input}:1278   .text.XMC_USBD_lHandleUSBReset:00000000 $t
    {standard input}:1282   .text.XMC_USBD_lHandleUSBReset:00000000 XMC_USBD_lHandleUSBReset
    {standard input}:2861   .text.XMC_USBD_EnableEventOUTEP:00000000 XMC_USBD_EnableEventOUTEP
    {standard input}:2917   .text.XMC_USBD_EnableEventINEP:00000000 XMC_USBD_EnableEventINEP
    {standard input}:2550   .text.XMC_USBD_ClearEvent:00000000 XMC_USBD_ClearEvent
    {standard input}:1486   .text.XMC_USBD_lHandleUSBReset:00000148 $d
    {standard input}:1491   .text.XMC_USBD_lHandleOTGInt:00000000 $t
    {standard input}:1495   .text.XMC_USBD_lHandleOTGInt:00000000 XMC_USBD_lHandleOTGInt
    {standard input}:2692   .text.XMC_USBD_lClearEventOTG:00000000 XMC_USBD_lClearEventOTG
    {standard input}:1550   .text.XMC_USBD_lHandleOTGInt:00000044 $d
    {standard input}:1555   .text.XMC_USBD_lHandleEnumDone:00000000 $t
    {standard input}:1559   .text.XMC_USBD_lHandleEnumDone:00000000 XMC_USBD_lHandleEnumDone
    {standard input}:1635   .text.XMC_USBD_lHandleEnumDone:00000074 $d
    {standard input}:1640   .text.XMC_USBD_lHandleOEPInt:00000000 $t
    {standard input}:1644   .text.XMC_USBD_lHandleOEPInt:00000000 XMC_USBD_lHandleOEPInt
    {standard input}:2803   .text.XMC_USBD_ClearEventOUTEP:00000000 XMC_USBD_ClearEventOUTEP
    {standard input}:1900   .text.XMC_USBD_lHandleOEPInt:000001b4 $d
    {standard input}:1905   .text.XMC_USBD_lHandleIEPInt:00000000 $t
    {standard input}:1909   .text.XMC_USBD_lHandleIEPInt:00000000 XMC_USBD_lHandleIEPInt
    {standard input}:2747   .text.XMC_USBD_ClearEventINEP:00000000 XMC_USBD_ClearEventINEP
    {standard input}:2166   .text.XMC_USBD_lHandleIEPInt:000001b4 $d
    {standard input}:2171   .text.XMC_USBD_lHandleRxFLvl:00000000 $t
    {standard input}:2175   .text.XMC_USBD_lHandleRxFLvl:00000000 XMC_USBD_lHandleRxFLvl
    {standard input}:2208   .text.XMC_USBD_lHandleRxFLvl:00000024 $d
    {standard input}:2214   .text.XMC_USBD_lHandleRxFLvl:0000003c $t
    {standard input}:2259   .text.XMC_USBD_lHandleRxFLvl:0000007c $d
    {standard input}:2264   .text.XMC_USBD_IRQHandler:00000000 $t
    {standard input}:2269   .text.XMC_USBD_IRQHandler:00000000 XMC_USBD_IRQHandler
    {standard input}:2466   .text.XMC_USBD_IRQHandler:00000148 $d
    {standard input}:2471   .text.XMC_USBD_Enable:00000000 $t
    {standard input}:2476   .text.XMC_USBD_Enable:00000000 XMC_USBD_Enable
    {standard input}:2503   .text.XMC_USBD_Enable:00000018 $d
    {standard input}:2508   .text.XMC_USBD_Disable:00000000 $t
    {standard input}:2513   .text.XMC_USBD_Disable:00000000 XMC_USBD_Disable
    {standard input}:2540   .text.XMC_USBD_Disable:00000018 $d
    {standard input}:2545   .text.XMC_USBD_ClearEvent:00000000 $t
    {standard input}:2580   .text.XMC_USBD_ClearEvent:0000001c $d
    {standard input}:2594   .text.XMC_USBD_ClearEvent:00000054 $t
    {standard input}:2683   .text.XMC_USBD_ClearEvent:000000c4 $d
    {standard input}:2688   .text.XMC_USBD_lClearEventOTG:00000000 $t
    {standard input}:2737   .text.XMC_USBD_lClearEventOTG:00000024 $d
    {standard input}:2742   .text.XMC_USBD_ClearEventINEP:00000000 $t
    {standard input}:2793   .text.XMC_USBD_ClearEventINEP:00000028 $d
    {standard input}:2798   .text.XMC_USBD_ClearEventOUTEP:00000000 $t
    {standard input}:2851   .text.XMC_USBD_ClearEventOUTEP:0000002c $d
    {standard input}:2856   .text.XMC_USBD_EnableEventOUTEP:00000000 $t
    {standard input}:2907   .text.XMC_USBD_EnableEventOUTEP:0000002c $d
    {standard input}:2912   .text.XMC_USBD_EnableEventINEP:00000000 $t
    {standard input}:2963   .text.XMC_USBD_EnableEventINEP:0000002c $d
    {standard input}:2968   .text.XMC_USBD_GetCapabilities:00000000 $t
    {standard input}:3053   .text.XMC_USBD_Init:00000000 $t
    {standard input}:3387   .text.XMC_USBD_Init:0000022c $d
    {standard input}:3395   .text.XMC_USBD_Uninitialize:00000000 $t
    {standard input}:3451   .text.XMC_USBD_Uninitialize:00000038 $d
    {standard input}:3456   .text.XMC_USBD_DeviceConnect:00000000 $t
    {standard input}:3511   .text.XMC_USBD_DeviceConnect:00000030 $d
    {standard input}:3516   .text.XMC_USBD_DeviceDisconnect:00000000 $t
    {standard input}:3571   .text.XMC_USBD_DeviceDisconnect:00000030 $d
    {standard input}:3576   .text.XMC_USBD_DeviceGetState:00000000 $t
    {standard input}:3647   .text.XMC_USBD_DeviceGetState:00000060 $d
    {standard input}:3652   .text.XMC_USBD_EndpointReadStart:00000000 $t
    {standard input}:3760   .text.XMC_USBD_EndpointReadStart:00000088 $d
    {standard input}:3765   .text.XMC_USBD_EndpointRead:00000000 $t
    {standard input}:3860   .text.XMC_USBD_EndpointRead:00000074 $d
    {standard input}:3865   .text.XMC_USBD_EndpointWrite:00000000 $t
    {standard input}:3987   .text.XMC_USBD_EndpointWrite:000000a4 $d
    {standard input}:3992   .text.XMC_USBD_DeviceSetAddress:00000000 $t
    {standard input}:4060   .text.XMC_USBD_DeviceSetAddress:00000048 $d
    {standard input}:4065   .text.XMC_USBD_EndpointStall:00000000 $t
    {standard input}:4264   .text.XMC_USBD_EndpointStall:00000148 $d
    {standard input}:4269   .text.XMC_USBD_EndpointAbort:00000000 $t
    {standard input}:4371   .text.XMC_USBD_EndpointAbort:00000084 $d
    {standard input}:4376   .text.XMC_USBD_EndpointConfigure:00000000 $t
    {standard input}:4742   .text.XMC_USBD_EndpointConfigure:00000274 $d
    {standard input}:4749   .text.XMC_USBD_EndpointConfigure:00000288 $t
    {standard input}:4811   .text.XMC_USBD_EndpointConfigure:000002f0 $d
    {standard input}:4816   .text.XMC_USBD_EndpointUnconfigure:00000000 $t
    {standard input}:5032   .text.XMC_USBD_EndpointUnconfigure:00000168 $d
    {standard input}:5038   .text.XMC_USBD_GetFrameNumber:00000000 $t
    {standard input}:5089   .text.XMC_USBD_GetFrameNumber:00000028 $d
    {standard input}:5094   .text.XMC_USBD_IsEnumDone:00000000 $t
    {standard input}:5148   .text.XMC_USBD_IsEnumDone:00000034 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_POWER_EnableUsb
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_POWER_DisableUsb
memset
memcpy
