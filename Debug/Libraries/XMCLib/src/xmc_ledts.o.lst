   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_ledts.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_LEDTS_InitGlobal,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_LEDTS_InitGlobal
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_LEDTS_InitGlobal:
  26              	.LFB179:
  27              	 .file 1 "../Libraries/XMCLib/src/xmc_ledts.c"
   1:../Libraries/XMCLib/src/xmc_ledts.c **** /**
   2:../Libraries/XMCLib/src/xmc_ledts.c ****  * @file xmc_ledts.c
   3:../Libraries/XMCLib/src/xmc_ledts.c ****  * @date 2017-02-25
   4:../Libraries/XMCLib/src/xmc_ledts.c ****  *
   5:../Libraries/XMCLib/src/xmc_ledts.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_ledts.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_ledts.c ****  *
   9:../Libraries/XMCLib/src/xmc_ledts.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_ledts.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_ledts.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_ledts.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_ledts.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_ledts.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_ledts.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_ledts.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_ledts.c ****  * 
  18:../Libraries/XMCLib/src/xmc_ledts.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_ledts.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_ledts.c ****  * 
  21:../Libraries/XMCLib/src/xmc_ledts.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_ledts.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_ledts.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_ledts.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_ledts.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_ledts.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_ledts.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_ledts.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_ledts.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_ledts.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_ledts.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_ledts.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_ledts.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  36:../Libraries/XMCLib/src/xmc_ledts.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_ledts.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  39:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - Initial draft <br>
  41:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - New API added: XMC_LEDTS_SetActivePADNo() <br>
  42:../Libraries/XMCLib/src/xmc_ledts.c ****  *      
  43:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2015-06-20:
  44:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  46:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2017-02-25:
  47:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - XMC_LEDTS_InitGlobal() fixed compilation warnings
  48:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  49:../Libraries/XMCLib/src/xmc_ledts.c ****  * <b>Detailed description of file:</b><br>
  50:../Libraries/XMCLib/src/xmc_ledts.c ****  * APIs for the functional blocks of LEDTS have been defined:<br>
  51:../Libraries/XMCLib/src/xmc_ledts.c ****  * -- GLOBAL (APIs prefixed with LEDTS_GLOBAL_) <br>
  52:../Libraries/XMCLib/src/xmc_ledts.c ****  * -- Clock configuration, Function/Event configuration, Interrupt configuration
  53:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  54:../Libraries/XMCLib/src/xmc_ledts.c ****  * @endcond
  55:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  56:../Libraries/XMCLib/src/xmc_ledts.c ****  */
  57:../Libraries/XMCLib/src/xmc_ledts.c **** 
  58:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  59:../Libraries/XMCLib/src/xmc_ledts.c ****  * HEADER FILES
  60:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  61:../Libraries/XMCLib/src/xmc_ledts.c **** #include <xmc_ledts.h>
  62:../Libraries/XMCLib/src/xmc_ledts.c **** 
  63:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS0)
  64:../Libraries/XMCLib/src/xmc_ledts.c **** #include "xmc_scu.h"
  65:../Libraries/XMCLib/src/xmc_ledts.c **** 
  66:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  67:../Libraries/XMCLib/src/xmc_ledts.c ****  * MACROS
  68:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  69:../Libraries/XMCLib/src/xmc_ledts.c **** #define XMC_LEDTS_CLOCK_NOT_RUNNING 0U
  70:../Libraries/XMCLib/src/xmc_ledts.c **** 
  71:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  72:../Libraries/XMCLib/src/xmc_ledts.c ****  * ENUMS
  73:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  74:../Libraries/XMCLib/src/xmc_ledts.c **** 
  75:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  76:../Libraries/XMCLib/src/xmc_ledts.c ****  * DATA STRUCTURES
  77:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  78:../Libraries/XMCLib/src/xmc_ledts.c **** 
  79:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  80:../Libraries/XMCLib/src/xmc_ledts.c ****  * GLOBAL DATA
  81:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  82:../Libraries/XMCLib/src/xmc_ledts.c **** 
  83:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  84:../Libraries/XMCLib/src/xmc_ledts.c ****  * LOCAL/UTILITY ROUTINES
  85:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  86:../Libraries/XMCLib/src/xmc_ledts.c **** 
  87:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  88:../Libraries/XMCLib/src/xmc_ledts.c ****  * API IMPLEMENTATION
  89:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  90:../Libraries/XMCLib/src/xmc_ledts.c **** 
  91:../Libraries/XMCLib/src/xmc_ledts.c **** /**
  92:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of global register
  93:../Libraries/XMCLib/src/xmc_ledts.c ****   */
  94:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitGlobal(XMC_LEDTS_t *const ledts, const XMC_LEDTS_GLOBAL_CONFIG_t *
  95:../Libraries/XMCLib/src/xmc_ledts.c **** {
  28              	 .loc 1 95 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 80B5     	 push {r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
  37 0002 82B0     	 sub sp,sp,#8
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 7860     	 str r0,[r7,#4]
  44 0008 3960     	 str r1,[r7]
  96:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_InitGlobal:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
  97:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_InitGlobal:Null Pointer", (config != (XMC_LEDTS_GLOBAL_CONFIG_t *)NULL));
  98:../Libraries/XMCLib/src/xmc_ledts.c **** 
  99:../Libraries/XMCLib/src/xmc_ledts.c ****   if (ledts == XMC_LEDTS0)
  45              	 .loc 1 99 0
  46 000a 7B68     	 ldr r3,[r7,#4]
  47 000c 0C4A     	 ldr r2,.L5
  48 000e 9342     	 cmp r3,r2
  49 0010 05D1     	 bne .L2
 100:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 101:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 102:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS0);
  50              	 .loc 1 102 0
  51 0012 0C48     	 ldr r0,.L5+4
  52 0014 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 103:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 104:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 105:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS0);
  53              	 .loc 1 105 0
  54 0018 0A48     	 ldr r0,.L5+4
  55 001a FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
  56              	.L2:
 106:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 107:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 108:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS1)
 109:../Libraries/XMCLib/src/xmc_ledts.c ****   else if (ledts == XMC_LEDTS1)
 110:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 111:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 112:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS1);
 113:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 114:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 115:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS1);
 116:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 117:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 118:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 119:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS2)
 120:../Libraries/XMCLib/src/xmc_ledts.c ****   else if (ledts == XMC_LEDTS2)
 121:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 122:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 123:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS2);
 124:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 125:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 126:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS2);
 127:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 128:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 129:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 130:../Libraries/XMCLib/src/xmc_ledts.c ****   else
 131:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 132:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_ASSERT("XMC_LEDTS_InitGlobal:Invalid Module Pointer", 0);
 133:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 134:../Libraries/XMCLib/src/xmc_ledts.c **** 
 135:../Libraries/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
  57              	 .loc 1 135 0
  58 001e 7B68     	 ldr r3,[r7,#4]
  59 0020 5B68     	 ldr r3,[r3,#4]
  60 0022 1B0C     	 lsrs r3,r3,#16
  61 0024 1B04     	 lsls r3,r3,#16
  62 0026 002B     	 cmp r3,#0
  63 0028 01D0     	 beq .L3
 136:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 137:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
  64              	 .loc 1 137 0
  65 002a 0123     	 movs r3,#1
  66 002c 04E0     	 b .L4
  67              	.L3:
 138:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 139:../Libraries/XMCLib/src/xmc_ledts.c **** 
 140:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL = config->globctl;
  68              	 .loc 1 140 0
  69 002e 3B68     	 ldr r3,[r7]
  70 0030 1A68     	 ldr r2,[r3]
  71 0032 7B68     	 ldr r3,[r7,#4]
  72 0034 5A60     	 str r2,[r3,#4]
 141:../Libraries/XMCLib/src/xmc_ledts.c **** 
 142:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
  73              	 .loc 1 142 0
  74 0036 0023     	 movs r3,#0
  75              	.L4:
 143:../Libraries/XMCLib/src/xmc_ledts.c **** }
  76              	 .loc 1 143 0
  77 0038 1846     	 mov r0,r3
  78 003a 0837     	 adds r7,r7,#8
  79              	.LCFI3:
  80              	 .cfi_def_cfa_offset 8
  81 003c BD46     	 mov sp,r7
  82              	.LCFI4:
  83              	 .cfi_def_cfa_register 13
  84              	 
  85 003e 80BD     	 pop {r7,pc}
  86              	.L6:
  87              	 .align 2
  88              	.L5:
  89 0040 00000148 	 .word 1208025088
  90 0044 08000010 	 .word 268435464
  91              	 .cfi_endproc
  92              	.LFE179:
  94              	 .section .text.XMC_LEDTS_InitLED,"ax",%progbits
  95              	 .align 2
  96              	 .global XMC_LEDTS_InitLED
  97              	 .thumb
  98              	 .thumb_func
 100              	XMC_LEDTS_InitLED:
 101              	.LFB180:
 144:../Libraries/XMCLib/src/xmc_ledts.c **** 
 145:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 146:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for LED-driving function
 147:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 148:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitLED(XMC_LEDTS_t *const ledts, const XMC_LEDTS_LED_CONFIG_t *config
 149:../Libraries/XMCLib/src/xmc_ledts.c **** {
 102              	 .loc 1 149 0
 103              	 .cfi_startproc
 104              	 
 105              	 
 106              	 
 107 0000 80B4     	 push {r7}
 108              	.LCFI5:
 109              	 .cfi_def_cfa_offset 4
 110              	 .cfi_offset 7,-4
 111 0002 83B0     	 sub sp,sp,#12
 112              	.LCFI6:
 113              	 .cfi_def_cfa_offset 16
 114 0004 00AF     	 add r7,sp,#0
 115              	.LCFI7:
 116              	 .cfi_def_cfa_register 7
 117 0006 7860     	 str r0,[r7,#4]
 118 0008 3960     	 str r1,[r7]
 150:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_LED_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 151:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_LED_Init:Null Pointer", (config != (XMC_LEDTS_LED_CONFIG_t *)NULL));
 152:../Libraries/XMCLib/src/xmc_ledts.c **** 
 153:../Libraries/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 119              	 .loc 1 153 0
 120 000a 7B68     	 ldr r3,[r7,#4]
 121 000c 5B68     	 ldr r3,[r3,#4]
 122 000e 1B0C     	 lsrs r3,r3,#16
 123 0010 1B04     	 lsls r3,r3,#16
 124 0012 002B     	 cmp r3,#0
 125 0014 01D0     	 beq .L8
 154:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 155:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 126              	 .loc 1 155 0
 127 0016 0123     	 movs r3,#1
 128 0018 13E0     	 b .L9
 129              	.L8:
 156:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 157:../Libraries/XMCLib/src/xmc_ledts.c **** 
 158:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= ~(LEDTS_FNCTL_COLLEV_Msk | LEDTS_FNCTL_NR_LEDCOL_Msk);
 130              	 .loc 1 158 0
 131 001a 7B68     	 ldr r3,[r7,#4]
 132 001c 9B68     	 ldr r3,[r3,#8]
 133 001e 23F07042 	 bic r2,r3,#-268435456
 134 0022 7B68     	 ldr r3,[r7,#4]
 135 0024 9A60     	 str r2,[r3,#8]
 159:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 136              	 .loc 1 159 0
 137 0026 7B68     	 ldr r3,[r7,#4]
 138 0028 9A68     	 ldr r2,[r3,#8]
 139 002a 3B68     	 ldr r3,[r7]
 140 002c 1B68     	 ldr r3,[r3]
 141 002e 1A43     	 orrs r2,r2,r3
 142 0030 7B68     	 ldr r3,[r7,#4]
 143 0032 9A60     	 str r2,[r3,#8]
 160:../Libraries/XMCLib/src/xmc_ledts.c **** 
 161:../Libraries/XMCLib/src/xmc_ledts.c ****   /* Enable LED function */
 162:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= LEDTS_GLOBCTL_LD_EN_Msk;
 144              	 .loc 1 162 0
 145 0034 7B68     	 ldr r3,[r7,#4]
 146 0036 5B68     	 ldr r3,[r3,#4]
 147 0038 43F00202 	 orr r2,r3,#2
 148 003c 7B68     	 ldr r3,[r7,#4]
 149 003e 5A60     	 str r2,[r3,#4]
 163:../Libraries/XMCLib/src/xmc_ledts.c **** 
 164:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 150              	 .loc 1 164 0
 151 0040 0023     	 movs r3,#0
 152              	.L9:
 165:../Libraries/XMCLib/src/xmc_ledts.c **** }
 153              	 .loc 1 165 0
 154 0042 1846     	 mov r0,r3
 155 0044 0C37     	 adds r7,r7,#12
 156              	.LCFI8:
 157              	 .cfi_def_cfa_offset 4
 158 0046 BD46     	 mov sp,r7
 159              	.LCFI9:
 160              	 .cfi_def_cfa_register 13
 161              	 
 162 0048 5DF8047B 	 ldr r7,[sp],#4
 163              	.LCFI10:
 164              	 .cfi_restore 7
 165              	 .cfi_def_cfa_offset 0
 166 004c 7047     	 bx lr
 167              	 .cfi_endproc
 168              	.LFE180:
 170 004e 00BF     	 .section .text.XMC_LEDTS_InitTSBasic,"ax",%progbits
 171              	 .align 2
 172              	 .global XMC_LEDTS_InitTSBasic
 173              	 .thumb
 174              	 .thumb_func
 176              	XMC_LEDTS_InitTSBasic:
 177              	.LFB181:
 166:../Libraries/XMCLib/src/xmc_ledts.c **** 
 167:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 168:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for basic Touch-Sense control function
 169:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 170:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitTSBasic(XMC_LEDTS_t *const ledts, const XMC_LEDTS_TS_CONFIG_BASIC_
 171:../Libraries/XMCLib/src/xmc_ledts.c **** {
 178              	 .loc 1 171 0
 179              	 .cfi_startproc
 180              	 
 181              	 
 182              	 
 183 0000 80B4     	 push {r7}
 184              	.LCFI11:
 185              	 .cfi_def_cfa_offset 4
 186              	 .cfi_offset 7,-4
 187 0002 85B0     	 sub sp,sp,#20
 188              	.LCFI12:
 189              	 .cfi_def_cfa_offset 24
 190 0004 00AF     	 add r7,sp,#0
 191              	.LCFI13:
 192              	 .cfi_def_cfa_register 7
 193 0006 7860     	 str r0,[r7,#4]
 194 0008 3960     	 str r1,[r7]
 172:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 173:../Libraries/XMCLib/src/xmc_ledts.c **** 
 174:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Basic_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 175:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Basic_Init:Null Pointer", (config != (XMC_LEDTS_TS_CONFIG_BASIC_t *)NULL
 176:../Libraries/XMCLib/src/xmc_ledts.c **** 
 177:../Libraries/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 195              	 .loc 1 177 0
 196 000a 7B68     	 ldr r3,[r7,#4]
 197 000c 5B68     	 ldr r3,[r3,#4]
 198 000e 1B0C     	 lsrs r3,r3,#16
 199 0010 1B04     	 lsls r3,r3,#16
 200 0012 002B     	 cmp r3,#0
 201 0014 01D0     	 beq .L11
 178:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 179:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 202              	 .loc 1 179 0
 203 0016 0123     	 movs r3,#1
 204 0018 15E0     	 b .L12
 205              	.L11:
 180:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 181:../Libraries/XMCLib/src/xmc_ledts.c **** 
 182:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_FNCTL_ACCCNT_Msk | LEDTS_FNCTL_TSCCMP_Msk | LEDTS_FNCTL_TSCTRR_Msk | LEDTS_FNCTL_TS
 206              	 .loc 1 182 0
 207 001a 0E4B     	 ldr r3,.L13
 208 001c FB60     	 str r3,[r7,#12]
 183:../Libraries/XMCLib/src/xmc_ledts.c **** 		 LEDTS_FNCTL_NR_TSIN_Msk);
 184:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= (reg);
 209              	 .loc 1 184 0
 210 001e 7B68     	 ldr r3,[r7,#4]
 211 0020 9A68     	 ldr r2,[r3,#8]
 212 0022 FB68     	 ldr r3,[r7,#12]
 213 0024 1A40     	 ands r2,r2,r3
 214 0026 7B68     	 ldr r3,[r7,#4]
 215 0028 9A60     	 str r2,[r3,#8]
 185:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 216              	 .loc 1 185 0
 217 002a 7B68     	 ldr r3,[r7,#4]
 218 002c 9A68     	 ldr r2,[r3,#8]
 219 002e 3B68     	 ldr r3,[r7]
 220 0030 1B68     	 ldr r3,[r3]
 221 0032 1A43     	 orrs r2,r2,r3
 222 0034 7B68     	 ldr r3,[r7,#4]
 223 0036 9A60     	 str r2,[r3,#8]
 186:../Libraries/XMCLib/src/xmc_ledts.c **** 
 187:../Libraries/XMCLib/src/xmc_ledts.c ****   /* Enable TS function */
 188:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= LEDTS_GLOBCTL_TS_EN_Msk;
 224              	 .loc 1 188 0
 225 0038 7B68     	 ldr r3,[r7,#4]
 226 003a 5B68     	 ldr r3,[r3,#4]
 227 003c 43F00102 	 orr r2,r3,#1
 228 0040 7B68     	 ldr r3,[r7,#4]
 229 0042 5A60     	 str r2,[r3,#4]
 189:../Libraries/XMCLib/src/xmc_ledts.c **** 
 190:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 230              	 .loc 1 190 0
 231 0044 0023     	 movs r3,#0
 232              	.L12:
 191:../Libraries/XMCLib/src/xmc_ledts.c **** }
 233              	 .loc 1 191 0
 234 0046 1846     	 mov r0,r3
 235 0048 1437     	 adds r7,r7,#20
 236              	.LCFI14:
 237              	 .cfi_def_cfa_offset 4
 238 004a BD46     	 mov sp,r7
 239              	.LCFI15:
 240              	 .cfi_def_cfa_register 13
 241              	 
 242 004c 5DF8047B 	 ldr r7,[sp],#4
 243              	.LCFI16:
 244              	 .cfi_restore 7
 245              	 .cfi_def_cfa_offset 0
 246 0050 7047     	 bx lr
 247              	.L14:
 248 0052 00BF     	 .align 2
 249              	.L13:
 250 0054 FFFF60F0 	 .word -262078465
 251              	 .cfi_endproc
 252              	.LFE181:
 254              	 .section .text.XMC_LEDTS_InitTSAdvanced,"ax",%progbits
 255              	 .align 2
 256              	 .global XMC_LEDTS_InitTSAdvanced
 257              	 .thumb
 258              	 .thumb_func
 260              	XMC_LEDTS_InitTSAdvanced:
 261              	.LFB182:
 192:../Libraries/XMCLib/src/xmc_ledts.c **** 
 193:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 194:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for advanced Touch-Sense control function
 195:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 196:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitTSAdvanced (XMC_LEDTS_t *const ledts, const XMC_LEDTS_TS_CONFIG_AD
 197:../Libraries/XMCLib/src/xmc_ledts.c **** {
 262              	 .loc 1 197 0
 263              	 .cfi_startproc
 264              	 
 265              	 
 266              	 
 267 0000 80B4     	 push {r7}
 268              	.LCFI17:
 269              	 .cfi_def_cfa_offset 4
 270              	 .cfi_offset 7,-4
 271 0002 85B0     	 sub sp,sp,#20
 272              	.LCFI18:
 273              	 .cfi_def_cfa_offset 24
 274 0004 00AF     	 add r7,sp,#0
 275              	.LCFI19:
 276              	 .cfi_def_cfa_register 7
 277 0006 7860     	 str r0,[r7,#4]
 278 0008 3960     	 str r1,[r7]
 198:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 199:../Libraries/XMCLib/src/xmc_ledts.c **** 
 200:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Advanced_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 201:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Advanced_Init:Null Pointer", (config != (XMC_LEDTS_TS_CONFIG_ADVANCED_t 
 202:../Libraries/XMCLib/src/xmc_ledts.c **** 
 203:../Libraries/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 279              	 .loc 1 203 0
 280 000a 7B68     	 ldr r3,[r7,#4]
 281 000c 5B68     	 ldr r3,[r3,#4]
 282 000e 1B0C     	 lsrs r3,r3,#16
 283 0010 1B04     	 lsls r3,r3,#16
 284 0012 002B     	 cmp r3,#0
 285 0014 01D0     	 beq .L16
 204:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 205:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 286              	 .loc 1 205 0
 287 0016 0123     	 movs r3,#1
 288 0018 1FE0     	 b .L17
 289              	.L16:
 206:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 207:../Libraries/XMCLib/src/xmc_ledts.c **** 
 208:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_GLOBCTL_MASKVAL_Msk | LEDTS_GLOBCTL_FENVAL_Msk);
 290              	 .loc 1 208 0
 291 001a 6FF4F053 	 mvn r3,#7680
 292 001e FB60     	 str r3,[r7,#12]
 209:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL &= (reg);
 293              	 .loc 1 209 0
 294 0020 7B68     	 ldr r3,[r7,#4]
 295 0022 5A68     	 ldr r2,[r3,#4]
 296 0024 FB68     	 ldr r3,[r7,#12]
 297 0026 1A40     	 ands r2,r2,r3
 298 0028 7B68     	 ldr r3,[r7,#4]
 299 002a 5A60     	 str r2,[r3,#4]
 210:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= (config->globctl);
 300              	 .loc 1 210 0
 301 002c 7B68     	 ldr r3,[r7,#4]
 302 002e 5A68     	 ldr r2,[r3,#4]
 303 0030 3B68     	 ldr r3,[r7]
 304 0032 1B68     	 ldr r3,[r3]
 305 0034 1A43     	 orrs r2,r2,r3
 306 0036 7B68     	 ldr r3,[r7,#4]
 307 0038 5A60     	 str r2,[r3,#4]
 211:../Libraries/XMCLib/src/xmc_ledts.c **** 
 212:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_FNCTL_PADT_Msk | LEDTS_FNCTL_PADTSW_Msk | LEDTS_FNCTL_EPULL_Msk | LEDTS_FNCTL_TSOEX
 308              	 .loc 1 212 0
 309 003a 0B4B     	 ldr r3,.L18
 310 003c FB60     	 str r3,[r7,#12]
 213:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= (reg);
 311              	 .loc 1 213 0
 312 003e 7B68     	 ldr r3,[r7,#4]
 313 0040 9A68     	 ldr r2,[r3,#8]
 314 0042 FB68     	 ldr r3,[r7,#12]
 315 0044 1A40     	 ands r2,r2,r3
 316 0046 7B68     	 ldr r3,[r7,#4]
 317 0048 9A60     	 str r2,[r3,#8]
 214:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 318              	 .loc 1 214 0
 319 004a 7B68     	 ldr r3,[r7,#4]
 320 004c 9A68     	 ldr r2,[r3,#8]
 321 004e 3B68     	 ldr r3,[r7]
 322 0050 5B68     	 ldr r3,[r3,#4]
 323 0052 1A43     	 orrs r2,r2,r3
 324 0054 7B68     	 ldr r3,[r7,#4]
 325 0056 9A60     	 str r2,[r3,#8]
 215:../Libraries/XMCLib/src/xmc_ledts.c **** 
 216:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 326              	 .loc 1 216 0
 327 0058 0023     	 movs r3,#0
 328              	.L17:
 217:../Libraries/XMCLib/src/xmc_ledts.c **** }
 329              	 .loc 1 217 0
 330 005a 1846     	 mov r0,r3
 331 005c 1437     	 adds r7,r7,#20
 332              	.LCFI20:
 333              	 .cfi_def_cfa_offset 4
 334 005e BD46     	 mov sp,r7
 335              	.LCFI21:
 336              	 .cfi_def_cfa_register 13
 337              	 
 338 0060 5DF8047B 	 ldr r7,[sp],#4
 339              	.LCFI22:
 340              	 .cfi_restore 7
 341              	 .cfi_def_cfa_offset 0
 342 0064 7047     	 bx lr
 343              	.L19:
 344 0066 00BF     	 .align 2
 345              	.L18:
 346 0068 E0FF9FFF 	 .word -6291488
 347              	 .cfi_endproc
 348              	.LFE182:
 350              	 .section .text.XMC_LEDTS_StartCounter,"ax",%progbits
 351              	 .align 2
 352              	 .global XMC_LEDTS_StartCounter
 353              	 .thumb
 354              	 .thumb_func
 356              	XMC_LEDTS_StartCounter:
 357              	.LFB183:
 218:../Libraries/XMCLib/src/xmc_ledts.c **** 
 219:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 220:../Libraries/XMCLib/src/xmc_ledts.c ****   * Starts LEDTS-counter
 221:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 222:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_StartCounter(XMC_LEDTS_t *const ledts, const uint16_t prescaler)
 223:../Libraries/XMCLib/src/xmc_ledts.c **** {
 358              	 .loc 1 223 0
 359              	 .cfi_startproc
 360              	 
 361              	 
 362              	 
 363 0000 80B4     	 push {r7}
 364              	.LCFI23:
 365              	 .cfi_def_cfa_offset 4
 366              	 .cfi_offset 7,-4
 367 0002 83B0     	 sub sp,sp,#12
 368              	.LCFI24:
 369              	 .cfi_def_cfa_offset 16
 370 0004 00AF     	 add r7,sp,#0
 371              	.LCFI25:
 372              	 .cfi_def_cfa_register 7
 373 0006 7860     	 str r0,[r7,#4]
 374 0008 0B46     	 mov r3,r1
 375 000a 7B80     	 strh r3,[r7,#2]
 224:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Start_Counter:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 225:../Libraries/XMCLib/src/xmc_ledts.c **** 
 226:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= prescaler<<16U;
 376              	 .loc 1 226 0
 377 000c 7B68     	 ldr r3,[r7,#4]
 378 000e 5B68     	 ldr r3,[r3,#4]
 379 0010 7A88     	 ldrh r2,[r7,#2]
 380 0012 1204     	 lsls r2,r2,#16
 381 0014 1A43     	 orrs r2,r2,r3
 382 0016 7B68     	 ldr r3,[r7,#4]
 383 0018 5A60     	 str r2,[r3,#4]
 227:../Libraries/XMCLib/src/xmc_ledts.c **** }
 384              	 .loc 1 227 0
 385 001a 0C37     	 adds r7,r7,#12
 386              	.LCFI26:
 387              	 .cfi_def_cfa_offset 4
 388 001c BD46     	 mov sp,r7
 389              	.LCFI27:
 390              	 .cfi_def_cfa_register 13
 391              	 
 392 001e 5DF8047B 	 ldr r7,[sp],#4
 393              	.LCFI28:
 394              	 .cfi_restore 7
 395              	 .cfi_def_cfa_offset 0
 396 0022 7047     	 bx lr
 397              	 .cfi_endproc
 398              	.LFE183:
 400              	 .section .text.XMC_LEDTS_StopCounter,"ax",%progbits
 401              	 .align 2
 402              	 .global XMC_LEDTS_StopCounter
 403              	 .thumb
 404              	 .thumb_func
 406              	XMC_LEDTS_StopCounter:
 407              	.LFB184:
 228:../Libraries/XMCLib/src/xmc_ledts.c **** 
 229:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 230:../Libraries/XMCLib/src/xmc_ledts.c ****   * Stops LEDTS-counter
 231:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 232:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_StopCounter(XMC_LEDTS_t *const ledts)
 233:../Libraries/XMCLib/src/xmc_ledts.c **** {
 408              	 .loc 1 233 0
 409              	 .cfi_startproc
 410              	 
 411              	 
 412              	 
 413 0000 80B4     	 push {r7}
 414              	.LCFI29:
 415              	 .cfi_def_cfa_offset 4
 416              	 .cfi_offset 7,-4
 417 0002 83B0     	 sub sp,sp,#12
 418              	.LCFI30:
 419              	 .cfi_def_cfa_offset 16
 420 0004 00AF     	 add r7,sp,#0
 421              	.LCFI31:
 422              	 .cfi_def_cfa_register 7
 423 0006 7860     	 str r0,[r7,#4]
 234:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Stop_Counter:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 235:../Libraries/XMCLib/src/xmc_ledts.c **** 
 236:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL &= 0x0000FFFF;
 424              	 .loc 1 236 0
 425 0008 7B68     	 ldr r3,[r7,#4]
 426 000a 5B68     	 ldr r3,[r3,#4]
 427 000c 9AB2     	 uxth r2,r3
 428 000e 7B68     	 ldr r3,[r7,#4]
 429 0010 5A60     	 str r2,[r3,#4]
 237:../Libraries/XMCLib/src/xmc_ledts.c **** }
 430              	 .loc 1 237 0
 431 0012 0C37     	 adds r7,r7,#12
 432              	.LCFI32:
 433              	 .cfi_def_cfa_offset 4
 434 0014 BD46     	 mov sp,r7
 435              	.LCFI33:
 436              	 .cfi_def_cfa_register 13
 437              	 
 438 0016 5DF8047B 	 ldr r7,[sp],#4
 439              	.LCFI34:
 440              	 .cfi_restore 7
 441              	 .cfi_def_cfa_offset 0
 442 001a 7047     	 bx lr
 443              	 .cfi_endproc
 444              	.LFE184:
 446              	 .section .text.XMC_LEDTS_ReadInterruptFlag,"ax",%progbits
 447              	 .align 2
 448              	 .global XMC_LEDTS_ReadInterruptFlag
 449              	 .thumb
 450              	 .thumb_func
 452              	XMC_LEDTS_ReadInterruptFlag:
 453              	.LFB185:
 238:../Libraries/XMCLib/src/xmc_ledts.c **** 
 239:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 240:../Libraries/XMCLib/src/xmc_ledts.c ****   * Reads time interrupt flags
 241:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 242:../Libraries/XMCLib/src/xmc_ledts.c **** uint32_t XMC_LEDTS_ReadInterruptFlag(XMC_LEDTS_t *const ledts)
 243:../Libraries/XMCLib/src/xmc_ledts.c **** {
 454              	 .loc 1 243 0
 455              	 .cfi_startproc
 456              	 
 457              	 
 458              	 
 459 0000 80B4     	 push {r7}
 460              	.LCFI35:
 461              	 .cfi_def_cfa_offset 4
 462              	 .cfi_offset 7,-4
 463 0002 83B0     	 sub sp,sp,#12
 464              	.LCFI36:
 465              	 .cfi_def_cfa_offset 16
 466 0004 00AF     	 add r7,sp,#0
 467              	.LCFI37:
 468              	 .cfi_def_cfa_register 7
 469 0006 7860     	 str r0,[r7,#4]
 244:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_ReadInterruptFlag:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts))
 245:../Libraries/XMCLib/src/xmc_ledts.c **** 
 246:../Libraries/XMCLib/src/xmc_ledts.c ****   return (ledts->EVFR & 0xF);
 470              	 .loc 1 246 0
 471 0008 7B68     	 ldr r3,[r7,#4]
 472 000a DB68     	 ldr r3,[r3,#12]
 473 000c 03F00F03 	 and r3,r3,#15
 247:../Libraries/XMCLib/src/xmc_ledts.c **** }
 474              	 .loc 1 247 0
 475 0010 1846     	 mov r0,r3
 476 0012 0C37     	 adds r7,r7,#12
 477              	.LCFI38:
 478              	 .cfi_def_cfa_offset 4
 479 0014 BD46     	 mov sp,r7
 480              	.LCFI39:
 481              	 .cfi_def_cfa_register 13
 482              	 
 483 0016 5DF8047B 	 ldr r7,[sp],#4
 484              	.LCFI40:
 485              	 .cfi_restore 7
 486              	 .cfi_def_cfa_offset 0
 487 001a 7047     	 bx lr
 488              	 .cfi_endproc
 489              	.LFE185:
 491              	 .section .text.XMC_LEDTS_SetActivePADNo,"ax",%progbits
 492              	 .align 2
 493              	 .global XMC_LEDTS_SetActivePADNo
 494              	 .thumb
 495              	 .thumb_func
 497              	XMC_LEDTS_SetActivePADNo:
 498              	.LFB186:
 248:../Libraries/XMCLib/src/xmc_ledts.c **** 
 249:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 250:../Libraries/XMCLib/src/xmc_ledts.c ****   * Set the active pad number
 251:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 252:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetActivePADNo(XMC_LEDTS_t *const ledts, XMC_LEDTS_NUMBER_TS_INPUT_t pad_num)
 253:../Libraries/XMCLib/src/xmc_ledts.c **** {
 499              	 .loc 1 253 0
 500              	 .cfi_startproc
 501              	 
 502              	 
 503              	 
 504 0000 80B4     	 push {r7}
 505              	.LCFI41:
 506              	 .cfi_def_cfa_offset 4
 507              	 .cfi_offset 7,-4
 508 0002 85B0     	 sub sp,sp,#20
 509              	.LCFI42:
 510              	 .cfi_def_cfa_offset 24
 511 0004 00AF     	 add r7,sp,#0
 512              	.LCFI43:
 513              	 .cfi_def_cfa_register 7
 514 0006 7860     	 str r0,[r7,#4]
 515 0008 0B46     	 mov r3,r1
 516 000a FB70     	 strb r3,[r7,#3]
 254:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 255:../Libraries/XMCLib/src/xmc_ledts.c **** 
 256:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_SetActivePADNo:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 257:../Libraries/XMCLib/src/xmc_ledts.c **** 
 258:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->FNCTL;
 517              	 .loc 1 258 0
 518 000c 7B68     	 ldr r3,[r7,#4]
 519 000e 9B68     	 ldr r3,[r3,#8]
 520 0010 FB60     	 str r3,[r7,#12]
 259:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= ~(LEDTS_FNCTL_PADT_Msk);
 521              	 .loc 1 259 0
 522 0012 FB68     	 ldr r3,[r7,#12]
 523 0014 23F00703 	 bic r3,r3,#7
 524 0018 FB60     	 str r3,[r7,#12]
 260:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= (uint32_t)pad_num;
 525              	 .loc 1 260 0
 526 001a FB78     	 ldrb r3,[r7,#3]
 527 001c FA68     	 ldr r2,[r7,#12]
 528 001e 1343     	 orrs r3,r3,r2
 529 0020 FB60     	 str r3,[r7,#12]
 261:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL = reg;
 530              	 .loc 1 261 0
 531 0022 7B68     	 ldr r3,[r7,#4]
 532 0024 FA68     	 ldr r2,[r7,#12]
 533 0026 9A60     	 str r2,[r3,#8]
 262:../Libraries/XMCLib/src/xmc_ledts.c **** }
 534              	 .loc 1 262 0
 535 0028 1437     	 adds r7,r7,#20
 536              	.LCFI44:
 537              	 .cfi_def_cfa_offset 4
 538 002a BD46     	 mov sp,r7
 539              	.LCFI45:
 540              	 .cfi_def_cfa_register 13
 541              	 
 542 002c 5DF8047B 	 ldr r7,[sp],#4
 543              	.LCFI46:
 544              	 .cfi_restore 7
 545              	 .cfi_def_cfa_offset 0
 546 0030 7047     	 bx lr
 547              	 .cfi_endproc
 548              	.LFE186:
 550 0032 00BF     	 .section .text.XMC_LEDTS_ClearInterruptFlag,"ax",%progbits
 551              	 .align 2
 552              	 .global XMC_LEDTS_ClearInterruptFlag
 553              	 .thumb
 554              	 .thumb_func
 556              	XMC_LEDTS_ClearInterruptFlag:
 557              	.LFB187:
 263:../Libraries/XMCLib/src/xmc_ledts.c **** 
 264:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 265:../Libraries/XMCLib/src/xmc_ledts.c ****   * Clears interrupt indication flags
 266:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 267:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_ClearInterruptFlag(XMC_LEDTS_t *const ledts, uint32_t interrupt_mask)
 268:../Libraries/XMCLib/src/xmc_ledts.c **** {
 558              	 .loc 1 268 0
 559              	 .cfi_startproc
 560              	 
 561              	 
 562              	 
 563 0000 80B4     	 push {r7}
 564              	.LCFI47:
 565              	 .cfi_def_cfa_offset 4
 566              	 .cfi_offset 7,-4
 567 0002 83B0     	 sub sp,sp,#12
 568              	.LCFI48:
 569              	 .cfi_def_cfa_offset 16
 570 0004 00AF     	 add r7,sp,#0
 571              	.LCFI49:
 572              	 .cfi_def_cfa_register 7
 573 0006 7860     	 str r0,[r7,#4]
 574 0008 3960     	 str r1,[r7]
 269:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_ClearInterruptFlag:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts)
 270:../Libraries/XMCLib/src/xmc_ledts.c **** 
 271:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->EVFR = (interrupt_mask << LEDTS_EVFR_CTSF_Pos);
 575              	 .loc 1 271 0
 576 000a 3B68     	 ldr r3,[r7]
 577 000c 1A04     	 lsls r2,r3,#16
 578 000e 7B68     	 ldr r3,[r7,#4]
 579 0010 DA60     	 str r2,[r3,#12]
 272:../Libraries/XMCLib/src/xmc_ledts.c **** }
 580              	 .loc 1 272 0
 581 0012 0C37     	 adds r7,r7,#12
 582              	.LCFI50:
 583              	 .cfi_def_cfa_offset 4
 584 0014 BD46     	 mov sp,r7
 585              	.LCFI51:
 586              	 .cfi_def_cfa_register 13
 587              	 
 588 0016 5DF8047B 	 ldr r7,[sp],#4
 589              	.LCFI52:
 590              	 .cfi_restore 7
 591              	 .cfi_def_cfa_offset 0
 592 001a 7047     	 bx lr
 593              	 .cfi_endproc
 594              	.LFE187:
 596              	 .section .text.XMC_LEDTS_SetLEDLinePattern,"ax",%progbits
 597              	 .align 2
 598              	 .global XMC_LEDTS_SetLEDLinePattern
 599              	 .thumb
 600              	 .thumb_func
 602              	XMC_LEDTS_SetLEDLinePattern:
 603              	.LFB188:
 273:../Libraries/XMCLib/src/xmc_ledts.c **** 
 274:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 275:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to output pattern on an LED column in LED matrix
 276:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 277:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetLEDLinePattern(XMC_LEDTS_t *const ledts, XMC_LEDTS_LED_COLUMN_t column, const uin
 278:../Libraries/XMCLib/src/xmc_ledts.c **** {
 604              	 .loc 1 278 0
 605              	 .cfi_startproc
 606              	 
 607              	 
 608              	 
 609 0000 80B4     	 push {r7}
 610              	.LCFI53:
 611              	 .cfi_def_cfa_offset 4
 612              	 .cfi_offset 7,-4
 613 0002 85B0     	 sub sp,sp,#20
 614              	.LCFI54:
 615              	 .cfi_def_cfa_offset 24
 616 0004 00AF     	 add r7,sp,#0
 617              	.LCFI55:
 618              	 .cfi_def_cfa_register 7
 619 0006 7860     	 str r0,[r7,#4]
 620 0008 0B46     	 mov r3,r1
 621 000a FB70     	 strb r3,[r7,#3]
 622 000c 1346     	 mov r3,r2
 623 000e BB70     	 strb r3,[r7,#2]
 279:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 280:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)column) >> 2;
 624              	 .loc 1 280 0
 625 0010 FB78     	 ldrb r3,[r7,#3]
 626 0012 9B08     	 lsrs r3,r3,#2
 627 0014 FB73     	 strb r3,[r7,#15]
 281:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)column & 0x03) * 8;
 628              	 .loc 1 281 0
 629 0016 FB78     	 ldrb r3,[r7,#3]
 630 0018 03F00303 	 and r3,r3,#3
 631 001c DBB2     	 uxtb r3,r3
 632 001e DB00     	 lsls r3,r3,#3
 633 0020 BB73     	 strb r3,[r7,#14]
 282:../Libraries/XMCLib/src/xmc_ledts.c **** 
 283:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_LED_Line_Pattern:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledt
 284:../Libraries/XMCLib/src/xmc_ledts.c **** 
 285:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->LINE[reg_index];
 634              	 .loc 1 285 0
 635 0022 FB7B     	 ldrb r3,[r7,#15]
 636 0024 7A68     	 ldr r2,[r7,#4]
 637 0026 0433     	 adds r3,r3,#4
 638 0028 9B00     	 lsls r3,r3,#2
 639 002a 1344     	 add r3,r3,r2
 640 002c 5B68     	 ldr r3,[r3,#4]
 641 002e BB60     	 str r3,[r7,#8]
 286:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= (~(0xff << bit_shift_count));
 642              	 .loc 1 286 0
 643 0030 BB7B     	 ldrb r3,[r7,#14]
 644 0032 FF22     	 movs r2,#255
 645 0034 02FA03F3 	 lsl r3,r2,r3
 646 0038 DB43     	 mvns r3,r3
 647 003a 1A46     	 mov r2,r3
 648 003c BB68     	 ldr r3,[r7,#8]
 649 003e 1340     	 ands r3,r3,r2
 650 0040 BB60     	 str r3,[r7,#8]
 287:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= pattern << bit_shift_count;
 651              	 .loc 1 287 0
 652 0042 BA78     	 ldrb r2,[r7,#2]
 653 0044 BB7B     	 ldrb r3,[r7,#14]
 654 0046 02FA03F3 	 lsl r3,r2,r3
 655 004a 1A46     	 mov r2,r3
 656 004c BB68     	 ldr r3,[r7,#8]
 657 004e 1343     	 orrs r3,r3,r2
 658 0050 BB60     	 str r3,[r7,#8]
 288:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->LINE[reg_index] = reg;
 659              	 .loc 1 288 0
 660 0052 FB7B     	 ldrb r3,[r7,#15]
 661 0054 7A68     	 ldr r2,[r7,#4]
 662 0056 0433     	 adds r3,r3,#4
 663 0058 9B00     	 lsls r3,r3,#2
 664 005a 1344     	 add r3,r3,r2
 665 005c BA68     	 ldr r2,[r7,#8]
 666 005e 5A60     	 str r2,[r3,#4]
 289:../Libraries/XMCLib/src/xmc_ledts.c **** 
 290:../Libraries/XMCLib/src/xmc_ledts.c **** }
 667              	 .loc 1 290 0
 668 0060 1437     	 adds r7,r7,#20
 669              	.LCFI56:
 670              	 .cfi_def_cfa_offset 4
 671 0062 BD46     	 mov sp,r7
 672              	.LCFI57:
 673              	 .cfi_def_cfa_register 13
 674              	 
 675 0064 5DF8047B 	 ldr r7,[sp],#4
 676              	.LCFI58:
 677              	 .cfi_restore 7
 678              	 .cfi_def_cfa_offset 0
 679 0068 7047     	 bx lr
 680              	 .cfi_endproc
 681              	.LFE188:
 683 006a 00BF     	 .section .text.XMC_LEDTS_SetColumnBrightness,"ax",%progbits
 684              	 .align 2
 685              	 .global XMC_LEDTS_SetColumnBrightness
 686              	 .thumb
 687              	 .thumb_func
 689              	XMC_LEDTS_SetColumnBrightness:
 690              	.LFB189:
 291:../Libraries/XMCLib/src/xmc_ledts.c **** 
 292:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 293:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to adjust brightness of an LED column in LED matrix
 294:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 295:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetColumnBrightness(XMC_LEDTS_t *const ledts, XMC_LEDTS_LED_COLUMN_t column, const u
 296:../Libraries/XMCLib/src/xmc_ledts.c **** {
 691              	 .loc 1 296 0
 692              	 .cfi_startproc
 693              	 
 694              	 
 695              	 
 696 0000 80B4     	 push {r7}
 697              	.LCFI59:
 698              	 .cfi_def_cfa_offset 4
 699              	 .cfi_offset 7,-4
 700 0002 85B0     	 sub sp,sp,#20
 701              	.LCFI60:
 702              	 .cfi_def_cfa_offset 24
 703 0004 00AF     	 add r7,sp,#0
 704              	.LCFI61:
 705              	 .cfi_def_cfa_register 7
 706 0006 7860     	 str r0,[r7,#4]
 707 0008 0B46     	 mov r3,r1
 708 000a FB70     	 strb r3,[r7,#3]
 709 000c 1346     	 mov r3,r2
 710 000e BB70     	 strb r3,[r7,#2]
 297:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 298:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)column) >> 2;
 711              	 .loc 1 298 0
 712 0010 FB78     	 ldrb r3,[r7,#3]
 713 0012 9B08     	 lsrs r3,r3,#2
 714 0014 FB73     	 strb r3,[r7,#15]
 299:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)column & 0x03) * 8;
 715              	 .loc 1 299 0
 716 0016 FB78     	 ldrb r3,[r7,#3]
 717 0018 03F00303 	 and r3,r3,#3
 718 001c DBB2     	 uxtb r3,r3
 719 001e DB00     	 lsls r3,r3,#3
 720 0020 BB73     	 strb r3,[r7,#14]
 300:../Libraries/XMCLib/src/xmc_ledts.c **** 
 301:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Column_Brightness:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(led
 302:../Libraries/XMCLib/src/xmc_ledts.c **** 
 303:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg = ledts->LDCMP[reg_index];
 721              	 .loc 1 303 0
 722 0022 FB7B     	 ldrb r3,[r7,#15]
 723 0024 7A68     	 ldr r2,[r7,#4]
 724 0026 0633     	 adds r3,r3,#6
 725 0028 9B00     	 lsls r3,r3,#2
 726 002a 1344     	 add r3,r3,r2
 727 002c 5B68     	 ldr r3,[r3,#4]
 728 002e BB60     	 str r3,[r7,#8]
 304:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg &= (~(0xff << bit_shift_count));
 729              	 .loc 1 304 0
 730 0030 BB7B     	 ldrb r3,[r7,#14]
 731 0032 FF22     	 movs r2,#255
 732 0034 02FA03F3 	 lsl r3,r2,r3
 733 0038 DB43     	 mvns r3,r3
 734 003a 1A46     	 mov r2,r3
 735 003c BB68     	 ldr r3,[r7,#8]
 736 003e 1340     	 ands r3,r3,r2
 737 0040 BB60     	 str r3,[r7,#8]
 305:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg |= brightness << bit_shift_count;
 738              	 .loc 1 305 0
 739 0042 BA78     	 ldrb r2,[r7,#2]
 740 0044 BB7B     	 ldrb r3,[r7,#14]
 741 0046 02FA03F3 	 lsl r3,r2,r3
 742 004a 1A46     	 mov r2,r3
 743 004c BB68     	 ldr r3,[r7,#8]
 744 004e 1343     	 orrs r3,r3,r2
 745 0050 BB60     	 str r3,[r7,#8]
 306:../Libraries/XMCLib/src/xmc_ledts.c **** 	ledts->LDCMP[reg_index] = reg;
 746              	 .loc 1 306 0
 747 0052 FB7B     	 ldrb r3,[r7,#15]
 748 0054 7A68     	 ldr r2,[r7,#4]
 749 0056 0633     	 adds r3,r3,#6
 750 0058 9B00     	 lsls r3,r3,#2
 751 005a 1344     	 add r3,r3,r2
 752 005c BA68     	 ldr r2,[r7,#8]
 753 005e 5A60     	 str r2,[r3,#4]
 307:../Libraries/XMCLib/src/xmc_ledts.c **** }
 754              	 .loc 1 307 0
 755 0060 1437     	 adds r7,r7,#20
 756              	.LCFI62:
 757              	 .cfi_def_cfa_offset 4
 758 0062 BD46     	 mov sp,r7
 759              	.LCFI63:
 760              	 .cfi_def_cfa_register 13
 761              	 
 762 0064 5DF8047B 	 ldr r7,[sp],#4
 763              	.LCFI64:
 764              	 .cfi_restore 7
 765              	 .cfi_def_cfa_offset 0
 766 0068 7047     	 bx lr
 767              	 .cfi_endproc
 768              	.LFE189:
 770 006a 00BF     	 .section .text.XMC_LEDTS_SetCommonOscillationWindow,"ax",%progbits
 771              	 .align 2
 772              	 .global XMC_LEDTS_SetCommonOscillationWindow
 773              	 .thumb
 774              	 .thumb_func
 776              	XMC_LEDTS_SetCommonOscillationWindow:
 777              	.LFB190:
 308:../Libraries/XMCLib/src/xmc_ledts.c **** 
 309:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 310:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to set common oscillation window size for touch-sense inputs
 311:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 312:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetCommonOscillationWindow(XMC_LEDTS_t *const ledts, const uint8_t common_size)
 313:../Libraries/XMCLib/src/xmc_ledts.c **** {
 778              	 .loc 1 313 0
 779              	 .cfi_startproc
 780              	 
 781              	 
 782              	 
 783 0000 80B4     	 push {r7}
 784              	.LCFI65:
 785              	 .cfi_def_cfa_offset 4
 786              	 .cfi_offset 7,-4
 787 0002 85B0     	 sub sp,sp,#20
 788              	.LCFI66:
 789              	 .cfi_def_cfa_offset 24
 790 0004 00AF     	 add r7,sp,#0
 791              	.LCFI67:
 792              	 .cfi_def_cfa_register 7
 793 0006 7860     	 str r0,[r7,#4]
 794 0008 0B46     	 mov r3,r1
 795 000a FB70     	 strb r3,[r7,#3]
 314:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 315:../Libraries/XMCLib/src/xmc_ledts.c **** 
 316:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Common_Oscillation_Window:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL
 317:../Libraries/XMCLib/src/xmc_ledts.c **** 
 318:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->LDCMP[1];
 796              	 .loc 1 318 0
 797 000c 7B68     	 ldr r3,[r7,#4]
 798 000e 1B6A     	 ldr r3,[r3,#32]
 799 0010 FB60     	 str r3,[r7,#12]
 319:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= ~LEDTS_LDCMP1_CMP_LDA_TSCOM_Msk;
 800              	 .loc 1 319 0
 801 0012 FB68     	 ldr r3,[r7,#12]
 802 0014 23F07F43 	 bic r3,r3,#-16777216
 803 0018 FB60     	 str r3,[r7,#12]
 320:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= (common_size << LEDTS_LDCMP1_CMP_LDA_TSCOM_Pos);
 804              	 .loc 1 320 0
 805 001a FB78     	 ldrb r3,[r7,#3]
 806 001c 1B06     	 lsls r3,r3,#24
 807 001e 1A46     	 mov r2,r3
 808 0020 FB68     	 ldr r3,[r7,#12]
 809 0022 1343     	 orrs r3,r3,r2
 810 0024 FB60     	 str r3,[r7,#12]
 321:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->LDCMP[1] = reg;
 811              	 .loc 1 321 0
 812 0026 7B68     	 ldr r3,[r7,#4]
 813 0028 FA68     	 ldr r2,[r7,#12]
 814 002a 1A62     	 str r2,[r3,#32]
 322:../Libraries/XMCLib/src/xmc_ledts.c **** }
 815              	 .loc 1 322 0
 816 002c 1437     	 adds r7,r7,#20
 817              	.LCFI68:
 818              	 .cfi_def_cfa_offset 4
 819 002e BD46     	 mov sp,r7
 820              	.LCFI69:
 821              	 .cfi_def_cfa_register 13
 822              	 
 823 0030 5DF8047B 	 ldr r7,[sp],#4
 824              	.LCFI70:
 825              	 .cfi_restore 7
 826              	 .cfi_def_cfa_offset 0
 827 0034 7047     	 bx lr
 828              	 .cfi_endproc
 829              	.LFE190:
 831 0036 00BF     	 .section .text.XMC_LEDTS_ReadFNCOL,"ax",%progbits
 832              	 .align 2
 833              	 .global XMC_LEDTS_ReadFNCOL
 834              	 .thumb
 835              	 .thumb_func
 837              	XMC_LEDTS_ReadFNCOL:
 838              	.LFB191:
 323:../Libraries/XMCLib/src/xmc_ledts.c **** 
 324:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 325:../Libraries/XMCLib/src/xmc_ledts.c ****   * Checking the previous active function or LED column status
 326:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 327:../Libraries/XMCLib/src/xmc_ledts.c **** uint32_t XMC_LEDTS_ReadFNCOL(XMC_LEDTS_t *const ledts)
 328:../Libraries/XMCLib/src/xmc_ledts.c **** {
 839              	 .loc 1 328 0
 840              	 .cfi_startproc
 841              	 
 842              	 
 843              	 
 844 0000 80B4     	 push {r7}
 845              	.LCFI71:
 846              	 .cfi_def_cfa_offset 4
 847              	 .cfi_offset 7,-4
 848 0002 85B0     	 sub sp,sp,#20
 849              	.LCFI72:
 850              	 .cfi_def_cfa_offset 24
 851 0004 00AF     	 add r7,sp,#0
 852              	.LCFI73:
 853              	 .cfi_def_cfa_register 7
 854 0006 7860     	 str r0,[r7,#4]
 329:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t fncol_read;
 330:../Libraries/XMCLib/src/xmc_ledts.c **** 
 331:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Read_FNCOL:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 332:../Libraries/XMCLib/src/xmc_ledts.c **** 
 333:../Libraries/XMCLib/src/xmc_ledts.c ****   fncol_read = ledts->FNCTL & LEDTS_FNCTL_FNCOL_Msk;
 855              	 .loc 1 333 0
 856 0008 7B68     	 ldr r3,[r7,#4]
 857 000a 9B68     	 ldr r3,[r3,#8]
 858 000c 03F0E003 	 and r3,r3,#224
 859 0010 FB60     	 str r3,[r7,#12]
 334:../Libraries/XMCLib/src/xmc_ledts.c ****   fncol_read >>= LEDTS_FNCTL_FNCOL_Pos;
 860              	 .loc 1 334 0
 861 0012 FB68     	 ldr r3,[r7,#12]
 862 0014 5B09     	 lsrs r3,r3,#5
 863 0016 FB60     	 str r3,[r7,#12]
 335:../Libraries/XMCLib/src/xmc_ledts.c **** 
 336:../Libraries/XMCLib/src/xmc_ledts.c ****   return fncol_read;
 864              	 .loc 1 336 0
 865 0018 FB68     	 ldr r3,[r7,#12]
 337:../Libraries/XMCLib/src/xmc_ledts.c **** }
 866              	 .loc 1 337 0
 867 001a 1846     	 mov r0,r3
 868 001c 1437     	 adds r7,r7,#20
 869              	.LCFI74:
 870              	 .cfi_def_cfa_offset 4
 871 001e BD46     	 mov sp,r7
 872              	.LCFI75:
 873              	 .cfi_def_cfa_register 13
 874              	 
 875 0020 5DF8047B 	 ldr r7,[sp],#4
 876              	.LCFI76:
 877              	 .cfi_restore 7
 878              	 .cfi_def_cfa_offset 0
 879 0024 7047     	 bx lr
 880              	 .cfi_endproc
 881              	.LFE191:
 883 0026 00BF     	 .section .text.XMC_LEDTS_SetNumOfLEDColumns,"ax",%progbits
 884              	 .align 2
 885              	 .global XMC_LEDTS_SetNumOfLEDColumns
 886              	 .thumb
 887              	 .thumb_func
 889              	XMC_LEDTS_SetNumOfLEDColumns:
 890              	.LFB192:
 338:../Libraries/XMCLib/src/xmc_ledts.c **** 
 339:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 340:../Libraries/XMCLib/src/xmc_ledts.c ****   * Set the number of LED column Enabled
 341:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 342:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetNumOfLEDColumns(XMC_LEDTS_t *const ledts, uint8_t count)
 343:../Libraries/XMCLib/src/xmc_ledts.c **** {
 891              	 .loc 1 343 0
 892              	 .cfi_startproc
 893              	 
 894              	 
 895              	 
 896 0000 80B4     	 push {r7}
 897              	.LCFI77:
 898              	 .cfi_def_cfa_offset 4
 899              	 .cfi_offset 7,-4
 900 0002 83B0     	 sub sp,sp,#12
 901              	.LCFI78:
 902              	 .cfi_def_cfa_offset 16
 903 0004 00AF     	 add r7,sp,#0
 904              	.LCFI79:
 905              	 .cfi_def_cfa_register 7
 906 0006 7860     	 str r0,[r7,#4]
 907 0008 0B46     	 mov r3,r1
 908 000a FB70     	 strb r3,[r7,#3]
 344:../Libraries/XMCLib/src/xmc_ledts.c **** 
 345:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_SetNumOfLEDColumns:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts)
 346:../Libraries/XMCLib/src/xmc_ledts.c **** 
 347:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= ~(LEDTS_FNCTL_NR_LEDCOL_Msk);
 909              	 .loc 1 347 0
 910 000c 7B68     	 ldr r3,[r7,#4]
 911 000e 9B68     	 ldr r3,[r3,#8]
 912 0010 23F06042 	 bic r2,r3,#-536870912
 913 0014 7B68     	 ldr r3,[r7,#4]
 914 0016 9A60     	 str r2,[r3,#8]
 348:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (count << LEDTS_FNCTL_NR_LEDCOL_Pos);
 915              	 .loc 1 348 0
 916 0018 7B68     	 ldr r3,[r7,#4]
 917 001a 9B68     	 ldr r3,[r3,#8]
 918 001c FA78     	 ldrb r2,[r7,#3]
 919 001e 5207     	 lsls r2,r2,#29
 920 0020 1A43     	 orrs r2,r2,r3
 921 0022 7B68     	 ldr r3,[r7,#4]
 922 0024 9A60     	 str r2,[r3,#8]
 349:../Libraries/XMCLib/src/xmc_ledts.c **** }
 923              	 .loc 1 349 0
 924 0026 0C37     	 adds r7,r7,#12
 925              	.LCFI80:
 926              	 .cfi_def_cfa_offset 4
 927 0028 BD46     	 mov sp,r7
 928              	.LCFI81:
 929              	 .cfi_def_cfa_register 13
 930              	 
 931 002a 5DF8047B 	 ldr r7,[sp],#4
 932              	.LCFI82:
 933              	 .cfi_restore 7
 934              	 .cfi_def_cfa_offset 0
 935 002e 7047     	 bx lr
 936              	 .cfi_endproc
 937              	.LFE192:
 939              	 .section .text.XMC_LEDTS_ReadTSVAL,"ax",%progbits
 940              	 .align 2
 941              	 .global XMC_LEDTS_ReadTSVAL
 942              	 .thumb
 943              	 .thumb_func
 945              	XMC_LEDTS_ReadTSVAL:
 946              	.LFB193:
 350:../Libraries/XMCLib/src/xmc_ledts.c **** 
 351:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 352:../Libraries/XMCLib/src/xmc_ledts.c ****   * Reading recorded number of oscillation counts
 353:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 354:../Libraries/XMCLib/src/xmc_ledts.c **** uint16_t XMC_LEDTS_ReadTSVAL(XMC_LEDTS_t *const ledts)
 355:../Libraries/XMCLib/src/xmc_ledts.c **** {
 947              	 .loc 1 355 0
 948              	 .cfi_startproc
 949              	 
 950              	 
 951              	 
 952 0000 80B4     	 push {r7}
 953              	.LCFI83:
 954              	 .cfi_def_cfa_offset 4
 955              	 .cfi_offset 7,-4
 956 0002 85B0     	 sub sp,sp,#20
 957              	.LCFI84:
 958              	 .cfi_def_cfa_offset 24
 959 0004 00AF     	 add r7,sp,#0
 960              	.LCFI85:
 961              	 .cfi_def_cfa_register 7
 962 0006 7860     	 str r0,[r7,#4]
 356:../Libraries/XMCLib/src/xmc_ledts.c ****   uint16_t no_of_oscillations;
 357:../Libraries/XMCLib/src/xmc_ledts.c **** 
 358:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Read_TSVAL:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 359:../Libraries/XMCLib/src/xmc_ledts.c **** 
 360:../Libraries/XMCLib/src/xmc_ledts.c ****   no_of_oscillations = (ledts->TSVAL & 0xFFFF);
 963              	 .loc 1 360 0
 964 0008 7B68     	 ldr r3,[r7,#4]
 965 000a 1B69     	 ldr r3,[r3,#16]
 966 000c FB81     	 strh r3,[r7,#14]
 361:../Libraries/XMCLib/src/xmc_ledts.c **** 
 362:../Libraries/XMCLib/src/xmc_ledts.c ****   return no_of_oscillations;
 967              	 .loc 1 362 0
 968 000e FB89     	 ldrh r3,[r7,#14]
 363:../Libraries/XMCLib/src/xmc_ledts.c **** }
 969              	 .loc 1 363 0
 970 0010 1846     	 mov r0,r3
 971 0012 1437     	 adds r7,r7,#20
 972              	.LCFI86:
 973              	 .cfi_def_cfa_offset 4
 974 0014 BD46     	 mov sp,r7
 975              	.LCFI87:
 976              	 .cfi_def_cfa_register 13
 977              	 
 978 0016 5DF8047B 	 ldr r7,[sp],#4
 979              	.LCFI88:
 980              	 .cfi_restore 7
 981              	 .cfi_def_cfa_offset 0
 982 001a 7047     	 bx lr
 983              	 .cfi_endproc
 984              	.LFE193:
 986              	 .section .text.XMC_LEDTS_SetOscillationWindow,"ax",%progbits
 987              	 .align 2
 988              	 .global XMC_LEDTS_SetOscillationWindow
 989              	 .thumb
 990              	 .thumb_func
 992              	XMC_LEDTS_SetOscillationWindow:
 993              	.LFB194:
 364:../Libraries/XMCLib/src/xmc_ledts.c **** 
 365:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 366:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to adjust the size of oscillation window
 367:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 368:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetOscillationWindow(XMC_LEDTS_t *const ledts, XMC_LEDTS_NUMBER_TS_INPUT_t touchpad,
 369:../Libraries/XMCLib/src/xmc_ledts.c **** {
 994              	 .loc 1 369 0
 995              	 .cfi_startproc
 996              	 
 997              	 
 998              	 
 999 0000 80B4     	 push {r7}
 1000              	.LCFI89:
 1001              	 .cfi_def_cfa_offset 4
 1002              	 .cfi_offset 7,-4
 1003 0002 85B0     	 sub sp,sp,#20
 1004              	.LCFI90:
 1005              	 .cfi_def_cfa_offset 24
 1006 0004 00AF     	 add r7,sp,#0
 1007              	.LCFI91:
 1008              	 .cfi_def_cfa_register 7
 1009 0006 7860     	 str r0,[r7,#4]
 1010 0008 0B46     	 mov r3,r1
 1011 000a FB70     	 strb r3,[r7,#3]
 1012 000c 1346     	 mov r3,r2
 1013 000e BB70     	 strb r3,[r7,#2]
 370:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 371:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)touchpad) >> 2;
 1014              	 .loc 1 371 0
 1015 0010 FB78     	 ldrb r3,[r7,#3]
 1016 0012 9B08     	 lsrs r3,r3,#2
 1017 0014 FB73     	 strb r3,[r7,#15]
 372:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)touchpad & 0x03) * 8;
 1018              	 .loc 1 372 0
 1019 0016 FB78     	 ldrb r3,[r7,#3]
 1020 0018 03F00303 	 and r3,r3,#3
 1021 001c DBB2     	 uxtb r3,r3
 1022 001e DB00     	 lsls r3,r3,#3
 1023 0020 BB73     	 strb r3,[r7,#14]
 373:../Libraries/XMCLib/src/xmc_ledts.c **** 
 374:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Oscillation_Window:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(le
 375:../Libraries/XMCLib/src/xmc_ledts.c **** 
 376:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg = ledts->TSCMP[reg_index];
 1024              	 .loc 1 376 0
 1025 0022 FB7B     	 ldrb r3,[r7,#15]
 1026 0024 7A68     	 ldr r2,[r7,#4]
 1027 0026 0833     	 adds r3,r3,#8
 1028 0028 9B00     	 lsls r3,r3,#2
 1029 002a 1344     	 add r3,r3,r2
 1030 002c 5B68     	 ldr r3,[r3,#4]
 1031 002e BB60     	 str r3,[r7,#8]
 377:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg &= (~(0xff << bit_shift_count));
 1032              	 .loc 1 377 0
 1033 0030 BB7B     	 ldrb r3,[r7,#14]
 1034 0032 FF22     	 movs r2,#255
 1035 0034 02FA03F3 	 lsl r3,r2,r3
 1036 0038 DB43     	 mvns r3,r3
 1037 003a 1A46     	 mov r2,r3
 1038 003c BB68     	 ldr r3,[r7,#8]
 1039 003e 1340     	 ands r3,r3,r2
 1040 0040 BB60     	 str r3,[r7,#8]
 378:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg |= size << bit_shift_count;
 1041              	 .loc 1 378 0
 1042 0042 BA78     	 ldrb r2,[r7,#2]
 1043 0044 BB7B     	 ldrb r3,[r7,#14]
 1044 0046 02FA03F3 	 lsl r3,r2,r3
 1045 004a 1A46     	 mov r2,r3
 1046 004c BB68     	 ldr r3,[r7,#8]
 1047 004e 1343     	 orrs r3,r3,r2
 1048 0050 BB60     	 str r3,[r7,#8]
 379:../Libraries/XMCLib/src/xmc_ledts.c **** 	ledts->TSCMP[reg_index] = reg;
 1049              	 .loc 1 379 0
 1050 0052 FB7B     	 ldrb r3,[r7,#15]
 1051 0054 7A68     	 ldr r2,[r7,#4]
 1052 0056 0833     	 adds r3,r3,#8
 1053 0058 9B00     	 lsls r3,r3,#2
 1054 005a 1344     	 add r3,r3,r2
 1055 005c BA68     	 ldr r2,[r7,#8]
 1056 005e 5A60     	 str r2,[r3,#4]
 380:../Libraries/XMCLib/src/xmc_ledts.c **** }
 1057              	 .loc 1 380 0
 1058 0060 1437     	 adds r7,r7,#20
 1059              	.LCFI92:
 1060              	 .cfi_def_cfa_offset 4
 1061 0062 BD46     	 mov sp,r7
 1062              	.LCFI93:
 1063              	 .cfi_def_cfa_register 13
 1064              	 
 1065 0064 5DF8047B 	 ldr r7,[sp],#4
 1066              	.LCFI94:
 1067              	 .cfi_restore 7
 1068              	 .cfi_def_cfa_offset 0
 1069 0068 7047     	 bx lr
 1070              	 .cfi_endproc
 1071              	.LFE194:
 1073 006a 00BF     	 .text
 1074              	.Letext0:
 1075              	 .file 2 "c:\\tools\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1076              	 .file 3 "c:\\tools\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1077              	 .file 4 "C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/CMSIS/Infineon/XMC4300_series/Include/XMC4300.h"
 1078              	 .file 5 "C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc/xmc4_scu.h"
 1079              	 .file 6 "C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/XMCLib/inc/xmc_ledts.h"
 1080              	 .file 7 "C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/CMSIS/Include/cmsis_gcc.h"
 1081              	 .file 8 "C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/CMSIS/Include/core_cm4.h"
 1082              	 .file 9 "C:/Users/Admin/DaveWorkspaces/XMC4300_Motor_Controller/Libraries/CMSIS/Infineon/XMC4300_series/Include/system_XMC4300.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ledts.c
    {standard input}:20     .text.XMC_LEDTS_InitGlobal:00000000 $t
    {standard input}:25     .text.XMC_LEDTS_InitGlobal:00000000 XMC_LEDTS_InitGlobal
    {standard input}:89     .text.XMC_LEDTS_InitGlobal:00000040 $d
    {standard input}:95     .text.XMC_LEDTS_InitLED:00000000 $t
    {standard input}:100    .text.XMC_LEDTS_InitLED:00000000 XMC_LEDTS_InitLED
    {standard input}:171    .text.XMC_LEDTS_InitTSBasic:00000000 $t
    {standard input}:176    .text.XMC_LEDTS_InitTSBasic:00000000 XMC_LEDTS_InitTSBasic
    {standard input}:250    .text.XMC_LEDTS_InitTSBasic:00000054 $d
    {standard input}:255    .text.XMC_LEDTS_InitTSAdvanced:00000000 $t
    {standard input}:260    .text.XMC_LEDTS_InitTSAdvanced:00000000 XMC_LEDTS_InitTSAdvanced
    {standard input}:346    .text.XMC_LEDTS_InitTSAdvanced:00000068 $d
    {standard input}:351    .text.XMC_LEDTS_StartCounter:00000000 $t
    {standard input}:356    .text.XMC_LEDTS_StartCounter:00000000 XMC_LEDTS_StartCounter
    {standard input}:401    .text.XMC_LEDTS_StopCounter:00000000 $t
    {standard input}:406    .text.XMC_LEDTS_StopCounter:00000000 XMC_LEDTS_StopCounter
    {standard input}:447    .text.XMC_LEDTS_ReadInterruptFlag:00000000 $t
    {standard input}:452    .text.XMC_LEDTS_ReadInterruptFlag:00000000 XMC_LEDTS_ReadInterruptFlag
    {standard input}:492    .text.XMC_LEDTS_SetActivePADNo:00000000 $t
    {standard input}:497    .text.XMC_LEDTS_SetActivePADNo:00000000 XMC_LEDTS_SetActivePADNo
    {standard input}:551    .text.XMC_LEDTS_ClearInterruptFlag:00000000 $t
    {standard input}:556    .text.XMC_LEDTS_ClearInterruptFlag:00000000 XMC_LEDTS_ClearInterruptFlag
    {standard input}:597    .text.XMC_LEDTS_SetLEDLinePattern:00000000 $t
    {standard input}:602    .text.XMC_LEDTS_SetLEDLinePattern:00000000 XMC_LEDTS_SetLEDLinePattern
    {standard input}:684    .text.XMC_LEDTS_SetColumnBrightness:00000000 $t
    {standard input}:689    .text.XMC_LEDTS_SetColumnBrightness:00000000 XMC_LEDTS_SetColumnBrightness
    {standard input}:771    .text.XMC_LEDTS_SetCommonOscillationWindow:00000000 $t
    {standard input}:776    .text.XMC_LEDTS_SetCommonOscillationWindow:00000000 XMC_LEDTS_SetCommonOscillationWindow
    {standard input}:832    .text.XMC_LEDTS_ReadFNCOL:00000000 $t
    {standard input}:837    .text.XMC_LEDTS_ReadFNCOL:00000000 XMC_LEDTS_ReadFNCOL
    {standard input}:884    .text.XMC_LEDTS_SetNumOfLEDColumns:00000000 $t
    {standard input}:889    .text.XMC_LEDTS_SetNumOfLEDColumns:00000000 XMC_LEDTS_SetNumOfLEDColumns
    {standard input}:940    .text.XMC_LEDTS_ReadTSVAL:00000000 $t
    {standard input}:945    .text.XMC_LEDTS_ReadTSVAL:00000000 XMC_LEDTS_ReadTSVAL
    {standard input}:987    .text.XMC_LEDTS_SetOscillationWindow:00000000 $t
    {standard input}:992    .text.XMC_LEDTS_SetOscillationWindow:00000000 XMC_LEDTS_SetOscillationWindow
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
